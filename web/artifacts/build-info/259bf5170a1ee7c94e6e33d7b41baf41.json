{"id":"259bf5170a1ee7c94e6e33d7b41baf41","_format":"hh-sol-build-info-1","solcVersion":"0.8.27","solcLongVersion":"0.8.27+commit.40a35a09","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"},"@openzeppelin/contracts/interfaces/IERC1363Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363Receiver.sol)\n\npragma solidity >=0.5.0;\n\n/**\n * @title IERC1363Receiver\n * @dev Interface for any contract that wants to support `transferAndCall` or `transferFromAndCall`\n * from ERC-1363 token contracts.\n */\ninterface IERC1363Receiver {\n    /**\n     * @dev Whenever ERC-1363 tokens are transferred to this contract via `transferAndCall` or `transferFromAndCall`\n     * by `operator` from `from`, this function is called.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onTransferReceived(address,address,uint256,bytes)\"))`\n     * (i.e. 0x88a7ca5c, or its own function selector).\n     *\n     * @param operator The address which called `transferAndCall` or `transferFromAndCall` function.\n     * @param from The address which the tokens are transferred from.\n     * @param value The amount of tokens transferred.\n     * @param data Additional data with no specified format.\n     * @return `bytes4(keccak256(\"onTransferReceived(address,address,uint256,bytes)\"))` if transfer is allowed unless throwing.\n     */\n    function onTransferReceived(\n        address operator,\n        address from,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/interfaces/IERC1363Spender.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363Spender.sol)\n\npragma solidity >=0.5.0;\n\n/**\n * @title IERC1363Spender\n * @dev Interface for any contract that wants to support `approveAndCall`\n * from ERC-1363 token contracts.\n */\ninterface IERC1363Spender {\n    /**\n     * @dev Whenever an ERC-1363 token `owner` approves this contract via `approveAndCall`\n     * to spend their tokens, this function is called.\n     *\n     * NOTE: To accept the approval, this must return\n     * `bytes4(keccak256(\"onApprovalReceived(address,uint256,bytes)\"))`\n     * (i.e. 0x7b04a2d0, or its own function selector).\n     *\n     * @param owner The address which called `approveAndCall` function and previously owned the tokens.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format.\n     * @return `bytes4(keccak256(\"onApprovalReceived(address,uint256,bytes)\"))` if approval is allowed unless throwing.\n     */\n    function onApprovalReceived(address owner, uint256 value, bytes calldata data) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/interfaces/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC20.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC3156FlashBorrower.sol)\n\npragma solidity >=0.5.0;\n\n/**\n * @dev Interface of the ERC-3156 FlashBorrower, as defined in\n * https://eips.ethereum.org/EIPS/eip-3156[ERC-3156].\n */\ninterface IERC3156FlashBorrower {\n    /**\n     * @dev Receive a flash loan.\n     * @param initiator The initiator of the loan.\n     * @param token The loan currency.\n     * @param amount The amount of tokens lent.\n     * @param fee The additional amount of tokens to repay.\n     * @param data Arbitrary data structure, intended to contain user-defined parameters.\n     * @return The keccak256 hash of \"ERC3156FlashBorrower.onFlashLoan\"\n     */\n    function onFlashLoan(\n        address initiator,\n        address token,\n        uint256 amount,\n        uint256 fee,\n        bytes calldata data\n    ) external returns (bytes32);\n}\n"},"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC3156FlashLender.sol)\n\npragma solidity >=0.5.0;\n\nimport {IERC3156FlashBorrower} from \"./IERC3156FlashBorrower.sol\";\n\n/**\n * @dev Interface of the ERC-3156 FlashLender, as defined in\n * https://eips.ethereum.org/EIPS/eip-3156[ERC-3156].\n */\ninterface IERC3156FlashLender {\n    /**\n     * @dev The amount of currency available to be lended.\n     * @param token The loan currency.\n     * @return The amount of `token` that can be borrowed.\n     */\n    function maxFlashLoan(address token) external view returns (uint256);\n\n    /**\n     * @dev The fee to be charged for a given loan.\n     * @param token The loan currency.\n     * @param amount The amount of tokens lent.\n     * @return The amount of `token` to be charged for the loan, on top of the returned principal.\n     */\n    function flashFee(address token, uint256 amount) external view returns (uint256);\n\n    /**\n     * @dev Initiate a flash loan.\n     * @param receiver The receiver of the tokens in the loan, and the receiver of the callback.\n     * @param token The loan currency.\n     * @param amount The amount of tokens lent.\n     * @param data Arbitrary data structure, intended to contain user-defined parameters.\n     */\n    function flashLoan(\n        IERC3156FlashBorrower receiver,\n        address token,\n        uint256 amount,\n        bytes calldata data\n    ) external returns (bool);\n}\n"},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC5267.sol)\n\npragma solidity >=0.4.16;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /// @inheritdoc IERC20\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /// @inheritdoc IERC20\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /// @inheritdoc IERC20\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC1363.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/ERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {IERC165, ERC165} from \"../../../utils/introspection/ERC165.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\nimport {ERC1363Utils} from \"../utils/ERC1363Utils.sol\";\n\n/**\n * @title ERC1363\n * @dev Extension of {ERC20} tokens that adds support for code execution after transfers and approvals\n * on recipient contracts. Calls after transfers are enabled through the {ERC1363-transferAndCall} and\n * {ERC1363-transferFromAndCall} methods while calls after approvals can be made with {ERC1363-approveAndCall}\n *\n * _Available since v5.1._\n */\nabstract contract ERC1363 is ERC20, ERC165, IERC1363 {\n    /**\n     * @dev Indicates a failure within the {transfer} part of a transferAndCall operation.\n     * @param receiver Address to which tokens are being transferred.\n     * @param value Amount of tokens to be transferred.\n     */\n    error ERC1363TransferFailed(address receiver, uint256 value);\n\n    /**\n     * @dev Indicates a failure within the {transferFrom} part of a transferFromAndCall operation.\n     * @param sender Address from which to send tokens.\n     * @param receiver Address to which tokens are being transferred.\n     * @param value Amount of tokens to be transferred.\n     */\n    error ERC1363TransferFromFailed(address sender, address receiver, uint256 value);\n\n    /**\n     * @dev Indicates a failure within the {approve} part of a approveAndCall operation.\n     * @param spender Address which will spend the funds.\n     * @param value Amount of tokens to be spent.\n     */\n    error ERC1363ApproveFailed(address spender, uint256 value);\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return interfaceId == type(IERC1363).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`. Returns a flag that indicates\n     * if the call succeeded.\n     *\n     * Requirements:\n     *\n     * - The target has code (i.e. is a contract).\n     * - The target `to` must implement the {IERC1363Receiver} interface.\n     * - The target must return the {IERC1363Receiver-onTransferReceived} selector to accept the transfer.\n     * - The internal {transfer} must succeed (returned `true`).\n     */\n    function transferAndCall(address to, uint256 value) public returns (bool) {\n        return transferAndCall(to, value, \"\");\n    }\n\n    /**\n     * @dev Variant of {transferAndCall} that accepts an additional `data` parameter with\n     * no specified format.\n     */\n    function transferAndCall(address to, uint256 value, bytes memory data) public virtual returns (bool) {\n        if (!transfer(to, value)) {\n            revert ERC1363TransferFailed(to, value);\n        }\n        ERC1363Utils.checkOnERC1363TransferReceived(_msgSender(), _msgSender(), to, value, data);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`. Returns a flag that indicates\n     * if the call succeeded.\n     *\n     * Requirements:\n     *\n     * - The target has code (i.e. is a contract).\n     * - The target `to` must implement the {IERC1363Receiver} interface.\n     * - The target must return the {IERC1363Receiver-onTransferReceived} selector to accept the transfer.\n     * - The internal {transferFrom} must succeed (returned `true`).\n     */\n    function transferFromAndCall(address from, address to, uint256 value) public returns (bool) {\n        return transferFromAndCall(from, to, value, \"\");\n    }\n\n    /**\n     * @dev Variant of {transferFromAndCall} that accepts an additional `data` parameter with\n     * no specified format.\n     */\n    function transferFromAndCall(\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) public virtual returns (bool) {\n        if (!transferFrom(from, to, value)) {\n            revert ERC1363TransferFromFailed(from, to, value);\n        }\n        ERC1363Utils.checkOnERC1363TransferReceived(_msgSender(), from, to, value, data);\n        return true;\n    }\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * Returns a flag that indicates if the call succeeded.\n     *\n     * Requirements:\n     *\n     * - The target has code (i.e. is a contract).\n     * - The target `spender` must implement the {IERC1363Spender} interface.\n     * - The target must return the {IERC1363Spender-onApprovalReceived} selector to accept the approval.\n     * - The internal {approve} must succeed (returned `true`).\n     */\n    function approveAndCall(address spender, uint256 value) public returns (bool) {\n        return approveAndCall(spender, value, \"\");\n    }\n\n    /**\n     * @dev Variant of {approveAndCall} that accepts an additional `data` parameter with\n     * no specified format.\n     */\n    function approveAndCall(address spender, uint256 value, bytes memory data) public virtual returns (bool) {\n        if (!approve(spender, value)) {\n            revert ERC1363ApproveFailed(spender, value);\n        }\n        ERC1363Utils.checkOnERC1363ApprovalReceived(_msgSender(), spender, value, data);\n        return true;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20FlashMint.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/ERC20FlashMint.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC3156FlashBorrower} from \"../../../interfaces/IERC3156FlashBorrower.sol\";\nimport {IERC3156FlashLender} from \"../../../interfaces/IERC3156FlashLender.sol\";\nimport {ERC20} from \"../ERC20.sol\";\n\n/**\n * @dev Implementation of the ERC-3156 Flash loans extension, as defined in\n * https://eips.ethereum.org/EIPS/eip-3156[ERC-3156].\n *\n * Adds the {flashLoan} method, which provides flash loan support at the token\n * level. By default there is no fee, but this can be changed by overriding {flashFee}.\n *\n * NOTE: When this extension is used along with the {ERC20Capped} or {ERC20Votes} extensions,\n * {maxFlashLoan} will not correctly reflect the maximum that can be flash minted. We recommend\n * overriding {maxFlashLoan} so that it correctly reflects the supply cap.\n */\nabstract contract ERC20FlashMint is ERC20, IERC3156FlashLender {\n    bytes32 private constant RETURN_VALUE = keccak256(\"ERC3156FlashBorrower.onFlashLoan\");\n\n    /**\n     * @dev The loan token is not valid.\n     */\n    error ERC3156UnsupportedToken(address token);\n\n    /**\n     * @dev The requested loan exceeds the max loan value for `token`.\n     */\n    error ERC3156ExceededMaxLoan(uint256 maxLoan);\n\n    /**\n     * @dev The receiver of a flashloan is not a valid {IERC3156FlashBorrower-onFlashLoan} implementer.\n     */\n    error ERC3156InvalidReceiver(address receiver);\n\n    /**\n     * @dev Returns the maximum amount of tokens available for loan.\n     * @param token The address of the token that is requested.\n     * @return The amount of token that can be loaned.\n     *\n     * NOTE: This function does not consider any form of supply cap, so in case\n     * it's used in a token with a cap like {ERC20Capped}, make sure to override this\n     * function to integrate the cap instead of `type(uint256).max`.\n     */\n    function maxFlashLoan(address token) public view virtual returns (uint256) {\n        return token == address(this) ? type(uint256).max - totalSupply() : 0;\n    }\n\n    /**\n     * @dev Returns the fee applied when doing flash loans. This function calls\n     * the {_flashFee} function which returns the fee applied when doing flash\n     * loans.\n     * @param token The token to be flash loaned.\n     * @param value The amount of tokens to be loaned.\n     * @return The fees applied to the corresponding flash loan.\n     */\n    function flashFee(address token, uint256 value) public view virtual returns (uint256) {\n        if (token != address(this)) {\n            revert ERC3156UnsupportedToken(token);\n        }\n        return _flashFee(token, value);\n    }\n\n    /**\n     * @dev Returns the fee applied when doing flash loans. By default this\n     * implementation has 0 fees. This function can be overloaded to make\n     * the flash loan mechanism deflationary.\n     * @param token The token to be flash loaned.\n     * @param value The amount of tokens to be loaned.\n     * @return The fees applied to the corresponding flash loan.\n     */\n    function _flashFee(address token, uint256 value) internal view virtual returns (uint256) {\n        // silence warning about unused variable without the addition of bytecode.\n        token;\n        value;\n        return 0;\n    }\n\n    /**\n     * @dev Returns the receiver address of the flash fee. By default this\n     * implementation returns the address(0) which means the fee amount will be burnt.\n     * This function can be overloaded to change the fee receiver.\n     * @return The address for which the flash fee will be sent to.\n     */\n    function _flashFeeReceiver() internal view virtual returns (address) {\n        return address(0);\n    }\n\n    /**\n     * @dev Performs a flash loan. New tokens are minted and sent to the\n     * `receiver`, who is required to implement the {IERC3156FlashBorrower}\n     * interface. By the end of the flash loan, the receiver is expected to own\n     * value + fee tokens and have them approved back to the token contract itself so\n     * they can be burned.\n     * @param receiver The receiver of the flash loan. Should implement the\n     * {IERC3156FlashBorrower-onFlashLoan} interface.\n     * @param token The token to be flash loaned. Only `address(this)` is\n     * supported.\n     * @param value The amount of tokens to be loaned.\n     * @param data An arbitrary datafield that is passed to the receiver.\n     * @return `true` if the flash loan was successful.\n     */\n    // This function can reenter, but it doesn't pose a risk because it always preserves the property that the amount\n    // minted at the beginning is always recovered and burned at the end, or else the entire function will revert.\n    // slither-disable-next-line reentrancy-no-eth\n    function flashLoan(\n        IERC3156FlashBorrower receiver,\n        address token,\n        uint256 value,\n        bytes calldata data\n    ) public virtual returns (bool) {\n        uint256 maxLoan = maxFlashLoan(token);\n        if (value > maxLoan) {\n            revert ERC3156ExceededMaxLoan(maxLoan);\n        }\n        uint256 fee = flashFee(token, value);\n        _mint(address(receiver), value);\n        if (receiver.onFlashLoan(_msgSender(), token, value, fee, data) != RETURN_VALUE) {\n            revert ERC3156InvalidReceiver(address(receiver));\n        }\n        address flashFeeReceiver = _flashFeeReceiver();\n        _spendAllowance(address(receiver), address(this), value + fee);\n        if (fee == 0 || flashFeeReceiver == address(0)) {\n            _burn(address(receiver), value + fee);\n        } else {\n            _burn(address(receiver), value);\n            _transfer(address(receiver), flashFeeReceiver, fee);\n        }\n        return true;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/ERC20Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Pausable} from \"../../../utils/Pausable.sol\";\n\n/**\n * @dev ERC-20 token with pausable token transfers, minting and burning.\n *\n * Useful for scenarios such as preventing trades until the end of an evaluation\n * period, or having an emergency switch for freezing all token transfers in the\n * event of a large bug.\n *\n * IMPORTANT: This contract does not include public pause and unpause functions. In\n * addition to inheriting this contract, you must define both functions, invoking the\n * {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n * access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n * make the contract pause mechanism of the contract unreachable, and thus unusable.\n */\nabstract contract ERC20Pausable is ERC20, Pausable {\n    /**\n     * @dev See {ERC20-_update}.\n     *\n     * Requirements:\n     *\n     * - the contract must not be paused.\n     */\n    function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {\n        super._update(from, to, value);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/ERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20Permit} from \"./IERC20Permit.sol\";\nimport {ERC20} from \"../ERC20.sol\";\nimport {ECDSA} from \"../../../utils/cryptography/ECDSA.sol\";\nimport {EIP712} from \"../../../utils/cryptography/EIP712.sol\";\nimport {Nonces} from \"../../../utils/Nonces.sol\";\n\n/**\n * @dev Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712, Nonces {\n    bytes32 private constant PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n\n    /**\n     * @dev Permit deadline has expired.\n     */\n    error ERC2612ExpiredSignature(uint256 deadline);\n\n    /**\n     * @dev Mismatched signature.\n     */\n    error ERC2612InvalidSigner(address signer, address owner);\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC-20 token name.\n     */\n    constructor(string memory name) EIP712(name, \"1\") {}\n\n    /// @inheritdoc IERC20Permit\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        if (block.timestamp > deadline) {\n            revert ERC2612ExpiredSignature(deadline);\n        }\n\n        bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        if (signer != owner) {\n            revert ERC2612InvalidSigner(signer, owner);\n        }\n\n        _approve(owner, spender, value);\n    }\n\n    /// @inheritdoc IERC20Permit\n    function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {\n        return super.nonces(owner);\n    }\n\n    /// @inheritdoc IERC20Permit\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/ERC1363Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/utils/ERC1363Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1363Receiver} from \"../../../interfaces/IERC1363Receiver.sol\";\nimport {IERC1363Spender} from \"../../../interfaces/IERC1363Spender.sol\";\n\n/**\n * @dev Library that provides common ERC-1363 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n */\nlibrary ERC1363Utils {\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1363InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the token `spender`. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1363InvalidSpender(address spender);\n\n    /**\n     * @dev Performs a call to {IERC1363Receiver-onTransferReceived} on a target address.\n     *\n     * Requirements:\n     *\n     * - The target has code (i.e. is a contract).\n     * - The target `to` must implement the {IERC1363Receiver} interface.\n     * - The target must return the {IERC1363Receiver-onTransferReceived} selector to accept the transfer.\n     */\n    function checkOnERC1363TransferReceived(\n        address operator,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            revert ERC1363InvalidReceiver(to);\n        }\n\n        try IERC1363Receiver(to).onTransferReceived(operator, from, value, data) returns (bytes4 retval) {\n            if (retval != IERC1363Receiver.onTransferReceived.selector) {\n                revert ERC1363InvalidReceiver(to);\n            }\n        } catch (bytes memory reason) {\n            if (reason.length == 0) {\n                revert ERC1363InvalidReceiver(to);\n            } else {\n                assembly (\"memory-safe\") {\n                    revert(add(reason, 0x20), mload(reason))\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Performs a call to {IERC1363Spender-onApprovalReceived} on a target address.\n     *\n     * Requirements:\n     *\n     * - The target has code (i.e. is a contract).\n     * - The target `spender` must implement the {IERC1363Spender} interface.\n     * - The target must return the {IERC1363Spender-onApprovalReceived} selector to accept the approval.\n     */\n    function checkOnERC1363ApprovalReceived(\n        address operator,\n        address spender,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (spender.code.length == 0) {\n            revert ERC1363InvalidSpender(spender);\n        }\n\n        try IERC1363Spender(spender).onApprovalReceived(operator, value, data) returns (bytes4 retval) {\n            if (retval != IERC1363Spender.onApprovalReceived.selector) {\n                revert ERC1363InvalidSpender(spender);\n            }\n        } catch (bytes memory reason) {\n            if (reason.length == 0) {\n                revert ERC1363InvalidSpender(spender);\n            } else {\n                assembly (\"memory-safe\") {\n                    revert(add(reason, 0x20), mload(reason))\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes memory signature\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly (\"memory-safe\") {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"./MessageHashUtils.sol\";\nimport {ShortStrings, ShortString} from \"../ShortStrings.sol\";\nimport {IERC5267} from \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    // slither-disable-next-line constable-states\n    string private _nameFallback;\n    // slither-disable-next-line constable-states\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /// @inheritdoc IERC5267\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _name which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Name() internal view returns (string memory) {\n        return _name.toStringWithFallback(_nameFallback);\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _version which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Version() internal view returns (string memory) {\n        return _version.toStringWithFallback(_versionFallback);\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Variant of {toDataWithIntendedValidatorHash-address-bytes} optimized for cases where `data` is a bytes32.\n     */\n    function toDataWithIntendedValidatorHash(\n        address validator,\n        bytes32 messageHash\n    ) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, hex\"19_00\")\n            mstore(0x02, shl(96, validator))\n            mstore(0x16, messageHash)\n            digest := keccak256(0x00, 0x36)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Nonces.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Nonces.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides tracking nonces for addresses. Nonces will only increment.\n */\nabstract contract Nonces {\n    /**\n     * @dev The nonce used for an `account` is not the expected current nonce.\n     */\n    error InvalidAccountNonce(address account, uint256 currentNonce);\n\n    mapping(address account => uint256) private _nonces;\n\n    /**\n     * @dev Returns the next unused nonce for an address.\n     */\n    function nonces(address owner) public view virtual returns (uint256) {\n        return _nonces[owner];\n    }\n\n    /**\n     * @dev Consumes a nonce.\n     *\n     * Returns the current value and increments nonce.\n     */\n    function _useNonce(address owner) internal virtual returns (uint256) {\n        // For each account, the nonce has an initial value of 0, can only be incremented by one, and cannot be\n        // decremented or reset. This guarantees that the nonce never overflows.\n        unchecked {\n            // It is important to do x++ and not ++x here.\n            return _nonces[owner]++;\n        }\n    }\n\n    /**\n     * @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`.\n     */\n    function _useCheckedNonce(address owner, uint256 nonce) internal virtual {\n        uint256 current = _useNonce(owner);\n        if (nonce != current) {\n            revert InvalidAccountNonce(owner, current);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"},"@openzeppelin/contracts/utils/ShortStrings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        assembly (\"memory-safe\") {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {toShortStringWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n     * {toShortStringWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n    uint256 private constant SPECIAL_CHARS_LOOKUP =\n        (1 << 0x08) | // backspace\n            (1 << 0x09) | // tab\n            (1 << 0x0a) | // newline\n            (1 << 0x0c) | // form feed\n            (1 << 0x0d) | // carriage return\n            (1 << 0x22) | // double quote\n            (1 << 0x5c); // backslash\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(add(buffer, 0x20), length)\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guarantees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress-string} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress-string-uint256-uint256} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n     *\n     * WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n     *\n     * NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n     * RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n     * characters that are not in this range, but other tooling may provide different results.\n     */\n    function escapeJSON(string memory input) internal pure returns (string memory) {\n        bytes memory buffer = bytes(input);\n        bytes memory output = new bytes(2 * buffer.length); // worst case scenario\n        uint256 outputLength = 0;\n\n        for (uint256 i; i < buffer.length; ++i) {\n            bytes1 char = bytes1(_unsafeReadBytesOffset(buffer, i));\n            if (((SPECIAL_CHARS_LOOKUP & (1 << uint8(char))) != 0)) {\n                output[outputLength++] = \"\\\\\";\n                if (char == 0x08) output[outputLength++] = \"b\";\n                else if (char == 0x09) output[outputLength++] = \"t\";\n                else if (char == 0x0a) output[outputLength++] = \"n\";\n                else if (char == 0x0c) output[outputLength++] = \"f\";\n                else if (char == 0x0d) output[outputLength++] = \"r\";\n                else if (char == 0x5c) output[outputLength++] = \"\\\\\";\n                else if (char == 0x22) {\n                    // solhint-disable-next-line quotes\n                    output[outputLength++] = '\"';\n                }\n            } else {\n                output[outputLength++] = char;\n            }\n        }\n        // write the actual length and deallocate unused memory\n        assembly (\"memory-safe\") {\n            mstore(output, outputLength)\n            mstore(0x40, add(output, shl(5, shr(5, add(outputLength, 63)))))\n        }\n\n        return string(output);\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(add(buffer, 0x20), offset))\n        }\n    }\n}\n"},"Contracts/EduMetaCoinErc20.sol":{"content":"// SPDX-License-Identifier: MIT\n// Compatible with OpenZeppelin Contracts ^5.0.0\npragma solidity ^0.8.27;\n\nimport {ERC1363} from \"@openzeppelin/contracts/token/ERC20/extensions/ERC1363.sol\";\nimport {ERC20} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport {ERC20Burnable} from \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\nimport {ERC20FlashMint} from \"@openzeppelin/contracts/token/ERC20/extensions/ERC20FlashMint.sol\";\nimport {ERC20Pausable} from \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\";\nimport {ERC20Permit} from \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\";\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract EduMeta is\n    ERC20,\n    ERC20Burnable,\n    ERC20Pausable,\n    Ownable,\n    ERC1363,\n    ERC20Permit,\n    ERC20FlashMint\n{\n    constructor(\n        address initialOwner\n    ) ERC20(\"EduMeta\", \"EDT\") Ownable(initialOwner) ERC20Permit(\"EduMeta\") {}\n\n    function pause() public onlyOwner {\n        _pause();\n    }\n\n    function unpause() public onlyOwner {\n        _unpause();\n    }\n\n    function mint(address to, uint256 amount) public onlyOwner {\n        _mint(to, amount);\n    }\n\n    // The following functions are overrides required by Solidity.\n    function _update(\n        address from,\n        address to,\n        uint256 value\n    ) internal override(ERC20, ERC20Pausable) {\n        super._update(from, to, value);\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[2046],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":2047,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2046,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":2046,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,2046],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2028,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2028,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363.sol","exportedSymbols":{"IERC1363":[229],"IERC165":[4714],"IERC20":[1085]},"id":230,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"107:24:1"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","file":"./IERC20.sol","id":151,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":230,"sourceUnit":272,"src":"133:36:1","symbolAliases":[{"foreign":{"id":150,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"141:6:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"./IERC165.sol","id":153,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":230,"sourceUnit":268,"src":"170:38:1","symbolAliases":[{"foreign":{"id":152,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4714,"src":"178:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":155,"name":"IERC20","nameLocations":["590:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":1085,"src":"590:6:1"},"id":156,"nodeType":"InheritanceSpecifier","src":"590:6:1"},{"baseName":{"id":157,"name":"IERC165","nameLocations":["598:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":4714,"src":"598:7:1"},"id":158,"nodeType":"InheritanceSpecifier","src":"598:7:1"}],"canonicalName":"IERC1363","contractDependencies":[],"contractKind":"interface","documentation":{"id":154,"nodeType":"StructuredDocumentation","src":"210:357:1","text":" @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."},"fullyImplemented":false,"id":229,"linearizedBaseContracts":[229,4714,1085],"name":"IERC1363","nameLocation":"578:8:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":159,"nodeType":"StructuredDocumentation","src":"1148:370:1","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"1296ee62","id":168,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"1532:15:1","nodeType":"FunctionDefinition","parameters":{"id":164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":161,"mutability":"mutable","name":"to","nameLocation":"1556:2:1","nodeType":"VariableDeclaration","scope":168,"src":"1548:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":160,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":163,"mutability":"mutable","name":"value","nameLocation":"1568:5:1","nodeType":"VariableDeclaration","scope":168,"src":"1560:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":162,"name":"uint256","nodeType":"ElementaryTypeName","src":"1560:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1547:27:1"},"returnParameters":{"id":167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":166,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":168,"src":"1593:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":165,"name":"bool","nodeType":"ElementaryTypeName","src":"1593:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1592:6:1"},"scope":229,"src":"1523:76:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":169,"nodeType":"StructuredDocumentation","src":"1605:453:1","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"4000aea0","id":180,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"2072:15:1","nodeType":"FunctionDefinition","parameters":{"id":176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":171,"mutability":"mutable","name":"to","nameLocation":"2096:2:1","nodeType":"VariableDeclaration","scope":180,"src":"2088:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"2088:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":173,"mutability":"mutable","name":"value","nameLocation":"2108:5:1","nodeType":"VariableDeclaration","scope":180,"src":"2100:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":172,"name":"uint256","nodeType":"ElementaryTypeName","src":"2100:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":175,"mutability":"mutable","name":"data","nameLocation":"2130:4:1","nodeType":"VariableDeclaration","scope":180,"src":"2115:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":174,"name":"bytes","nodeType":"ElementaryTypeName","src":"2115:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2087:48:1"},"returnParameters":{"id":179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":178,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":180,"src":"2154:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":177,"name":"bool","nodeType":"ElementaryTypeName","src":"2154:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2153:6:1"},"scope":229,"src":"2063:97:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":181,"nodeType":"StructuredDocumentation","src":"2166:453:1","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"d8fbe994","id":192,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"2633:19:1","nodeType":"FunctionDefinition","parameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":183,"mutability":"mutable","name":"from","nameLocation":"2661:4:1","nodeType":"VariableDeclaration","scope":192,"src":"2653:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":182,"name":"address","nodeType":"ElementaryTypeName","src":"2653:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":185,"mutability":"mutable","name":"to","nameLocation":"2675:2:1","nodeType":"VariableDeclaration","scope":192,"src":"2667:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":184,"name":"address","nodeType":"ElementaryTypeName","src":"2667:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":187,"mutability":"mutable","name":"value","nameLocation":"2687:5:1","nodeType":"VariableDeclaration","scope":192,"src":"2679:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":186,"name":"uint256","nodeType":"ElementaryTypeName","src":"2679:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2652:41:1"},"returnParameters":{"id":191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":190,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":192,"src":"2712:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":189,"name":"bool","nodeType":"ElementaryTypeName","src":"2712:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2711:6:1"},"scope":229,"src":"2624:94:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":193,"nodeType":"StructuredDocumentation","src":"2724:536:1","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"c1d34b89","id":206,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"3274:19:1","nodeType":"FunctionDefinition","parameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":195,"mutability":"mutable","name":"from","nameLocation":"3302:4:1","nodeType":"VariableDeclaration","scope":206,"src":"3294:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":194,"name":"address","nodeType":"ElementaryTypeName","src":"3294:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":197,"mutability":"mutable","name":"to","nameLocation":"3316:2:1","nodeType":"VariableDeclaration","scope":206,"src":"3308:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":196,"name":"address","nodeType":"ElementaryTypeName","src":"3308:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":199,"mutability":"mutable","name":"value","nameLocation":"3328:5:1","nodeType":"VariableDeclaration","scope":206,"src":"3320:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":198,"name":"uint256","nodeType":"ElementaryTypeName","src":"3320:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":201,"mutability":"mutable","name":"data","nameLocation":"3350:4:1","nodeType":"VariableDeclaration","scope":206,"src":"3335:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":200,"name":"bytes","nodeType":"ElementaryTypeName","src":"3335:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3293:62:1"},"returnParameters":{"id":205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":204,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":206,"src":"3374:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":203,"name":"bool","nodeType":"ElementaryTypeName","src":"3374:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3373:6:1"},"scope":229,"src":"3265:115:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":207,"nodeType":"StructuredDocumentation","src":"3386:390:1","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"3177029f","id":216,"implemented":false,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"3790:14:1","nodeType":"FunctionDefinition","parameters":{"id":212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":209,"mutability":"mutable","name":"spender","nameLocation":"3813:7:1","nodeType":"VariableDeclaration","scope":216,"src":"3805:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":208,"name":"address","nodeType":"ElementaryTypeName","src":"3805:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":211,"mutability":"mutable","name":"value","nameLocation":"3830:5:1","nodeType":"VariableDeclaration","scope":216,"src":"3822:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":210,"name":"uint256","nodeType":"ElementaryTypeName","src":"3822:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3804:32:1"},"returnParameters":{"id":215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":214,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":216,"src":"3855:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":213,"name":"bool","nodeType":"ElementaryTypeName","src":"3855:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3854:6:1"},"scope":229,"src":"3781:80:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":217,"nodeType":"StructuredDocumentation","src":"3867:478:1","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"cae9ca51","id":228,"implemented":false,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"4359:14:1","nodeType":"FunctionDefinition","parameters":{"id":224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":219,"mutability":"mutable","name":"spender","nameLocation":"4382:7:1","nodeType":"VariableDeclaration","scope":228,"src":"4374:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":218,"name":"address","nodeType":"ElementaryTypeName","src":"4374:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":221,"mutability":"mutable","name":"value","nameLocation":"4399:5:1","nodeType":"VariableDeclaration","scope":228,"src":"4391:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":220,"name":"uint256","nodeType":"ElementaryTypeName","src":"4391:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":223,"mutability":"mutable","name":"data","nameLocation":"4421:4:1","nodeType":"VariableDeclaration","scope":228,"src":"4406:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":222,"name":"bytes","nodeType":"ElementaryTypeName","src":"4406:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4373:53:1"},"returnParameters":{"id":227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":228,"src":"4445:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":225,"name":"bool","nodeType":"ElementaryTypeName","src":"4445:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4444:6:1"},"scope":229,"src":"4350:101:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":230,"src":"568:3885:1","usedErrors":[],"usedEvents":[1019,1028]}],"src":"107:4347:1"},"id":1},"@openzeppelin/contracts/interfaces/IERC1363Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363Receiver.sol","exportedSymbols":{"IERC1363Receiver":[247]},"id":248,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":231,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"115:24:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1363Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":232,"nodeType":"StructuredDocumentation","src":"141:168:2","text":" @title IERC1363Receiver\n @dev Interface for any contract that wants to support `transferAndCall` or `transferFromAndCall`\n from ERC-1363 token contracts."},"fullyImplemented":false,"id":247,"linearizedBaseContracts":[247],"name":"IERC1363Receiver","nameLocation":"320:16:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":233,"nodeType":"StructuredDocumentation","src":"343:805:2","text":" @dev Whenever ERC-1363 tokens are transferred to this contract via `transferAndCall` or `transferFromAndCall`\n by `operator` from `from`, this function is called.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onTransferReceived(address,address,uint256,bytes)\"))`\n (i.e. 0x88a7ca5c, or its own function selector).\n @param operator The address which called `transferAndCall` or `transferFromAndCall` function.\n @param from The address which the tokens are transferred from.\n @param value The amount of tokens transferred.\n @param data Additional data with no specified format.\n @return `bytes4(keccak256(\"onTransferReceived(address,address,uint256,bytes)\"))` if transfer is allowed unless throwing."},"functionSelector":"88a7ca5c","id":246,"implemented":false,"kind":"function","modifiers":[],"name":"onTransferReceived","nameLocation":"1162:18:2","nodeType":"FunctionDefinition","parameters":{"id":242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":235,"mutability":"mutable","name":"operator","nameLocation":"1198:8:2","nodeType":"VariableDeclaration","scope":246,"src":"1190:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":234,"name":"address","nodeType":"ElementaryTypeName","src":"1190:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":237,"mutability":"mutable","name":"from","nameLocation":"1224:4:2","nodeType":"VariableDeclaration","scope":246,"src":"1216:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":236,"name":"address","nodeType":"ElementaryTypeName","src":"1216:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":239,"mutability":"mutable","name":"value","nameLocation":"1246:5:2","nodeType":"VariableDeclaration","scope":246,"src":"1238:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":238,"name":"uint256","nodeType":"ElementaryTypeName","src":"1238:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":241,"mutability":"mutable","name":"data","nameLocation":"1276:4:2","nodeType":"VariableDeclaration","scope":246,"src":"1261:19:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":240,"name":"bytes","nodeType":"ElementaryTypeName","src":"1261:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1180:106:2"},"returnParameters":{"id":245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":244,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":246,"src":"1305:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":243,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1305:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1304:8:2"},"scope":247,"src":"1153:160:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":248,"src":"310:1005:2","usedErrors":[],"usedEvents":[]}],"src":"115:1201:2"},"id":2},"@openzeppelin/contracts/interfaces/IERC1363Spender.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363Spender.sol","exportedSymbols":{"IERC1363Spender":[263]},"id":264,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":249,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"114:24:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1363Spender","contractDependencies":[],"contractKind":"interface","documentation":{"id":250,"nodeType":"StructuredDocumentation","src":"140:141:3","text":" @title IERC1363Spender\n @dev Interface for any contract that wants to support `approveAndCall`\n from ERC-1363 token contracts."},"fullyImplemented":false,"id":263,"linearizedBaseContracts":[263],"name":"IERC1363Spender","nameLocation":"292:15:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":251,"nodeType":"StructuredDocumentation","src":"314:692:3","text":" @dev Whenever an ERC-1363 token `owner` approves this contract via `approveAndCall`\n to spend their tokens, this function is called.\n NOTE: To accept the approval, this must return\n `bytes4(keccak256(\"onApprovalReceived(address,uint256,bytes)\"))`\n (i.e. 0x7b04a2d0, or its own function selector).\n @param owner The address which called `approveAndCall` function and previously owned the tokens.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format.\n @return `bytes4(keccak256(\"onApprovalReceived(address,uint256,bytes)\"))` if approval is allowed unless throwing."},"functionSelector":"7b04a2d0","id":262,"implemented":false,"kind":"function","modifiers":[],"name":"onApprovalReceived","nameLocation":"1020:18:3","nodeType":"FunctionDefinition","parameters":{"id":258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":253,"mutability":"mutable","name":"owner","nameLocation":"1047:5:3","nodeType":"VariableDeclaration","scope":262,"src":"1039:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":252,"name":"address","nodeType":"ElementaryTypeName","src":"1039:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":255,"mutability":"mutable","name":"value","nameLocation":"1062:5:3","nodeType":"VariableDeclaration","scope":262,"src":"1054:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":254,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":257,"mutability":"mutable","name":"data","nameLocation":"1084:4:3","nodeType":"VariableDeclaration","scope":262,"src":"1069:19:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":256,"name":"bytes","nodeType":"ElementaryTypeName","src":"1069:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1038:51:3"},"returnParameters":{"id":261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":260,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":262,"src":"1108:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":259,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1108:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1107:8:3"},"scope":263,"src":"1011:105:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":264,"src":"282:836:3","usedErrors":[],"usedEvents":[]}],"src":"114:1005:3"},"id":3},"@openzeppelin/contracts/interfaces/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","exportedSymbols":{"IERC165":[4714]},"id":268,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":265,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"106:25:4"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":267,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":268,"sourceUnit":4715,"src":"133:59:4","symbolAliases":[{"foreign":{"id":266,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4714,"src":"141:7:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:87:4"},"id":4},"@openzeppelin/contracts/interfaces/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","exportedSymbols":{"IERC20":[1085]},"id":272,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":269,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"105:25:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../token/ERC20/IERC20.sol","id":271,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":272,"sourceUnit":1086,"src":"132:49:5","symbolAliases":[{"foreign":{"id":270,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"140:6:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"105:77:5"},"id":5},"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol","exportedSymbols":{"IERC3156FlashBorrower":[291]},"id":292,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":273,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"120:24:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC3156FlashBorrower","contractDependencies":[],"contractKind":"interface","documentation":{"id":274,"nodeType":"StructuredDocumentation","src":"146:124:6","text":" @dev Interface of the ERC-3156 FlashBorrower, as defined in\n https://eips.ethereum.org/EIPS/eip-3156[ERC-3156]."},"fullyImplemented":false,"id":291,"linearizedBaseContracts":[291],"name":"IERC3156FlashBorrower","nameLocation":"281:21:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":275,"nodeType":"StructuredDocumentation","src":"309:405:6","text":" @dev Receive a flash loan.\n @param initiator The initiator of the loan.\n @param token The loan currency.\n @param amount The amount of tokens lent.\n @param fee The additional amount of tokens to repay.\n @param data Arbitrary data structure, intended to contain user-defined parameters.\n @return The keccak256 hash of \"ERC3156FlashBorrower.onFlashLoan\""},"functionSelector":"23e30c8b","id":290,"implemented":false,"kind":"function","modifiers":[],"name":"onFlashLoan","nameLocation":"728:11:6","nodeType":"FunctionDefinition","parameters":{"id":286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":277,"mutability":"mutable","name":"initiator","nameLocation":"757:9:6","nodeType":"VariableDeclaration","scope":290,"src":"749:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":276,"name":"address","nodeType":"ElementaryTypeName","src":"749:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":279,"mutability":"mutable","name":"token","nameLocation":"784:5:6","nodeType":"VariableDeclaration","scope":290,"src":"776:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":278,"name":"address","nodeType":"ElementaryTypeName","src":"776:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":281,"mutability":"mutable","name":"amount","nameLocation":"807:6:6","nodeType":"VariableDeclaration","scope":290,"src":"799:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":280,"name":"uint256","nodeType":"ElementaryTypeName","src":"799:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":283,"mutability":"mutable","name":"fee","nameLocation":"831:3:6","nodeType":"VariableDeclaration","scope":290,"src":"823:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":282,"name":"uint256","nodeType":"ElementaryTypeName","src":"823:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":285,"mutability":"mutable","name":"data","nameLocation":"859:4:6","nodeType":"VariableDeclaration","scope":290,"src":"844:19:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":284,"name":"bytes","nodeType":"ElementaryTypeName","src":"844:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"739:130:6"},"returnParameters":{"id":289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":288,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":290,"src":"888:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":287,"name":"bytes32","nodeType":"ElementaryTypeName","src":"888:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"887:9:6"},"scope":291,"src":"719:178:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":292,"src":"271:628:6","usedErrors":[],"usedEvents":[]}],"src":"120:780:6"},"id":6},"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol","exportedSymbols":{"IERC3156FlashBorrower":[291],"IERC3156FlashLender":[330]},"id":331,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":293,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"118:24:7"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol","file":"./IERC3156FlashBorrower.sol","id":295,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":331,"sourceUnit":292,"src":"144:66:7","symbolAliases":[{"foreign":{"id":294,"name":"IERC3156FlashBorrower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":291,"src":"152:21:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IERC3156FlashLender","contractDependencies":[],"contractKind":"interface","documentation":{"id":296,"nodeType":"StructuredDocumentation","src":"212:122:7","text":" @dev Interface of the ERC-3156 FlashLender, as defined in\n https://eips.ethereum.org/EIPS/eip-3156[ERC-3156]."},"fullyImplemented":false,"id":330,"linearizedBaseContracts":[330],"name":"IERC3156FlashLender","nameLocation":"345:19:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":297,"nodeType":"StructuredDocumentation","src":"371:168:7","text":" @dev The amount of currency available to be lended.\n @param token The loan currency.\n @return The amount of `token` that can be borrowed."},"functionSelector":"613255ab","id":304,"implemented":false,"kind":"function","modifiers":[],"name":"maxFlashLoan","nameLocation":"553:12:7","nodeType":"FunctionDefinition","parameters":{"id":300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":299,"mutability":"mutable","name":"token","nameLocation":"574:5:7","nodeType":"VariableDeclaration","scope":304,"src":"566:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":298,"name":"address","nodeType":"ElementaryTypeName","src":"566:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"565:15:7"},"returnParameters":{"id":303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":302,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":304,"src":"604:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":301,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"603:9:7"},"scope":330,"src":"544:69:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":305,"nodeType":"StructuredDocumentation","src":"619:249:7","text":" @dev The fee to be charged for a given loan.\n @param token The loan currency.\n @param amount The amount of tokens lent.\n @return The amount of `token` to be charged for the loan, on top of the returned principal."},"functionSelector":"d9d98ce4","id":314,"implemented":false,"kind":"function","modifiers":[],"name":"flashFee","nameLocation":"882:8:7","nodeType":"FunctionDefinition","parameters":{"id":310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":307,"mutability":"mutable","name":"token","nameLocation":"899:5:7","nodeType":"VariableDeclaration","scope":314,"src":"891:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":306,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":309,"mutability":"mutable","name":"amount","nameLocation":"914:6:7","nodeType":"VariableDeclaration","scope":314,"src":"906:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":308,"name":"uint256","nodeType":"ElementaryTypeName","src":"906:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"890:31:7"},"returnParameters":{"id":313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":314,"src":"945:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":311,"name":"uint256","nodeType":"ElementaryTypeName","src":"945:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"944:9:7"},"scope":330,"src":"873:81:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":315,"nodeType":"StructuredDocumentation","src":"960:320:7","text":" @dev Initiate a flash loan.\n @param receiver The receiver of the tokens in the loan, and the receiver of the callback.\n @param token The loan currency.\n @param amount The amount of tokens lent.\n @param data Arbitrary data structure, intended to contain user-defined parameters."},"functionSelector":"5cffe9de","id":329,"implemented":false,"kind":"function","modifiers":[],"name":"flashLoan","nameLocation":"1294:9:7","nodeType":"FunctionDefinition","parameters":{"id":325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":318,"mutability":"mutable","name":"receiver","nameLocation":"1335:8:7","nodeType":"VariableDeclaration","scope":329,"src":"1313:30:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$291","typeString":"contract IERC3156FlashBorrower"},"typeName":{"id":317,"nodeType":"UserDefinedTypeName","pathNode":{"id":316,"name":"IERC3156FlashBorrower","nameLocations":["1313:21:7"],"nodeType":"IdentifierPath","referencedDeclaration":291,"src":"1313:21:7"},"referencedDeclaration":291,"src":"1313:21:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$291","typeString":"contract IERC3156FlashBorrower"}},"visibility":"internal"},{"constant":false,"id":320,"mutability":"mutable","name":"token","nameLocation":"1361:5:7","nodeType":"VariableDeclaration","scope":329,"src":"1353:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":319,"name":"address","nodeType":"ElementaryTypeName","src":"1353:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":322,"mutability":"mutable","name":"amount","nameLocation":"1384:6:7","nodeType":"VariableDeclaration","scope":329,"src":"1376:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":321,"name":"uint256","nodeType":"ElementaryTypeName","src":"1376:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":324,"mutability":"mutable","name":"data","nameLocation":"1415:4:7","nodeType":"VariableDeclaration","scope":329,"src":"1400:19:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":323,"name":"bytes","nodeType":"ElementaryTypeName","src":"1400:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1303:122:7"},"returnParameters":{"id":328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":327,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":329,"src":"1444:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":326,"name":"bool","nodeType":"ElementaryTypeName","src":"1444:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1443:6:7"},"scope":330,"src":"1285:165:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":331,"src":"335:1117:7","usedErrors":[],"usedEvents":[]}],"src":"118:1335:7"},"id":7},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[355]},"id":356,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":332,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"107:25:8"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":355,"linearizedBaseContracts":[355],"name":"IERC5267","nameLocation":"144:8:8","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":333,"nodeType":"StructuredDocumentation","src":"159:84:8","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":335,"name":"EIP712DomainChanged","nameLocation":"254:19:8","nodeType":"EventDefinition","parameters":{"id":334,"nodeType":"ParameterList","parameters":[],"src":"273:2:8"},"src":"248:28:8"},{"documentation":{"id":336,"nodeType":"StructuredDocumentation","src":"282:140:8","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":354,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"436:12:8","nodeType":"FunctionDefinition","parameters":{"id":337,"nodeType":"ParameterList","parameters":[],"src":"448:2:8"},"returnParameters":{"id":353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":339,"mutability":"mutable","name":"fields","nameLocation":"518:6:8","nodeType":"VariableDeclaration","scope":354,"src":"511:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":338,"name":"bytes1","nodeType":"ElementaryTypeName","src":"511:6:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":341,"mutability":"mutable","name":"name","nameLocation":"552:4:8","nodeType":"VariableDeclaration","scope":354,"src":"538:18:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":340,"name":"string","nodeType":"ElementaryTypeName","src":"538:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":343,"mutability":"mutable","name":"version","nameLocation":"584:7:8","nodeType":"VariableDeclaration","scope":354,"src":"570:21:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":342,"name":"string","nodeType":"ElementaryTypeName","src":"570:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":345,"mutability":"mutable","name":"chainId","nameLocation":"613:7:8","nodeType":"VariableDeclaration","scope":354,"src":"605:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":344,"name":"uint256","nodeType":"ElementaryTypeName","src":"605:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":347,"mutability":"mutable","name":"verifyingContract","nameLocation":"642:17:8","nodeType":"VariableDeclaration","scope":354,"src":"634:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":346,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":349,"mutability":"mutable","name":"salt","nameLocation":"681:4:8","nodeType":"VariableDeclaration","scope":354,"src":"673:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":348,"name":"bytes32","nodeType":"ElementaryTypeName","src":"673:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":352,"mutability":"mutable","name":"extensions","nameLocation":"716:10:8","nodeType":"VariableDeclaration","scope":354,"src":"699:27:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":350,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":351,"nodeType":"ArrayTypeName","src":"699:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"497:239:8"},"scope":355,"src":"427:310:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":356,"src":"134:605:8","usedErrors":[],"usedEvents":[335]}],"src":"107:633:8"},"id":8},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[492],"IERC20Errors":[397],"IERC721Errors":[445]},"id":493,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":357,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"112:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":358,"nodeType":"StructuredDocumentation","src":"138:141:9","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":397,"linearizedBaseContracts":[397],"name":"IERC20Errors","nameLocation":"290:12:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":359,"nodeType":"StructuredDocumentation","src":"309:309:9","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":367,"name":"ERC20InsufficientBalance","nameLocation":"629:24:9","nodeType":"ErrorDefinition","parameters":{"id":366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":361,"mutability":"mutable","name":"sender","nameLocation":"662:6:9","nodeType":"VariableDeclaration","scope":367,"src":"654:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":360,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":363,"mutability":"mutable","name":"balance","nameLocation":"678:7:9","nodeType":"VariableDeclaration","scope":367,"src":"670:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":362,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":365,"mutability":"mutable","name":"needed","nameLocation":"695:6:9","nodeType":"VariableDeclaration","scope":367,"src":"687:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":364,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:9"},"src":"623:80:9"},{"documentation":{"id":368,"nodeType":"StructuredDocumentation","src":"709:152:9","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":372,"name":"ERC20InvalidSender","nameLocation":"872:18:9","nodeType":"ErrorDefinition","parameters":{"id":371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":370,"mutability":"mutable","name":"sender","nameLocation":"899:6:9","nodeType":"VariableDeclaration","scope":372,"src":"891:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":369,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:9"},"src":"866:41:9"},{"documentation":{"id":373,"nodeType":"StructuredDocumentation","src":"913:159:9","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":377,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:9","nodeType":"ErrorDefinition","parameters":{"id":376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":375,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:9","nodeType":"VariableDeclaration","scope":377,"src":"1104:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":374,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:9"},"src":"1077:45:9"},{"documentation":{"id":378,"nodeType":"StructuredDocumentation","src":"1128:345:9","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":386,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:9","nodeType":"ErrorDefinition","parameters":{"id":385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":380,"mutability":"mutable","name":"spender","nameLocation":"1519:7:9","nodeType":"VariableDeclaration","scope":386,"src":"1511:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":379,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":382,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:9","nodeType":"VariableDeclaration","scope":386,"src":"1528:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":381,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":384,"mutability":"mutable","name":"needed","nameLocation":"1555:6:9","nodeType":"VariableDeclaration","scope":386,"src":"1547:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":383,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:9"},"src":"1478:85:9"},{"documentation":{"id":387,"nodeType":"StructuredDocumentation","src":"1569:174:9","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":391,"name":"ERC20InvalidApprover","nameLocation":"1754:20:9","nodeType":"ErrorDefinition","parameters":{"id":390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":389,"mutability":"mutable","name":"approver","nameLocation":"1783:8:9","nodeType":"VariableDeclaration","scope":391,"src":"1775:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":388,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:9"},"src":"1748:45:9"},{"documentation":{"id":392,"nodeType":"StructuredDocumentation","src":"1799:195:9","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":396,"name":"ERC20InvalidSpender","nameLocation":"2005:19:9","nodeType":"ErrorDefinition","parameters":{"id":395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":394,"mutability":"mutable","name":"spender","nameLocation":"2033:7:9","nodeType":"VariableDeclaration","scope":396,"src":"2025:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":393,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:9"},"src":"1999:43:9"}],"scope":493,"src":"280:1764:9","usedErrors":[367,372,377,386,391,396],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":398,"nodeType":"StructuredDocumentation","src":"2046:143:9","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":445,"linearizedBaseContracts":[445],"name":"IERC721Errors","nameLocation":"2200:13:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":399,"nodeType":"StructuredDocumentation","src":"2220:219:9","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":403,"name":"ERC721InvalidOwner","nameLocation":"2450:18:9","nodeType":"ErrorDefinition","parameters":{"id":402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":401,"mutability":"mutable","name":"owner","nameLocation":"2477:5:9","nodeType":"VariableDeclaration","scope":403,"src":"2469:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":400,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:9"},"src":"2444:40:9"},{"documentation":{"id":404,"nodeType":"StructuredDocumentation","src":"2490:132:9","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":408,"name":"ERC721NonexistentToken","nameLocation":"2633:22:9","nodeType":"ErrorDefinition","parameters":{"id":407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":406,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:9","nodeType":"VariableDeclaration","scope":408,"src":"2656:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":405,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:9"},"src":"2627:46:9"},{"documentation":{"id":409,"nodeType":"StructuredDocumentation","src":"2679:289:9","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":417,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:9","nodeType":"ErrorDefinition","parameters":{"id":416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":411,"mutability":"mutable","name":"sender","nameLocation":"3008:6:9","nodeType":"VariableDeclaration","scope":417,"src":"3000:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":410,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":413,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:9","nodeType":"VariableDeclaration","scope":417,"src":"3016:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":412,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":415,"mutability":"mutable","name":"owner","nameLocation":"3041:5:9","nodeType":"VariableDeclaration","scope":417,"src":"3033:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":414,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:9"},"src":"2973:75:9"},{"documentation":{"id":418,"nodeType":"StructuredDocumentation","src":"3054:152:9","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":422,"name":"ERC721InvalidSender","nameLocation":"3217:19:9","nodeType":"ErrorDefinition","parameters":{"id":421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":420,"mutability":"mutable","name":"sender","nameLocation":"3245:6:9","nodeType":"VariableDeclaration","scope":422,"src":"3237:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":419,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:9"},"src":"3211:42:9"},{"documentation":{"id":423,"nodeType":"StructuredDocumentation","src":"3259:159:9","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":427,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:9","nodeType":"ErrorDefinition","parameters":{"id":426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":425,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:9","nodeType":"VariableDeclaration","scope":427,"src":"3451:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":424,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:9"},"src":"3423:46:9"},{"documentation":{"id":428,"nodeType":"StructuredDocumentation","src":"3475:247:9","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":434,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:9","nodeType":"ErrorDefinition","parameters":{"id":433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":430,"mutability":"mutable","name":"operator","nameLocation":"3768:8:9","nodeType":"VariableDeclaration","scope":434,"src":"3760:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":429,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":432,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:9","nodeType":"VariableDeclaration","scope":434,"src":"3778:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":431,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:9"},"src":"3727:68:9"},{"documentation":{"id":435,"nodeType":"StructuredDocumentation","src":"3801:174:9","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":439,"name":"ERC721InvalidApprover","nameLocation":"3986:21:9","nodeType":"ErrorDefinition","parameters":{"id":438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":437,"mutability":"mutable","name":"approver","nameLocation":"4016:8:9","nodeType":"VariableDeclaration","scope":439,"src":"4008:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":436,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:9"},"src":"3980:46:9"},{"documentation":{"id":440,"nodeType":"StructuredDocumentation","src":"4032:197:9","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":444,"name":"ERC721InvalidOperator","nameLocation":"4240:21:9","nodeType":"ErrorDefinition","parameters":{"id":443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":442,"mutability":"mutable","name":"operator","nameLocation":"4270:8:9","nodeType":"VariableDeclaration","scope":444,"src":"4262:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":441,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:9"},"src":"4234:46:9"}],"scope":493,"src":"2190:2092:9","usedErrors":[403,408,417,422,427,434,439,444],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":446,"nodeType":"StructuredDocumentation","src":"4284:145:9","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":492,"linearizedBaseContracts":[492],"name":"IERC1155Errors","nameLocation":"4440:14:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":447,"nodeType":"StructuredDocumentation","src":"4461:361:9","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":457,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:9","nodeType":"ErrorDefinition","parameters":{"id":456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":449,"mutability":"mutable","name":"sender","nameLocation":"4868:6:9","nodeType":"VariableDeclaration","scope":457,"src":"4860:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":448,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":451,"mutability":"mutable","name":"balance","nameLocation":"4884:7:9","nodeType":"VariableDeclaration","scope":457,"src":"4876:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":450,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":453,"mutability":"mutable","name":"needed","nameLocation":"4901:6:9","nodeType":"VariableDeclaration","scope":457,"src":"4893:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":452,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":455,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:9","nodeType":"VariableDeclaration","scope":457,"src":"4909:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":454,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:9"},"src":"4827:99:9"},{"documentation":{"id":458,"nodeType":"StructuredDocumentation","src":"4932:152:9","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":462,"name":"ERC1155InvalidSender","nameLocation":"5095:20:9","nodeType":"ErrorDefinition","parameters":{"id":461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":460,"mutability":"mutable","name":"sender","nameLocation":"5124:6:9","nodeType":"VariableDeclaration","scope":462,"src":"5116:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":459,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:9"},"src":"5089:43:9"},{"documentation":{"id":463,"nodeType":"StructuredDocumentation","src":"5138:159:9","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":467,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:9","nodeType":"ErrorDefinition","parameters":{"id":466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":465,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:9","nodeType":"VariableDeclaration","scope":467,"src":"5331:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":464,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:9"},"src":"5302:47:9"},{"documentation":{"id":468,"nodeType":"StructuredDocumentation","src":"5355:256:9","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":474,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:9","nodeType":"ErrorDefinition","parameters":{"id":473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":470,"mutability":"mutable","name":"operator","nameLocation":"5659:8:9","nodeType":"VariableDeclaration","scope":474,"src":"5651:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":469,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":472,"mutability":"mutable","name":"owner","nameLocation":"5677:5:9","nodeType":"VariableDeclaration","scope":474,"src":"5669:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":471,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:9"},"src":"5616:68:9"},{"documentation":{"id":475,"nodeType":"StructuredDocumentation","src":"5690:174:9","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":479,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:9","nodeType":"ErrorDefinition","parameters":{"id":478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":477,"mutability":"mutable","name":"approver","nameLocation":"5906:8:9","nodeType":"VariableDeclaration","scope":479,"src":"5898:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":476,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:9"},"src":"5869:47:9"},{"documentation":{"id":480,"nodeType":"StructuredDocumentation","src":"5922:197:9","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":484,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:9","nodeType":"ErrorDefinition","parameters":{"id":483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":482,"mutability":"mutable","name":"operator","nameLocation":"6161:8:9","nodeType":"VariableDeclaration","scope":484,"src":"6153:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":481,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:9"},"src":"6124:47:9"},{"documentation":{"id":485,"nodeType":"StructuredDocumentation","src":"6177:280:9","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":491,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:9","nodeType":"ErrorDefinition","parameters":{"id":490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":487,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:9","nodeType":"VariableDeclaration","scope":491,"src":"6494:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":486,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":489,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:9","nodeType":"VariableDeclaration","scope":491,"src":"6513:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":488,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:9"},"src":"6462:73:9"}],"scope":493,"src":"4430:2107:9","usedErrors":[457,462,467,474,479,484,491],"usedEvents":[]}],"src":"112:6426:9"},"id":9},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[2046],"ERC20":[1007],"IERC20":[1085],"IERC20Errors":[397],"IERC20Metadata":[1827]},"id":1008,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":494,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":496,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1008,"sourceUnit":1086,"src":"131:36:10","symbolAliases":[{"foreign":{"id":495,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"139:6:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":498,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1008,"sourceUnit":1828,"src":"168:63:10","symbolAliases":[{"foreign":{"id":497,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1827,"src":"176:14:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":500,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1008,"sourceUnit":2047,"src":"232:48:10","symbolAliases":[{"foreign":{"id":499,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2046,"src":"240:7:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":502,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1008,"sourceUnit":493,"src":"281:65:10","symbolAliases":[{"foreign":{"id":501,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"289:12:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":504,"name":"Context","nameLocations":["1133:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":2046,"src":"1133:7:10"},"id":505,"nodeType":"InheritanceSpecifier","src":"1133:7:10"},{"baseName":{"id":506,"name":"IERC20","nameLocations":["1142:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":1085,"src":"1142:6:10"},"id":507,"nodeType":"InheritanceSpecifier","src":"1142:6:10"},{"baseName":{"id":508,"name":"IERC20Metadata","nameLocations":["1150:14:10"],"nodeType":"IdentifierPath","referencedDeclaration":1827,"src":"1150:14:10"},"id":509,"nodeType":"InheritanceSpecifier","src":"1150:14:10"},{"baseName":{"id":510,"name":"IERC20Errors","nameLocations":["1166:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":397,"src":"1166:12:10"},"id":511,"nodeType":"InheritanceSpecifier","src":"1166:12:10"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":503,"nodeType":"StructuredDocumentation","src":"348:757:10","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."},"fullyImplemented":true,"id":1007,"linearizedBaseContracts":[1007,397,1827,1085,2046],"name":"ERC20","nameLocation":"1124:5:10","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":515,"mutability":"mutable","name":"_balances","nameLocation":"1229:9:10","nodeType":"VariableDeclaration","scope":1007,"src":"1185:53:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":514,"keyName":"account","keyNameLocation":"1201:7:10","keyType":{"id":512,"name":"address","nodeType":"ElementaryTypeName","src":"1193:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1185:35:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":513,"name":"uint256","nodeType":"ElementaryTypeName","src":"1212:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":521,"mutability":"mutable","name":"_allowances","nameLocation":"1317:11:10","nodeType":"VariableDeclaration","scope":1007,"src":"1245:83:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":520,"keyName":"account","keyNameLocation":"1261:7:10","keyType":{"id":516,"name":"address","nodeType":"ElementaryTypeName","src":"1253:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1245:63:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":519,"keyName":"spender","keyNameLocation":"1288:7:10","keyType":{"id":517,"name":"address","nodeType":"ElementaryTypeName","src":"1280:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1272:35:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":518,"name":"uint256","nodeType":"ElementaryTypeName","src":"1299:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":523,"mutability":"mutable","name":"_totalSupply","nameLocation":"1351:12:10","nodeType":"VariableDeclaration","scope":1007,"src":"1335:28:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":522,"name":"uint256","nodeType":"ElementaryTypeName","src":"1335:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":525,"mutability":"mutable","name":"_name","nameLocation":"1385:5:10","nodeType":"VariableDeclaration","scope":1007,"src":"1370:20:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":524,"name":"string","nodeType":"ElementaryTypeName","src":"1370:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":527,"mutability":"mutable","name":"_symbol","nameLocation":"1411:7:10","nodeType":"VariableDeclaration","scope":1007,"src":"1396:22:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":526,"name":"string","nodeType":"ElementaryTypeName","src":"1396:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":543,"nodeType":"Block","src":"1638:57:10","statements":[{"expression":{"id":537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":535,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"1648:5:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":536,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"1656:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1648:13:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":538,"nodeType":"ExpressionStatement","src":"1648:13:10"},{"expression":{"id":541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":539,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"1671:7:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":540,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"1681:7:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1671:17:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":542,"nodeType":"ExpressionStatement","src":"1671:17:10"}]},"documentation":{"id":528,"nodeType":"StructuredDocumentation","src":"1425:152:10","text":" @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."},"id":544,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":530,"mutability":"mutable","name":"name_","nameLocation":"1608:5:10","nodeType":"VariableDeclaration","scope":544,"src":"1594:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":529,"name":"string","nodeType":"ElementaryTypeName","src":"1594:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":532,"mutability":"mutable","name":"symbol_","nameLocation":"1629:7:10","nodeType":"VariableDeclaration","scope":544,"src":"1615:21:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":531,"name":"string","nodeType":"ElementaryTypeName","src":"1615:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1593:44:10"},"returnParameters":{"id":534,"nodeType":"ParameterList","parameters":[],"src":"1638:0:10"},"scope":1007,"src":"1582:113:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1814],"body":{"id":552,"nodeType":"Block","src":"1820:29:10","statements":[{"expression":{"id":550,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"1837:5:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":549,"id":551,"nodeType":"Return","src":"1830:12:10"}]},"documentation":{"id":545,"nodeType":"StructuredDocumentation","src":"1701:54:10","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":553,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"1769:4:10","nodeType":"FunctionDefinition","parameters":{"id":546,"nodeType":"ParameterList","parameters":[],"src":"1773:2:10"},"returnParameters":{"id":549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":548,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":553,"src":"1805:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":547,"name":"string","nodeType":"ElementaryTypeName","src":"1805:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1804:15:10"},"scope":1007,"src":"1760:89:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1820],"body":{"id":561,"nodeType":"Block","src":"2024:31:10","statements":[{"expression":{"id":559,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"2041:7:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":558,"id":560,"nodeType":"Return","src":"2034:14:10"}]},"documentation":{"id":554,"nodeType":"StructuredDocumentation","src":"1855:102:10","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":562,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"1971:6:10","nodeType":"FunctionDefinition","parameters":{"id":555,"nodeType":"ParameterList","parameters":[],"src":"1977:2:10"},"returnParameters":{"id":558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":557,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":562,"src":"2009:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":556,"name":"string","nodeType":"ElementaryTypeName","src":"2009:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2008:15:10"},"scope":1007,"src":"1962:93:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1826],"body":{"id":570,"nodeType":"Block","src":"2744:26:10","statements":[{"expression":{"hexValue":"3138","id":568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2761:2:10","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":567,"id":569,"nodeType":"Return","src":"2754:9:10"}]},"documentation":{"id":563,"nodeType":"StructuredDocumentation","src":"2061:622:10","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":571,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"2697:8:10","nodeType":"FunctionDefinition","parameters":{"id":564,"nodeType":"ParameterList","parameters":[],"src":"2705:2:10"},"returnParameters":{"id":567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":566,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":571,"src":"2737:5:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":565,"name":"uint8","nodeType":"ElementaryTypeName","src":"2737:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2736:7:10"},"scope":1007,"src":"2688:82:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1034],"body":{"id":579,"nodeType":"Block","src":"2864:36:10","statements":[{"expression":{"id":577,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"2881:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":576,"id":578,"nodeType":"Return","src":"2874:19:10"}]},"documentation":{"id":572,"nodeType":"StructuredDocumentation","src":"2776:22:10","text":"@inheritdoc IERC20"},"functionSelector":"18160ddd","id":580,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2812:11:10","nodeType":"FunctionDefinition","parameters":{"id":573,"nodeType":"ParameterList","parameters":[],"src":"2823:2:10"},"returnParameters":{"id":576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":575,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":580,"src":"2855:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":574,"name":"uint256","nodeType":"ElementaryTypeName","src":"2855:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2854:9:10"},"scope":1007,"src":"2803:97:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1042],"body":{"id":592,"nodeType":"Block","src":"3007:42:10","statements":[{"expression":{"baseExpression":{"id":588,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"3024:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":590,"indexExpression":{"id":589,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":583,"src":"3034:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3024:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":587,"id":591,"nodeType":"Return","src":"3017:25:10"}]},"documentation":{"id":581,"nodeType":"StructuredDocumentation","src":"2906:22:10","text":"@inheritdoc IERC20"},"functionSelector":"70a08231","id":593,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2942:9:10","nodeType":"FunctionDefinition","parameters":{"id":584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":583,"mutability":"mutable","name":"account","nameLocation":"2960:7:10","nodeType":"VariableDeclaration","scope":593,"src":"2952:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":582,"name":"address","nodeType":"ElementaryTypeName","src":"2952:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2951:17:10"},"returnParameters":{"id":587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":586,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":593,"src":"2998:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":585,"name":"uint256","nodeType":"ElementaryTypeName","src":"2998:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2997:9:10"},"scope":1007,"src":"2933:116:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1052],"body":{"id":616,"nodeType":"Block","src":"3319:103:10","statements":[{"assignments":[604],"declarations":[{"constant":false,"id":604,"mutability":"mutable","name":"owner","nameLocation":"3337:5:10","nodeType":"VariableDeclaration","scope":616,"src":"3329:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":603,"name":"address","nodeType":"ElementaryTypeName","src":"3329:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":607,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":605,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2028,"src":"3345:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3345:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3329:28:10"},{"expression":{"arguments":[{"id":609,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"3377:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":610,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":596,"src":"3384:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":611,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"3388:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":608,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"3367:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3367:27:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":613,"nodeType":"ExpressionStatement","src":"3367:27:10"},{"expression":{"hexValue":"74727565","id":614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3411:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":602,"id":615,"nodeType":"Return","src":"3404:11:10"}]},"documentation":{"id":594,"nodeType":"StructuredDocumentation","src":"3055:184:10","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":617,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3253:8:10","nodeType":"FunctionDefinition","parameters":{"id":599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":596,"mutability":"mutable","name":"to","nameLocation":"3270:2:10","nodeType":"VariableDeclaration","scope":617,"src":"3262:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":595,"name":"address","nodeType":"ElementaryTypeName","src":"3262:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":598,"mutability":"mutable","name":"value","nameLocation":"3282:5:10","nodeType":"VariableDeclaration","scope":617,"src":"3274:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":597,"name":"uint256","nodeType":"ElementaryTypeName","src":"3274:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3261:27:10"},"returnParameters":{"id":602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":601,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":617,"src":"3313:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":600,"name":"bool","nodeType":"ElementaryTypeName","src":"3313:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3312:6:10"},"scope":1007,"src":"3244:178:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1062],"body":{"id":633,"nodeType":"Block","src":"3544:51:10","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":627,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"3561:11:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":629,"indexExpression":{"id":628,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"3573:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3561:18:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":631,"indexExpression":{"id":630,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"3580:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3561:27:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":626,"id":632,"nodeType":"Return","src":"3554:34:10"}]},"documentation":{"id":618,"nodeType":"StructuredDocumentation","src":"3428:22:10","text":"@inheritdoc IERC20"},"functionSelector":"dd62ed3e","id":634,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3464:9:10","nodeType":"FunctionDefinition","parameters":{"id":623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":620,"mutability":"mutable","name":"owner","nameLocation":"3482:5:10","nodeType":"VariableDeclaration","scope":634,"src":"3474:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":619,"name":"address","nodeType":"ElementaryTypeName","src":"3474:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":622,"mutability":"mutable","name":"spender","nameLocation":"3497:7:10","nodeType":"VariableDeclaration","scope":634,"src":"3489:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":621,"name":"address","nodeType":"ElementaryTypeName","src":"3489:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3473:32:10"},"returnParameters":{"id":626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":625,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":634,"src":"3535:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":624,"name":"uint256","nodeType":"ElementaryTypeName","src":"3535:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3534:9:10"},"scope":1007,"src":"3455:140:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1072],"body":{"id":657,"nodeType":"Block","src":"3981:107:10","statements":[{"assignments":[645],"declarations":[{"constant":false,"id":645,"mutability":"mutable","name":"owner","nameLocation":"3999:5:10","nodeType":"VariableDeclaration","scope":657,"src":"3991:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":644,"name":"address","nodeType":"ElementaryTypeName","src":"3991:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":648,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":646,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2028,"src":"4007:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4007:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3991:28:10"},{"expression":{"arguments":[{"id":650,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"4038:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":651,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"4045:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":652,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"4054:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":649,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[898,958],"referencedDeclaration":898,"src":"4029:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4029:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":654,"nodeType":"ExpressionStatement","src":"4029:31:10"},{"expression":{"hexValue":"74727565","id":655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4077:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":643,"id":656,"nodeType":"Return","src":"4070:11:10"}]},"documentation":{"id":635,"nodeType":"StructuredDocumentation","src":"3601:296:10","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":658,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3911:7:10","nodeType":"FunctionDefinition","parameters":{"id":640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":637,"mutability":"mutable","name":"spender","nameLocation":"3927:7:10","nodeType":"VariableDeclaration","scope":658,"src":"3919:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":636,"name":"address","nodeType":"ElementaryTypeName","src":"3919:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":639,"mutability":"mutable","name":"value","nameLocation":"3944:5:10","nodeType":"VariableDeclaration","scope":658,"src":"3936:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":638,"name":"uint256","nodeType":"ElementaryTypeName","src":"3936:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3918:32:10"},"returnParameters":{"id":643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":642,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":658,"src":"3975:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":641,"name":"bool","nodeType":"ElementaryTypeName","src":"3975:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3974:6:10"},"scope":1007,"src":"3902:186:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1084],"body":{"id":689,"nodeType":"Block","src":"4773:151:10","statements":[{"assignments":[671],"declarations":[{"constant":false,"id":671,"mutability":"mutable","name":"spender","nameLocation":"4791:7:10","nodeType":"VariableDeclaration","scope":689,"src":"4783:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":670,"name":"address","nodeType":"ElementaryTypeName","src":"4783:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":674,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":672,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2028,"src":"4801:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4801:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4783:30:10"},{"expression":{"arguments":[{"id":676,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":661,"src":"4839:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":677,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"4845:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":678,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"4854:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":675,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"4823:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4823:37:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":680,"nodeType":"ExpressionStatement","src":"4823:37:10"},{"expression":{"arguments":[{"id":682,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":661,"src":"4880:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":683,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"4886:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":684,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"4890:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":681,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"4870:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4870:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":686,"nodeType":"ExpressionStatement","src":"4870:26:10"},{"expression":{"hexValue":"74727565","id":687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4913:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":669,"id":688,"nodeType":"Return","src":"4906:11:10"}]},"documentation":{"id":659,"nodeType":"StructuredDocumentation","src":"4094:581:10","text":" @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":690,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4689:12:10","nodeType":"FunctionDefinition","parameters":{"id":666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":661,"mutability":"mutable","name":"from","nameLocation":"4710:4:10","nodeType":"VariableDeclaration","scope":690,"src":"4702:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":660,"name":"address","nodeType":"ElementaryTypeName","src":"4702:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":663,"mutability":"mutable","name":"to","nameLocation":"4724:2:10","nodeType":"VariableDeclaration","scope":690,"src":"4716:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":662,"name":"address","nodeType":"ElementaryTypeName","src":"4716:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":665,"mutability":"mutable","name":"value","nameLocation":"4736:5:10","nodeType":"VariableDeclaration","scope":690,"src":"4728:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":664,"name":"uint256","nodeType":"ElementaryTypeName","src":"4728:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:41:10"},"returnParameters":{"id":669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":668,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":690,"src":"4767:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":667,"name":"bool","nodeType":"ElementaryTypeName","src":"4767:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4766:6:10"},"scope":1007,"src":"4680:244:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":736,"nodeType":"Block","src":"5366:231:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":700,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"5380:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5396:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":702,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5388:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":701,"name":"address","nodeType":"ElementaryTypeName","src":"5388:7:10","typeDescriptions":{}}},"id":704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5388:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5380:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":714,"nodeType":"IfStatement","src":"5376:86:10","trueBody":{"id":713,"nodeType":"Block","src":"5400:62:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5448:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":708,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5440:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":707,"name":"address","nodeType":"ElementaryTypeName","src":"5440:7:10","typeDescriptions":{}}},"id":710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5440:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":706,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":372,"src":"5421:18:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5421:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":712,"nodeType":"RevertStatement","src":"5414:37:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":715,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"5475:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5489:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":717,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5481:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":716,"name":"address","nodeType":"ElementaryTypeName","src":"5481:7:10","typeDescriptions":{}}},"id":719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5481:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5475:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":729,"nodeType":"IfStatement","src":"5471:86:10","trueBody":{"id":728,"nodeType":"Block","src":"5493:64:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5543:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":723,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5535:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":722,"name":"address","nodeType":"ElementaryTypeName","src":"5535:7:10","typeDescriptions":{}}},"id":725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5535:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":721,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":377,"src":"5514:20:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5514:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":727,"nodeType":"RevertStatement","src":"5507:39:10"}]}},{"expression":{"arguments":[{"id":731,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"5574:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":732,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"5580:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":733,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"5584:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":730,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"5566:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5566:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":735,"nodeType":"ExpressionStatement","src":"5566:24:10"}]},"documentation":{"id":691,"nodeType":"StructuredDocumentation","src":"4930:362:10","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":737,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5306:9:10","nodeType":"FunctionDefinition","parameters":{"id":698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":693,"mutability":"mutable","name":"from","nameLocation":"5324:4:10","nodeType":"VariableDeclaration","scope":737,"src":"5316:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":692,"name":"address","nodeType":"ElementaryTypeName","src":"5316:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":695,"mutability":"mutable","name":"to","nameLocation":"5338:2:10","nodeType":"VariableDeclaration","scope":737,"src":"5330:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":694,"name":"address","nodeType":"ElementaryTypeName","src":"5330:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":697,"mutability":"mutable","name":"value","nameLocation":"5350:5:10","nodeType":"VariableDeclaration","scope":737,"src":"5342:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":696,"name":"uint256","nodeType":"ElementaryTypeName","src":"5342:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5315:41:10"},"returnParameters":{"id":699,"nodeType":"ParameterList","parameters":[],"src":"5366:0:10"},"scope":1007,"src":"5297:300:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":813,"nodeType":"Block","src":"5987:1032:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":747,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"6001:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6017:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":749,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6009:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":748,"name":"address","nodeType":"ElementaryTypeName","src":"6009:7:10","typeDescriptions":{}}},"id":751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6009:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6001:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":784,"nodeType":"Block","src":"6175:362:10","statements":[{"assignments":[759],"declarations":[{"constant":false,"id":759,"mutability":"mutable","name":"fromBalance","nameLocation":"6197:11:10","nodeType":"VariableDeclaration","scope":784,"src":"6189:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":758,"name":"uint256","nodeType":"ElementaryTypeName","src":"6189:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":763,"initialValue":{"baseExpression":{"id":760,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"6211:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":762,"indexExpression":{"id":761,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"6221:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6211:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6189:37:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":764,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":759,"src":"6244:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":765,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"6258:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6244:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":774,"nodeType":"IfStatement","src":"6240:115:10","trueBody":{"id":773,"nodeType":"Block","src":"6265:90:10","statements":[{"errorCall":{"arguments":[{"id":768,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"6315:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":769,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":759,"src":"6321:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":770,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"6334:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":767,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":367,"src":"6290:24:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256) pure returns (error)"}},"id":771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6290:50:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":772,"nodeType":"RevertStatement","src":"6283:57:10"}]}},{"id":783,"nodeType":"UncheckedBlock","src":"6368:159:10","statements":[{"expression":{"id":781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":775,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"6475:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":777,"indexExpression":{"id":776,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"6485:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6475:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":778,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":759,"src":"6493:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":779,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"6507:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6493:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6475:37:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":782,"nodeType":"ExpressionStatement","src":"6475:37:10"}]}]},"id":785,"nodeType":"IfStatement","src":"5997:540:10","trueBody":{"id":757,"nodeType":"Block","src":"6021:148:10","statements":[{"expression":{"id":755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":753,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"6137:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":754,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"6153:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6137:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":756,"nodeType":"ExpressionStatement","src":"6137:21:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":786,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"6551:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6565:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":788,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6557:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":787,"name":"address","nodeType":"ElementaryTypeName","src":"6557:7:10","typeDescriptions":{}}},"id":790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6557:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6551:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":805,"nodeType":"Block","src":"6766:206:10","statements":[{"id":804,"nodeType":"UncheckedBlock","src":"6780:182:10","statements":[{"expression":{"id":802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":798,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"6925:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":800,"indexExpression":{"id":799,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"6935:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6925:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":801,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"6942:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6925:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":803,"nodeType":"ExpressionStatement","src":"6925:22:10"}]}]},"id":806,"nodeType":"IfStatement","src":"6547:425:10","trueBody":{"id":797,"nodeType":"Block","src":"6569:191:10","statements":[{"id":796,"nodeType":"UncheckedBlock","src":"6583:167:10","statements":[{"expression":{"id":794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":792,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"6714:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":793,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"6730:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6714:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":795,"nodeType":"ExpressionStatement","src":"6714:21:10"}]}]}},{"eventCall":{"arguments":[{"id":808,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"6996:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":809,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"7002:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":810,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"7006:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":807,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"6987:8:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6987:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":812,"nodeType":"EmitStatement","src":"6982:30:10"}]},"documentation":{"id":738,"nodeType":"StructuredDocumentation","src":"5603:304:10","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":814,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"5921:7:10","nodeType":"FunctionDefinition","parameters":{"id":745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":740,"mutability":"mutable","name":"from","nameLocation":"5937:4:10","nodeType":"VariableDeclaration","scope":814,"src":"5929:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":739,"name":"address","nodeType":"ElementaryTypeName","src":"5929:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":742,"mutability":"mutable","name":"to","nameLocation":"5951:2:10","nodeType":"VariableDeclaration","scope":814,"src":"5943:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":741,"name":"address","nodeType":"ElementaryTypeName","src":"5943:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":744,"mutability":"mutable","name":"value","nameLocation":"5963:5:10","nodeType":"VariableDeclaration","scope":814,"src":"5955:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":743,"name":"uint256","nodeType":"ElementaryTypeName","src":"5955:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5928:41:10"},"returnParameters":{"id":746,"nodeType":"ParameterList","parameters":[],"src":"5987:0:10"},"scope":1007,"src":"5912:1107:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":846,"nodeType":"Block","src":"7418:152:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":822,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":817,"src":"7432:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7451:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":824,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7443:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":823,"name":"address","nodeType":"ElementaryTypeName","src":"7443:7:10","typeDescriptions":{}}},"id":826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7443:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7432:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":836,"nodeType":"IfStatement","src":"7428:91:10","trueBody":{"id":835,"nodeType":"Block","src":"7455:64:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7505:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7497:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":829,"name":"address","nodeType":"ElementaryTypeName","src":"7497:7:10","typeDescriptions":{}}},"id":832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7497:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":828,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":377,"src":"7476:20:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7476:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":834,"nodeType":"RevertStatement","src":"7469:39:10"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7544:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7536:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":838,"name":"address","nodeType":"ElementaryTypeName","src":"7536:7:10","typeDescriptions":{}}},"id":841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7536:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":842,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":817,"src":"7548:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":843,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"7557:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":837,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"7528:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7528:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":845,"nodeType":"ExpressionStatement","src":"7528:35:10"}]},"documentation":{"id":815,"nodeType":"StructuredDocumentation","src":"7025:332:10","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":847,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7371:5:10","nodeType":"FunctionDefinition","parameters":{"id":820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":817,"mutability":"mutable","name":"account","nameLocation":"7385:7:10","nodeType":"VariableDeclaration","scope":847,"src":"7377:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":816,"name":"address","nodeType":"ElementaryTypeName","src":"7377:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":819,"mutability":"mutable","name":"value","nameLocation":"7402:5:10","nodeType":"VariableDeclaration","scope":847,"src":"7394:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":818,"name":"uint256","nodeType":"ElementaryTypeName","src":"7394:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7376:32:10"},"returnParameters":{"id":821,"nodeType":"ParameterList","parameters":[],"src":"7418:0:10"},"scope":1007,"src":"7362:208:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":879,"nodeType":"Block","src":"7944:150:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":855,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"7958:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7977:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7969:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":856,"name":"address","nodeType":"ElementaryTypeName","src":"7969:7:10","typeDescriptions":{}}},"id":859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7969:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7958:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":869,"nodeType":"IfStatement","src":"7954:89:10","trueBody":{"id":868,"nodeType":"Block","src":"7981:62:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8029:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":863,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8021:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":862,"name":"address","nodeType":"ElementaryTypeName","src":"8021:7:10","typeDescriptions":{}}},"id":865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8021:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":861,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":372,"src":"8002:18:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8002:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":867,"nodeType":"RevertStatement","src":"7995:37:10"}]}},{"expression":{"arguments":[{"id":871,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"8060:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8077:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":873,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8069:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":872,"name":"address","nodeType":"ElementaryTypeName","src":"8069:7:10","typeDescriptions":{}}},"id":875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8069:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":876,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":852,"src":"8081:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":870,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"8052:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8052:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":878,"nodeType":"ExpressionStatement","src":"8052:35:10"}]},"documentation":{"id":848,"nodeType":"StructuredDocumentation","src":"7576:307:10","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":880,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"7897:5:10","nodeType":"FunctionDefinition","parameters":{"id":853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":850,"mutability":"mutable","name":"account","nameLocation":"7911:7:10","nodeType":"VariableDeclaration","scope":880,"src":"7903:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":849,"name":"address","nodeType":"ElementaryTypeName","src":"7903:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":852,"mutability":"mutable","name":"value","nameLocation":"7928:5:10","nodeType":"VariableDeclaration","scope":880,"src":"7920:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":851,"name":"uint256","nodeType":"ElementaryTypeName","src":"7920:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7902:32:10"},"returnParameters":{"id":854,"nodeType":"ParameterList","parameters":[],"src":"7944:0:10"},"scope":1007,"src":"7888:206:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":897,"nodeType":"Block","src":"8704:54:10","statements":[{"expression":{"arguments":[{"id":891,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":883,"src":"8723:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":892,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":885,"src":"8730:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":893,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"8739:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8746:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":890,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[898,958],"referencedDeclaration":958,"src":"8714:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8714:37:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":896,"nodeType":"ExpressionStatement","src":"8714:37:10"}]},"documentation":{"id":881,"nodeType":"StructuredDocumentation","src":"8100:525:10","text":" @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":898,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8639:8:10","nodeType":"FunctionDefinition","parameters":{"id":888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":883,"mutability":"mutable","name":"owner","nameLocation":"8656:5:10","nodeType":"VariableDeclaration","scope":898,"src":"8648:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":882,"name":"address","nodeType":"ElementaryTypeName","src":"8648:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":885,"mutability":"mutable","name":"spender","nameLocation":"8671:7:10","nodeType":"VariableDeclaration","scope":898,"src":"8663:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":884,"name":"address","nodeType":"ElementaryTypeName","src":"8663:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":887,"mutability":"mutable","name":"value","nameLocation":"8688:5:10","nodeType":"VariableDeclaration","scope":898,"src":"8680:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":886,"name":"uint256","nodeType":"ElementaryTypeName","src":"8680:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8647:47:10"},"returnParameters":{"id":889,"nodeType":"ParameterList","parameters":[],"src":"8704:0:10"},"scope":1007,"src":"8630:128:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":957,"nodeType":"Block","src":"9703:334:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":910,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"9717:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9734:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9726:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":911,"name":"address","nodeType":"ElementaryTypeName","src":"9726:7:10","typeDescriptions":{}}},"id":914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9726:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9717:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":924,"nodeType":"IfStatement","src":"9713:89:10","trueBody":{"id":923,"nodeType":"Block","src":"9738:64:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9788:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":918,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9780:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":917,"name":"address","nodeType":"ElementaryTypeName","src":"9780:7:10","typeDescriptions":{}}},"id":920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9780:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":916,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"9759:20:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9759:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":922,"nodeType":"RevertStatement","src":"9752:39:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":925,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":903,"src":"9815:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9834:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":927,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9826:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":926,"name":"address","nodeType":"ElementaryTypeName","src":"9826:7:10","typeDescriptions":{}}},"id":929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9826:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9815:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":939,"nodeType":"IfStatement","src":"9811:90:10","trueBody":{"id":938,"nodeType":"Block","src":"9838:63:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9887:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":933,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9879:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":932,"name":"address","nodeType":"ElementaryTypeName","src":"9879:7:10","typeDescriptions":{}}},"id":935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9879:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":931,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"9859:19:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9859:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":937,"nodeType":"RevertStatement","src":"9852:38:10"}]}},{"expression":{"id":946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":940,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"9910:11:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":943,"indexExpression":{"id":941,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"9922:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9910:18:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":944,"indexExpression":{"id":942,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":903,"src":"9929:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9910:27:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":945,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":905,"src":"9940:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9910:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":947,"nodeType":"ExpressionStatement","src":"9910:35:10"},{"condition":{"id":948,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":907,"src":"9959:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":956,"nodeType":"IfStatement","src":"9955:76:10","trueBody":{"id":955,"nodeType":"Block","src":"9970:61:10","statements":[{"eventCall":{"arguments":[{"id":950,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"9998:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":951,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":903,"src":"10005:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":952,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":905,"src":"10014:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":949,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"9989:8:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9989:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":954,"nodeType":"EmitStatement","src":"9984:36:10"}]}}]},"documentation":{"id":899,"nodeType":"StructuredDocumentation","src":"8764:836:10","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":958,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9614:8:10","nodeType":"FunctionDefinition","parameters":{"id":908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":901,"mutability":"mutable","name":"owner","nameLocation":"9631:5:10","nodeType":"VariableDeclaration","scope":958,"src":"9623:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":900,"name":"address","nodeType":"ElementaryTypeName","src":"9623:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":903,"mutability":"mutable","name":"spender","nameLocation":"9646:7:10","nodeType":"VariableDeclaration","scope":958,"src":"9638:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":902,"name":"address","nodeType":"ElementaryTypeName","src":"9638:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":905,"mutability":"mutable","name":"value","nameLocation":"9663:5:10","nodeType":"VariableDeclaration","scope":958,"src":"9655:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":904,"name":"uint256","nodeType":"ElementaryTypeName","src":"9655:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":907,"mutability":"mutable","name":"emitEvent","nameLocation":"9675:9:10","nodeType":"VariableDeclaration","scope":958,"src":"9670:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":906,"name":"bool","nodeType":"ElementaryTypeName","src":"9670:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9622:63:10"},"returnParameters":{"id":909,"nodeType":"ParameterList","parameters":[],"src":"9703:0:10"},"scope":1007,"src":"9605:432:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1005,"nodeType":"Block","src":"10408:387:10","statements":[{"assignments":[969],"declarations":[{"constant":false,"id":969,"mutability":"mutable","name":"currentAllowance","nameLocation":"10426:16:10","nodeType":"VariableDeclaration","scope":1005,"src":"10418:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":968,"name":"uint256","nodeType":"ElementaryTypeName","src":"10418:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":974,"initialValue":{"arguments":[{"id":971,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"10455:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":972,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"10462:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":970,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"10445:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10445:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10418:52:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":975,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"10484:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10508:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":977,"name":"uint256","nodeType":"ElementaryTypeName","src":"10508:7:10","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":976,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10503:4:10","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10503:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":980,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10517:3:10","memberName":"max","nodeType":"MemberAccess","src":"10503:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10484:36:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1004,"nodeType":"IfStatement","src":"10480:309:10","trueBody":{"id":1003,"nodeType":"Block","src":"10522:267:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":982,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"10540:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":983,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"10559:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10540:24:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":992,"nodeType":"IfStatement","src":"10536:130:10","trueBody":{"id":991,"nodeType":"Block","src":"10566:100:10","statements":[{"errorCall":{"arguments":[{"id":986,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"10618:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":987,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"10627:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":988,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"10645:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":985,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"10591:26:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256) pure returns (error)"}},"id":989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10591:60:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":990,"nodeType":"RevertStatement","src":"10584:67:10"}]}},{"id":1002,"nodeType":"UncheckedBlock","src":"10679:100:10","statements":[{"expression":{"arguments":[{"id":994,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"10716:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":995,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"10723:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":996,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"10732:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":997,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"10751:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10732:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10758:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":993,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[898,958],"referencedDeclaration":958,"src":"10707:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10707:57:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1001,"nodeType":"ExpressionStatement","src":"10707:57:10"}]}]}}]},"documentation":{"id":959,"nodeType":"StructuredDocumentation","src":"10043:271:10","text":" @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":1006,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10328:15:10","nodeType":"FunctionDefinition","parameters":{"id":966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":961,"mutability":"mutable","name":"owner","nameLocation":"10352:5:10","nodeType":"VariableDeclaration","scope":1006,"src":"10344:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":960,"name":"address","nodeType":"ElementaryTypeName","src":"10344:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":963,"mutability":"mutable","name":"spender","nameLocation":"10367:7:10","nodeType":"VariableDeclaration","scope":1006,"src":"10359:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":962,"name":"address","nodeType":"ElementaryTypeName","src":"10359:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":965,"mutability":"mutable","name":"value","nameLocation":"10384:5:10","nodeType":"VariableDeclaration","scope":1006,"src":"10376:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":964,"name":"uint256","nodeType":"ElementaryTypeName","src":"10376:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10343:47:10"},"returnParameters":{"id":967,"nodeType":"ParameterList","parameters":[],"src":"10408:0:10"},"scope":1007,"src":"10319:476:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1008,"src":"1106:9691:10","usedErrors":[367,372,377,386,391,396],"usedEvents":[1019,1028]}],"src":"105:10693:10"},"id":10},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1085]},"id":1086,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1009,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"106:25:11"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1010,"nodeType":"StructuredDocumentation","src":"133:71:11","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":1085,"linearizedBaseContracts":[1085],"name":"IERC20","nameLocation":"215:6:11","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1011,"nodeType":"StructuredDocumentation","src":"228:158:11","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1019,"name":"Transfer","nameLocation":"397:8:11","nodeType":"EventDefinition","parameters":{"id":1018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1013,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"422:4:11","nodeType":"VariableDeclaration","scope":1019,"src":"406:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1012,"name":"address","nodeType":"ElementaryTypeName","src":"406:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1015,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"444:2:11","nodeType":"VariableDeclaration","scope":1019,"src":"428:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1014,"name":"address","nodeType":"ElementaryTypeName","src":"428:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1017,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"456:5:11","nodeType":"VariableDeclaration","scope":1019,"src":"448:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1016,"name":"uint256","nodeType":"ElementaryTypeName","src":"448:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"405:57:11"},"src":"391:72:11"},{"anonymous":false,"documentation":{"id":1020,"nodeType":"StructuredDocumentation","src":"469:148:11","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1028,"name":"Approval","nameLocation":"628:8:11","nodeType":"EventDefinition","parameters":{"id":1027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1022,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"653:5:11","nodeType":"VariableDeclaration","scope":1028,"src":"637:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1021,"name":"address","nodeType":"ElementaryTypeName","src":"637:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1024,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"676:7:11","nodeType":"VariableDeclaration","scope":1028,"src":"660:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1023,"name":"address","nodeType":"ElementaryTypeName","src":"660:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1026,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"693:5:11","nodeType":"VariableDeclaration","scope":1028,"src":"685:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1025,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"636:63:11"},"src":"622:78:11"},{"documentation":{"id":1029,"nodeType":"StructuredDocumentation","src":"706:65:11","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":1034,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"785:11:11","nodeType":"FunctionDefinition","parameters":{"id":1030,"nodeType":"ParameterList","parameters":[],"src":"796:2:11"},"returnParameters":{"id":1033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1032,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1034,"src":"822:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1031,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:9:11"},"scope":1085,"src":"776:55:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1035,"nodeType":"StructuredDocumentation","src":"837:71:11","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":1042,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"922:9:11","nodeType":"FunctionDefinition","parameters":{"id":1038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1037,"mutability":"mutable","name":"account","nameLocation":"940:7:11","nodeType":"VariableDeclaration","scope":1042,"src":"932:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1036,"name":"address","nodeType":"ElementaryTypeName","src":"932:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"931:17:11"},"returnParameters":{"id":1041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1040,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1042,"src":"972:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1039,"name":"uint256","nodeType":"ElementaryTypeName","src":"972:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"971:9:11"},"scope":1085,"src":"913:68:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1043,"nodeType":"StructuredDocumentation","src":"987:213:11","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1052,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1214:8:11","nodeType":"FunctionDefinition","parameters":{"id":1048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1045,"mutability":"mutable","name":"to","nameLocation":"1231:2:11","nodeType":"VariableDeclaration","scope":1052,"src":"1223:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1044,"name":"address","nodeType":"ElementaryTypeName","src":"1223:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1047,"mutability":"mutable","name":"value","nameLocation":"1243:5:11","nodeType":"VariableDeclaration","scope":1052,"src":"1235:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1046,"name":"uint256","nodeType":"ElementaryTypeName","src":"1235:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1222:27:11"},"returnParameters":{"id":1051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1050,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1052,"src":"1268:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1049,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1267:6:11"},"scope":1085,"src":"1205:69:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1053,"nodeType":"StructuredDocumentation","src":"1280:264:11","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1062,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1558:9:11","nodeType":"FunctionDefinition","parameters":{"id":1058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1055,"mutability":"mutable","name":"owner","nameLocation":"1576:5:11","nodeType":"VariableDeclaration","scope":1062,"src":"1568:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1054,"name":"address","nodeType":"ElementaryTypeName","src":"1568:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1057,"mutability":"mutable","name":"spender","nameLocation":"1591:7:11","nodeType":"VariableDeclaration","scope":1062,"src":"1583:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1056,"name":"address","nodeType":"ElementaryTypeName","src":"1583:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1567:32:11"},"returnParameters":{"id":1061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1060,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1062,"src":"1623:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1059,"name":"uint256","nodeType":"ElementaryTypeName","src":"1623:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1622:9:11"},"scope":1085,"src":"1549:83:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1063,"nodeType":"StructuredDocumentation","src":"1638:667:11","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1072,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2319:7:11","nodeType":"FunctionDefinition","parameters":{"id":1068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1065,"mutability":"mutable","name":"spender","nameLocation":"2335:7:11","nodeType":"VariableDeclaration","scope":1072,"src":"2327:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1064,"name":"address","nodeType":"ElementaryTypeName","src":"2327:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1067,"mutability":"mutable","name":"value","nameLocation":"2352:5:11","nodeType":"VariableDeclaration","scope":1072,"src":"2344:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1066,"name":"uint256","nodeType":"ElementaryTypeName","src":"2344:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2326:32:11"},"returnParameters":{"id":1071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1070,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1072,"src":"2377:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1069,"name":"bool","nodeType":"ElementaryTypeName","src":"2377:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2376:6:11"},"scope":1085,"src":"2310:73:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1073,"nodeType":"StructuredDocumentation","src":"2389:297:11","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1084,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2700:12:11","nodeType":"FunctionDefinition","parameters":{"id":1080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1075,"mutability":"mutable","name":"from","nameLocation":"2721:4:11","nodeType":"VariableDeclaration","scope":1084,"src":"2713:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1074,"name":"address","nodeType":"ElementaryTypeName","src":"2713:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1077,"mutability":"mutable","name":"to","nameLocation":"2735:2:11","nodeType":"VariableDeclaration","scope":1084,"src":"2727:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1076,"name":"address","nodeType":"ElementaryTypeName","src":"2727:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1079,"mutability":"mutable","name":"value","nameLocation":"2747:5:11","nodeType":"VariableDeclaration","scope":1084,"src":"2739:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1078,"name":"uint256","nodeType":"ElementaryTypeName","src":"2739:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2712:41:11"},"returnParameters":{"id":1083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1082,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1084,"src":"2772:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1081,"name":"bool","nodeType":"ElementaryTypeName","src":"2772:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2771:6:11"},"scope":1085,"src":"2691:87:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1086,"src":"205:2575:11","usedErrors":[],"usedEvents":[1019,1028]}],"src":"106:2675:11"},"id":11},"@openzeppelin/contracts/token/ERC20/extensions/ERC1363.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC1363.sol","exportedSymbols":{"ERC1363":[1323],"ERC1363Utils":[2016],"ERC165":[4702],"ERC20":[1007],"IERC1363":[229],"IERC165":[4714]},"id":1324,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1087,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:12"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":1089,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1324,"sourceUnit":1008,"src":"144:35:12","symbolAliases":[{"foreign":{"id":1088,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"152:5:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../../utils/introspection/ERC165.sol","id":1092,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1324,"sourceUnit":4703,"src":"180:72:12","symbolAliases":[{"foreign":{"id":1090,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4714,"src":"188:7:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1091,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4702,"src":"197:6:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363.sol","file":"../../../interfaces/IERC1363.sol","id":1094,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1324,"sourceUnit":230,"src":"253:58:12","symbolAliases":[{"foreign":{"id":1093,"name":"IERC1363","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"261:8:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/ERC1363Utils.sol","file":"../utils/ERC1363Utils.sol","id":1096,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1324,"sourceUnit":2017,"src":"312:55:12","symbolAliases":[{"foreign":{"id":1095,"name":"ERC1363Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"320:12:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1098,"name":"ERC20","nameLocations":["771:5:12"],"nodeType":"IdentifierPath","referencedDeclaration":1007,"src":"771:5:12"},"id":1099,"nodeType":"InheritanceSpecifier","src":"771:5:12"},{"baseName":{"id":1100,"name":"ERC165","nameLocations":["778:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":4702,"src":"778:6:12"},"id":1101,"nodeType":"InheritanceSpecifier","src":"778:6:12"},{"baseName":{"id":1102,"name":"IERC1363","nameLocations":["786:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":229,"src":"786:8:12"},"id":1103,"nodeType":"InheritanceSpecifier","src":"786:8:12"}],"canonicalName":"ERC1363","contractDependencies":[],"contractKind":"contract","documentation":{"id":1097,"nodeType":"StructuredDocumentation","src":"369:372:12","text":" @title ERC1363\n @dev Extension of {ERC20} tokens that adds support for code execution after transfers and approvals\n on recipient contracts. Calls after transfers are enabled through the {ERC1363-transferAndCall} and\n {ERC1363-transferFromAndCall} methods while calls after approvals can be made with {ERC1363-approveAndCall}\n _Available since v5.1._"},"fullyImplemented":true,"id":1323,"linearizedBaseContracts":[1323,229,4702,4714,1007,397,1827,1085,2046],"name":"ERC1363","nameLocation":"760:7:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1104,"nodeType":"StructuredDocumentation","src":"801:228:12","text":" @dev Indicates a failure within the {transfer} part of a transferAndCall operation.\n @param receiver Address to which tokens are being transferred.\n @param value Amount of tokens to be transferred."},"errorSelector":"231b03ae","id":1110,"name":"ERC1363TransferFailed","nameLocation":"1040:21:12","nodeType":"ErrorDefinition","parameters":{"id":1109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1106,"mutability":"mutable","name":"receiver","nameLocation":"1070:8:12","nodeType":"VariableDeclaration","scope":1110,"src":"1062:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1105,"name":"address","nodeType":"ElementaryTypeName","src":"1062:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1108,"mutability":"mutable","name":"value","nameLocation":"1088:5:12","nodeType":"VariableDeclaration","scope":1110,"src":"1080:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1107,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1061:33:12"},"src":"1034:61:12"},{"documentation":{"id":1111,"nodeType":"StructuredDocumentation","src":"1101:292:12","text":" @dev Indicates a failure within the {transferFrom} part of a transferFromAndCall operation.\n @param sender Address from which to send tokens.\n @param receiver Address to which tokens are being transferred.\n @param value Amount of tokens to be transferred."},"errorSelector":"b56855e6","id":1119,"name":"ERC1363TransferFromFailed","nameLocation":"1404:25:12","nodeType":"ErrorDefinition","parameters":{"id":1118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1113,"mutability":"mutable","name":"sender","nameLocation":"1438:6:12","nodeType":"VariableDeclaration","scope":1119,"src":"1430:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1112,"name":"address","nodeType":"ElementaryTypeName","src":"1430:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1115,"mutability":"mutable","name":"receiver","nameLocation":"1454:8:12","nodeType":"VariableDeclaration","scope":1119,"src":"1446:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1114,"name":"address","nodeType":"ElementaryTypeName","src":"1446:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1117,"mutability":"mutable","name":"value","nameLocation":"1472:5:12","nodeType":"VariableDeclaration","scope":1119,"src":"1464:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1116,"name":"uint256","nodeType":"ElementaryTypeName","src":"1464:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1429:49:12"},"src":"1398:81:12"},{"documentation":{"id":1120,"nodeType":"StructuredDocumentation","src":"1485:208:12","text":" @dev Indicates a failure within the {approve} part of a approveAndCall operation.\n @param spender Address which will spend the funds.\n @param value Amount of tokens to be spent."},"errorSelector":"50e555c4","id":1126,"name":"ERC1363ApproveFailed","nameLocation":"1704:20:12","nodeType":"ErrorDefinition","parameters":{"id":1125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1122,"mutability":"mutable","name":"spender","nameLocation":"1733:7:12","nodeType":"VariableDeclaration","scope":1126,"src":"1725:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1121,"name":"address","nodeType":"ElementaryTypeName","src":"1725:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1124,"mutability":"mutable","name":"value","nameLocation":"1750:5:12","nodeType":"VariableDeclaration","scope":1126,"src":"1742:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1123,"name":"uint256","nodeType":"ElementaryTypeName","src":"1742:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1724:32:12"},"src":"1698:59:12"},{"baseFunctions":[4701,4713],"body":{"id":1149,"nodeType":"Block","src":"1899:105:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1137,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"1916:11:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1139,"name":"IERC1363","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"1936:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1363_$229_$","typeString":"type(contract IERC1363)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1363_$229_$","typeString":"type(contract IERC1363)"}],"id":1138,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1931:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1931:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1363_$229","typeString":"type(contract IERC1363)"}},"id":1141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1946:11:12","memberName":"interfaceId","nodeType":"MemberAccess","src":"1931:26:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1916:41:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1145,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"1985:11:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1143,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1961:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC1363_$1323_$","typeString":"type(contract super ERC1363)"}},"id":1144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1967:17:12","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":4701,"src":"1961:23:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":1146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1961:36:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1916:81:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1136,"id":1148,"nodeType":"Return","src":"1909:88:12"}]},"documentation":{"id":1127,"nodeType":"StructuredDocumentation","src":"1763:23:12","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":1150,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1800:17:12","nodeType":"FunctionDefinition","overrides":{"id":1133,"nodeType":"OverrideSpecifier","overrides":[{"id":1131,"name":"ERC165","nameLocations":["1867:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":4702,"src":"1867:6:12"},{"id":1132,"name":"IERC165","nameLocations":["1875:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":4714,"src":"1875:7:12"}],"src":"1858:25:12"},"parameters":{"id":1130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1129,"mutability":"mutable","name":"interfaceId","nameLocation":"1825:11:12","nodeType":"VariableDeclaration","scope":1150,"src":"1818:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1128,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1818:6:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1817:20:12"},"returnParameters":{"id":1136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1135,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1150,"src":"1893:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1134,"name":"bool","nodeType":"ElementaryTypeName","src":"1893:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1892:6:12"},"scope":1323,"src":"1791:213:12","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[168],"body":{"id":1166,"nodeType":"Block","src":"2640:54:12","statements":[{"expression":{"arguments":[{"id":1161,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"2673:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1162,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"2677:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2684:2:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1160,"name":"transferAndCall","nodeType":"Identifier","overloadedDeclarations":[1167,1206],"referencedDeclaration":1206,"src":"2657:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) returns (bool)"}},"id":1164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2657:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1159,"id":1165,"nodeType":"Return","src":"2650:37:12"}]},"documentation":{"id":1151,"nodeType":"StructuredDocumentation","src":"2010:551:12","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`. Returns a flag that indicates\n if the call succeeded.\n Requirements:\n - The target has code (i.e. is a contract).\n - The target `to` must implement the {IERC1363Receiver} interface.\n - The target must return the {IERC1363Receiver-onTransferReceived} selector to accept the transfer.\n - The internal {transfer} must succeed (returned `true`)."},"functionSelector":"1296ee62","id":1167,"implemented":true,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"2575:15:12","nodeType":"FunctionDefinition","parameters":{"id":1156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1153,"mutability":"mutable","name":"to","nameLocation":"2599:2:12","nodeType":"VariableDeclaration","scope":1167,"src":"2591:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1152,"name":"address","nodeType":"ElementaryTypeName","src":"2591:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1155,"mutability":"mutable","name":"value","nameLocation":"2611:5:12","nodeType":"VariableDeclaration","scope":1167,"src":"2603:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1154,"name":"uint256","nodeType":"ElementaryTypeName","src":"2603:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2590:27:12"},"returnParameters":{"id":1159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1158,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1167,"src":"2634:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1157,"name":"bool","nodeType":"ElementaryTypeName","src":"2634:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2633:6:12"},"scope":1323,"src":"2566:128:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[180],"body":{"id":1205,"nodeType":"Block","src":"2935:225:12","statements":[{"condition":{"id":1183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2949:20:12","subExpression":{"arguments":[{"id":1180,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"2959:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1181,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"2963:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1179,"name":"transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":617,"src":"2950:8:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":1182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2950:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1190,"nodeType":"IfStatement","src":"2945:90:12","trueBody":{"id":1189,"nodeType":"Block","src":"2971:64:12","statements":[{"errorCall":{"arguments":[{"id":1185,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"3014:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1186,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"3018:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1184,"name":"ERC1363TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"2992:21:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256) pure returns (error)"}},"id":1187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2992:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1188,"nodeType":"RevertStatement","src":"2985:39:12"}]}},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1194,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2028,"src":"3088:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3088:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1196,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2028,"src":"3102:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3102:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1198,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"3116:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1199,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"3120:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1200,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"3127:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1191,"name":"ERC1363Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"3044:12:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1363Utils_$2016_$","typeString":"type(library ERC1363Utils)"}},"id":1193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3057:30:12","memberName":"checkOnERC1363TransferReceived","nodeType":"MemberAccess","referencedDeclaration":1949,"src":"3044:43:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":1201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3044:88:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1202,"nodeType":"ExpressionStatement","src":"3044:88:12"},{"expression":{"hexValue":"74727565","id":1203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3149:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1178,"id":1204,"nodeType":"Return","src":"3142:11:12"}]},"documentation":{"id":1168,"nodeType":"StructuredDocumentation","src":"2700:129:12","text":" @dev Variant of {transferAndCall} that accepts an additional `data` parameter with\n no specified format."},"functionSelector":"4000aea0","id":1206,"implemented":true,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"2843:15:12","nodeType":"FunctionDefinition","parameters":{"id":1175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1170,"mutability":"mutable","name":"to","nameLocation":"2867:2:12","nodeType":"VariableDeclaration","scope":1206,"src":"2859:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1169,"name":"address","nodeType":"ElementaryTypeName","src":"2859:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1172,"mutability":"mutable","name":"value","nameLocation":"2879:5:12","nodeType":"VariableDeclaration","scope":1206,"src":"2871:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1171,"name":"uint256","nodeType":"ElementaryTypeName","src":"2871:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1174,"mutability":"mutable","name":"data","nameLocation":"2899:4:12","nodeType":"VariableDeclaration","scope":1206,"src":"2886:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1173,"name":"bytes","nodeType":"ElementaryTypeName","src":"2886:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2858:46:12"},"returnParameters":{"id":1178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1177,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1206,"src":"2929:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1176,"name":"bool","nodeType":"ElementaryTypeName","src":"2929:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2928:6:12"},"scope":1323,"src":"2834:326:12","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[192],"body":{"id":1225,"nodeType":"Block","src":"3834:64:12","statements":[{"expression":{"arguments":[{"id":1219,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"3871:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1220,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"3877:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1221,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"3881:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3888:2:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1218,"name":"transferFromAndCall","nodeType":"Identifier","overloadedDeclarations":[1226,1268],"referencedDeclaration":1268,"src":"3851:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":1223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3851:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1217,"id":1224,"nodeType":"Return","src":"3844:47:12"}]},"documentation":{"id":1207,"nodeType":"StructuredDocumentation","src":"3166:571:12","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`. Returns a flag that indicates\n if the call succeeded.\n Requirements:\n - The target has code (i.e. is a contract).\n - The target `to` must implement the {IERC1363Receiver} interface.\n - The target must return the {IERC1363Receiver-onTransferReceived} selector to accept the transfer.\n - The internal {transferFrom} must succeed (returned `true`)."},"functionSelector":"d8fbe994","id":1226,"implemented":true,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"3751:19:12","nodeType":"FunctionDefinition","parameters":{"id":1214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1209,"mutability":"mutable","name":"from","nameLocation":"3779:4:12","nodeType":"VariableDeclaration","scope":1226,"src":"3771:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1208,"name":"address","nodeType":"ElementaryTypeName","src":"3771:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1211,"mutability":"mutable","name":"to","nameLocation":"3793:2:12","nodeType":"VariableDeclaration","scope":1226,"src":"3785:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1210,"name":"address","nodeType":"ElementaryTypeName","src":"3785:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1213,"mutability":"mutable","name":"value","nameLocation":"3805:5:12","nodeType":"VariableDeclaration","scope":1226,"src":"3797:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1212,"name":"uint256","nodeType":"ElementaryTypeName","src":"3797:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3770:41:12"},"returnParameters":{"id":1217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1216,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1226,"src":"3828:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1215,"name":"bool","nodeType":"ElementaryTypeName","src":"3828:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3827:6:12"},"scope":1323,"src":"3742:156:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[206],"body":{"id":1267,"nodeType":"Block","src":"4199:237:12","statements":[{"condition":{"id":1245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4213:30:12","subExpression":{"arguments":[{"id":1241,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1229,"src":"4227:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1242,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"4233:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1243,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"4237:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1240,"name":"transferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":690,"src":"4214:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) returns (bool)"}},"id":1244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4214:29:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1253,"nodeType":"IfStatement","src":"4209:110:12","trueBody":{"id":1252,"nodeType":"Block","src":"4245:74:12","statements":[{"errorCall":{"arguments":[{"id":1247,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1229,"src":"4292:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1248,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"4298:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1249,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"4302:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1246,"name":"ERC1363TransferFromFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1119,"src":"4266:25:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$_t_uint256_$returns$_t_error_$","typeString":"function (address,address,uint256) pure returns (error)"}},"id":1250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4266:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1251,"nodeType":"RevertStatement","src":"4259:49:12"}]}},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1257,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2028,"src":"4372:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4372:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1259,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1229,"src":"4386:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1260,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"4392:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1261,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"4396:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1262,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"4403:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1254,"name":"ERC1363Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"4328:12:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1363Utils_$2016_$","typeString":"type(library ERC1363Utils)"}},"id":1256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4341:30:12","memberName":"checkOnERC1363TransferReceived","nodeType":"MemberAccess","referencedDeclaration":1949,"src":"4328:43:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":1263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4328:80:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1264,"nodeType":"ExpressionStatement","src":"4328:80:12"},{"expression":{"hexValue":"74727565","id":1265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4425:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1239,"id":1266,"nodeType":"Return","src":"4418:11:12"}]},"documentation":{"id":1227,"nodeType":"StructuredDocumentation","src":"3904:133:12","text":" @dev Variant of {transferFromAndCall} that accepts an additional `data` parameter with\n no specified format."},"functionSelector":"c1d34b89","id":1268,"implemented":true,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"4051:19:12","nodeType":"FunctionDefinition","parameters":{"id":1236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1229,"mutability":"mutable","name":"from","nameLocation":"4088:4:12","nodeType":"VariableDeclaration","scope":1268,"src":"4080:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1228,"name":"address","nodeType":"ElementaryTypeName","src":"4080:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1231,"mutability":"mutable","name":"to","nameLocation":"4110:2:12","nodeType":"VariableDeclaration","scope":1268,"src":"4102:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1230,"name":"address","nodeType":"ElementaryTypeName","src":"4102:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1233,"mutability":"mutable","name":"value","nameLocation":"4130:5:12","nodeType":"VariableDeclaration","scope":1268,"src":"4122:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1232,"name":"uint256","nodeType":"ElementaryTypeName","src":"4122:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1235,"mutability":"mutable","name":"data","nameLocation":"4158:4:12","nodeType":"VariableDeclaration","scope":1268,"src":"4145:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1234,"name":"bytes","nodeType":"ElementaryTypeName","src":"4145:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4070:98:12"},"returnParameters":{"id":1239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1238,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1268,"src":"4193:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1237,"name":"bool","nodeType":"ElementaryTypeName","src":"4193:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4192:6:12"},"scope":1323,"src":"4042:394:12","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[216],"body":{"id":1284,"nodeType":"Block","src":"5102:58:12","statements":[{"expression":{"arguments":[{"id":1279,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"5134:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1280,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"5143:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5150:2:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1278,"name":"approveAndCall","nodeType":"Identifier","overloadedDeclarations":[1285,1322],"referencedDeclaration":1322,"src":"5119:14:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) returns (bool)"}},"id":1282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5119:34:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1277,"id":1283,"nodeType":"Return","src":"5112:41:12"}]},"documentation":{"id":1269,"nodeType":"StructuredDocumentation","src":"4442:577:12","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n Returns a flag that indicates if the call succeeded.\n Requirements:\n - The target has code (i.e. is a contract).\n - The target `spender` must implement the {IERC1363Spender} interface.\n - The target must return the {IERC1363Spender-onApprovalReceived} selector to accept the approval.\n - The internal {approve} must succeed (returned `true`)."},"functionSelector":"3177029f","id":1285,"implemented":true,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"5033:14:12","nodeType":"FunctionDefinition","parameters":{"id":1274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1271,"mutability":"mutable","name":"spender","nameLocation":"5056:7:12","nodeType":"VariableDeclaration","scope":1285,"src":"5048:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1270,"name":"address","nodeType":"ElementaryTypeName","src":"5048:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1273,"mutability":"mutable","name":"value","nameLocation":"5073:5:12","nodeType":"VariableDeclaration","scope":1285,"src":"5065:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1272,"name":"uint256","nodeType":"ElementaryTypeName","src":"5065:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5047:32:12"},"returnParameters":{"id":1277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1276,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1285,"src":"5096:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1275,"name":"bool","nodeType":"ElementaryTypeName","src":"5096:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5095:6:12"},"scope":1323,"src":"5024:136:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[228],"body":{"id":1321,"nodeType":"Block","src":"5404:224:12","statements":[{"condition":{"id":1301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5418:24:12","subExpression":{"arguments":[{"id":1298,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1288,"src":"5427:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1299,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"5436:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1297,"name":"approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"5419:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":1300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5419:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1308,"nodeType":"IfStatement","src":"5414:98:12","trueBody":{"id":1307,"nodeType":"Block","src":"5444:68:12","statements":[{"errorCall":{"arguments":[{"id":1303,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1288,"src":"5486:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1304,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"5495:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1302,"name":"ERC1363ApproveFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"5465:20:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256) pure returns (error)"}},"id":1305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5465:36:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1306,"nodeType":"RevertStatement","src":"5458:43:12"}]}},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1312,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2028,"src":"5565:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5565:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1314,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1288,"src":"5579:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1315,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"5588:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1316,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"5595:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1309,"name":"ERC1363Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"5521:12:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1363Utils_$2016_$","typeString":"type(library ERC1363Utils)"}},"id":1311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5534:30:12","memberName":"checkOnERC1363ApprovalReceived","nodeType":"MemberAccess","referencedDeclaration":2015,"src":"5521:43:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5521:79:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1318,"nodeType":"ExpressionStatement","src":"5521:79:12"},{"expression":{"hexValue":"74727565","id":1319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5617:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1296,"id":1320,"nodeType":"Return","src":"5610:11:12"}]},"documentation":{"id":1286,"nodeType":"StructuredDocumentation","src":"5166:128:12","text":" @dev Variant of {approveAndCall} that accepts an additional `data` parameter with\n no specified format."},"functionSelector":"cae9ca51","id":1322,"implemented":true,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"5308:14:12","nodeType":"FunctionDefinition","parameters":{"id":1293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1288,"mutability":"mutable","name":"spender","nameLocation":"5331:7:12","nodeType":"VariableDeclaration","scope":1322,"src":"5323:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1287,"name":"address","nodeType":"ElementaryTypeName","src":"5323:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1290,"mutability":"mutable","name":"value","nameLocation":"5348:5:12","nodeType":"VariableDeclaration","scope":1322,"src":"5340:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1289,"name":"uint256","nodeType":"ElementaryTypeName","src":"5340:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1292,"mutability":"mutable","name":"data","nameLocation":"5368:4:12","nodeType":"VariableDeclaration","scope":1322,"src":"5355:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1291,"name":"bytes","nodeType":"ElementaryTypeName","src":"5355:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5322:51:12"},"returnParameters":{"id":1296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1295,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1322,"src":"5398:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1294,"name":"bool","nodeType":"ElementaryTypeName","src":"5398:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5397:6:12"},"scope":1323,"src":"5299:329:12","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":1324,"src":"742:4888:12","usedErrors":[367,372,377,386,391,396,1110,1119,1126,1875,1880],"usedEvents":[1019,1028]}],"src":"118:5513:12"},"id":12},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","exportedSymbols":{"Context":[2046],"ERC20":[1007],"ERC20Burnable":[1369]},"id":1370,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1325,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"124:24:13"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":1327,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1370,"sourceUnit":1008,"src":"150:35:13","symbolAliases":[{"foreign":{"id":1326,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"158:5:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../../utils/Context.sol","id":1329,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1370,"sourceUnit":2047,"src":"186:51:13","symbolAliases":[{"foreign":{"id":1328,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2046,"src":"194:7:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1331,"name":"Context","nameLocations":["483:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":2046,"src":"483:7:13"},"id":1332,"nodeType":"InheritanceSpecifier","src":"483:7:13"},{"baseName":{"id":1333,"name":"ERC20","nameLocations":["492:5:13"],"nodeType":"IdentifierPath","referencedDeclaration":1007,"src":"492:5:13"},"id":1334,"nodeType":"InheritanceSpecifier","src":"492:5:13"}],"canonicalName":"ERC20Burnable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1330,"nodeType":"StructuredDocumentation","src":"239:208:13","text":" @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."},"fullyImplemented":true,"id":1369,"linearizedBaseContracts":[1369,1007,397,1827,1085,2046],"name":"ERC20Burnable","nameLocation":"466:13:13","nodeType":"ContractDefinition","nodes":[{"body":{"id":1346,"nodeType":"Block","src":"662:43:13","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1341,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2028,"src":"678:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"678:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1343,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"692:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1340,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"672:5:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"672:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1345,"nodeType":"ExpressionStatement","src":"672:26:13"}]},"documentation":{"id":1335,"nodeType":"StructuredDocumentation","src":"504:109:13","text":" @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."},"functionSelector":"42966c68","id":1347,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"627:4:13","nodeType":"FunctionDefinition","parameters":{"id":1338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1337,"mutability":"mutable","name":"value","nameLocation":"640:5:13","nodeType":"VariableDeclaration","scope":1347,"src":"632:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1336,"name":"uint256","nodeType":"ElementaryTypeName","src":"632:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"631:15:13"},"returnParameters":{"id":1339,"nodeType":"ParameterList","parameters":[],"src":"662:0:13"},"scope":1369,"src":"618:87:13","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1367,"nodeType":"Block","src":"1086:93:13","statements":[{"expression":{"arguments":[{"id":1356,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"1112:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1357,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2028,"src":"1121:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1121:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1359,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"1135:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1355,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"1096:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1096:45:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1361,"nodeType":"ExpressionStatement","src":"1096:45:13"},{"expression":{"arguments":[{"id":1363,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"1157:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1364,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"1166:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1362,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"1151:5:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1151:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1366,"nodeType":"ExpressionStatement","src":"1151:21:13"}]},"documentation":{"id":1348,"nodeType":"StructuredDocumentation","src":"711:305:13","text":" @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."},"functionSelector":"79cc6790","id":1368,"implemented":true,"kind":"function","modifiers":[],"name":"burnFrom","nameLocation":"1030:8:13","nodeType":"FunctionDefinition","parameters":{"id":1353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1350,"mutability":"mutable","name":"account","nameLocation":"1047:7:13","nodeType":"VariableDeclaration","scope":1368,"src":"1039:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1349,"name":"address","nodeType":"ElementaryTypeName","src":"1039:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1352,"mutability":"mutable","name":"value","nameLocation":"1064:5:13","nodeType":"VariableDeclaration","scope":1368,"src":"1056:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1351,"name":"uint256","nodeType":"ElementaryTypeName","src":"1056:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1038:32:13"},"returnParameters":{"id":1354,"nodeType":"ParameterList","parameters":[],"src":"1086:0:13"},"scope":1369,"src":"1021:158:13","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":1370,"src":"448:733:13","usedErrors":[367,372,377,386,391,396],"usedEvents":[1019,1028]}],"src":"124:1058:13"},"id":13},"@openzeppelin/contracts/token/ERC20/extensions/ERC20FlashMint.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20FlashMint.sol","exportedSymbols":{"ERC20":[1007],"ERC20FlashMint":[1613],"IERC3156FlashBorrower":[291],"IERC3156FlashLender":[330]},"id":1614,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1371,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:14"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol","file":"../../../interfaces/IERC3156FlashBorrower.sol","id":1373,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1614,"sourceUnit":292,"src":"151:84:14","symbolAliases":[{"foreign":{"id":1372,"name":"IERC3156FlashBorrower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":291,"src":"159:21:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol","file":"../../../interfaces/IERC3156FlashLender.sol","id":1375,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1614,"sourceUnit":331,"src":"236:80:14","symbolAliases":[{"foreign":{"id":1374,"name":"IERC3156FlashLender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"244:19:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":1377,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1614,"sourceUnit":1008,"src":"317:35:14","symbolAliases":[{"foreign":{"id":1376,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"325:5:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1379,"name":"ERC20","nameLocations":["966:5:14"],"nodeType":"IdentifierPath","referencedDeclaration":1007,"src":"966:5:14"},"id":1380,"nodeType":"InheritanceSpecifier","src":"966:5:14"},{"baseName":{"id":1381,"name":"IERC3156FlashLender","nameLocations":["973:19:14"],"nodeType":"IdentifierPath","referencedDeclaration":330,"src":"973:19:14"},"id":1382,"nodeType":"InheritanceSpecifier","src":"973:19:14"}],"canonicalName":"ERC20FlashMint","contractDependencies":[],"contractKind":"contract","documentation":{"id":1378,"nodeType":"StructuredDocumentation","src":"354:575:14","text":" @dev Implementation of the ERC-3156 Flash loans extension, as defined in\n https://eips.ethereum.org/EIPS/eip-3156[ERC-3156].\n Adds the {flashLoan} method, which provides flash loan support at the token\n level. By default there is no fee, but this can be changed by overriding {flashFee}.\n NOTE: When this extension is used along with the {ERC20Capped} or {ERC20Votes} extensions,\n {maxFlashLoan} will not correctly reflect the maximum that can be flash minted. We recommend\n overriding {maxFlashLoan} so that it correctly reflects the supply cap."},"fullyImplemented":true,"id":1613,"linearizedBaseContracts":[1613,330,1007,397,1827,1085,2046],"name":"ERC20FlashMint","nameLocation":"948:14:14","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1387,"mutability":"constant","name":"RETURN_VALUE","nameLocation":"1024:12:14","nodeType":"VariableDeclaration","scope":1613,"src":"999:85:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1383,"name":"bytes32","nodeType":"ElementaryTypeName","src":"999:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"45524333313536466c617368426f72726f7765722e6f6e466c6173684c6f616e","id":1385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1049:34:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd9","typeString":"literal_string \"ERC3156FlashBorrower.onFlashLoan\""},"value":"ERC3156FlashBorrower.onFlashLoan"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd9","typeString":"literal_string \"ERC3156FlashBorrower.onFlashLoan\""}],"id":1384,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1039:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1039:45:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"documentation":{"id":1388,"nodeType":"StructuredDocumentation","src":"1091:52:14","text":" @dev The loan token is not valid."},"errorSelector":"b5a7db92","id":1392,"name":"ERC3156UnsupportedToken","nameLocation":"1154:23:14","nodeType":"ErrorDefinition","parameters":{"id":1391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1390,"mutability":"mutable","name":"token","nameLocation":"1186:5:14","nodeType":"VariableDeclaration","scope":1392,"src":"1178:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1389,"name":"address","nodeType":"ElementaryTypeName","src":"1178:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1177:15:14"},"src":"1148:45:14"},{"documentation":{"id":1393,"nodeType":"StructuredDocumentation","src":"1199:82:14","text":" @dev The requested loan exceeds the max loan value for `token`."},"errorSelector":"fd9a7609","id":1397,"name":"ERC3156ExceededMaxLoan","nameLocation":"1292:22:14","nodeType":"ErrorDefinition","parameters":{"id":1396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1395,"mutability":"mutable","name":"maxLoan","nameLocation":"1323:7:14","nodeType":"VariableDeclaration","scope":1397,"src":"1315:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1394,"name":"uint256","nodeType":"ElementaryTypeName","src":"1315:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1314:17:14"},"src":"1286:46:14"},{"documentation":{"id":1398,"nodeType":"StructuredDocumentation","src":"1338:115:14","text":" @dev The receiver of a flashloan is not a valid {IERC3156FlashBorrower-onFlashLoan} implementer."},"errorSelector":"678c5b00","id":1402,"name":"ERC3156InvalidReceiver","nameLocation":"1464:22:14","nodeType":"ErrorDefinition","parameters":{"id":1401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1400,"mutability":"mutable","name":"receiver","nameLocation":"1495:8:14","nodeType":"VariableDeclaration","scope":1402,"src":"1487:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1399,"name":"address","nodeType":"ElementaryTypeName","src":"1487:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1486:18:14"},"src":"1458:47:14"},{"baseFunctions":[304],"body":{"id":1427,"nodeType":"Block","src":"2032:86:14","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1410,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1405,"src":"2049:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":1413,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2066:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20FlashMint_$1613","typeString":"contract ERC20FlashMint"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC20FlashMint_$1613","typeString":"contract ERC20FlashMint"}],"id":1412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2058:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1411,"name":"address","nodeType":"ElementaryTypeName","src":"2058:7:14","typeDescriptions":{}}},"id":1414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2058:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2049:22:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2110:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2049:62:14","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2079:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1417,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1416,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2074:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2074:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1420,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2088:3:14","memberName":"max","nodeType":"MemberAccess","src":"2074:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1421,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":580,"src":"2094:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2094:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2074:33:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1409,"id":1426,"nodeType":"Return","src":"2042:69:14"}]},"documentation":{"id":1403,"nodeType":"StructuredDocumentation","src":"1511:441:14","text":" @dev Returns the maximum amount of tokens available for loan.\n @param token The address of the token that is requested.\n @return The amount of token that can be loaned.\n NOTE: This function does not consider any form of supply cap, so in case\n it's used in a token with a cap like {ERC20Capped}, make sure to override this\n function to integrate the cap instead of `type(uint256).max`."},"functionSelector":"613255ab","id":1428,"implemented":true,"kind":"function","modifiers":[],"name":"maxFlashLoan","nameLocation":"1966:12:14","nodeType":"FunctionDefinition","parameters":{"id":1406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1405,"mutability":"mutable","name":"token","nameLocation":"1987:5:14","nodeType":"VariableDeclaration","scope":1428,"src":"1979:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1404,"name":"address","nodeType":"ElementaryTypeName","src":"1979:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1978:15:14"},"returnParameters":{"id":1409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1408,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1428,"src":"2023:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1407,"name":"uint256","nodeType":"ElementaryTypeName","src":"2023:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2022:9:14"},"scope":1613,"src":"1957:161:14","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[314],"body":{"id":1455,"nodeType":"Block","src":"2569:146:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1438,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"2583:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":1441,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2600:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20FlashMint_$1613","typeString":"contract ERC20FlashMint"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC20FlashMint_$1613","typeString":"contract ERC20FlashMint"}],"id":1440,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2592:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1439,"name":"address","nodeType":"ElementaryTypeName","src":"2592:7:14","typeDescriptions":{}}},"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2592:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2583:22:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1449,"nodeType":"IfStatement","src":"2579:90:14","trueBody":{"id":1448,"nodeType":"Block","src":"2607:62:14","statements":[{"errorCall":{"arguments":[{"id":1445,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"2652:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1444,"name":"ERC3156UnsupportedToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1392,"src":"2628:23:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2628:30:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1447,"nodeType":"RevertStatement","src":"2621:37:14"}]}},{"expression":{"arguments":[{"id":1451,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"2695:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1452,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"2702:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1450,"name":"_flashFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1473,"src":"2685:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":1453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2685:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1437,"id":1454,"nodeType":"Return","src":"2678:30:14"}]},"documentation":{"id":1429,"nodeType":"StructuredDocumentation","src":"2124:354:14","text":" @dev Returns the fee applied when doing flash loans. This function calls\n the {_flashFee} function which returns the fee applied when doing flash\n loans.\n @param token The token to be flash loaned.\n @param value The amount of tokens to be loaned.\n @return The fees applied to the corresponding flash loan."},"functionSelector":"d9d98ce4","id":1456,"implemented":true,"kind":"function","modifiers":[],"name":"flashFee","nameLocation":"2492:8:14","nodeType":"FunctionDefinition","parameters":{"id":1434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1431,"mutability":"mutable","name":"token","nameLocation":"2509:5:14","nodeType":"VariableDeclaration","scope":1456,"src":"2501:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1430,"name":"address","nodeType":"ElementaryTypeName","src":"2501:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1433,"mutability":"mutable","name":"value","nameLocation":"2524:5:14","nodeType":"VariableDeclaration","scope":1456,"src":"2516:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1432,"name":"uint256","nodeType":"ElementaryTypeName","src":"2516:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2500:30:14"},"returnParameters":{"id":1437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1436,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1456,"src":"2560:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1435,"name":"uint256","nodeType":"ElementaryTypeName","src":"2560:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2559:9:14"},"scope":1613,"src":"2483:232:14","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1472,"nodeType":"Block","src":"3192:138:14","statements":[{"expression":{"id":1466,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1459,"src":"3285:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1467,"nodeType":"ExpressionStatement","src":"3285:5:14"},{"expression":{"id":1468,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"3300:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1469,"nodeType":"ExpressionStatement","src":"3300:5:14"},{"expression":{"hexValue":"30","id":1470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3322:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1465,"id":1471,"nodeType":"Return","src":"3315:8:14"}]},"documentation":{"id":1457,"nodeType":"StructuredDocumentation","src":"2721:377:14","text":" @dev Returns the fee applied when doing flash loans. By default this\n implementation has 0 fees. This function can be overloaded to make\n the flash loan mechanism deflationary.\n @param token The token to be flash loaned.\n @param value The amount of tokens to be loaned.\n @return The fees applied to the corresponding flash loan."},"id":1473,"implemented":true,"kind":"function","modifiers":[],"name":"_flashFee","nameLocation":"3112:9:14","nodeType":"FunctionDefinition","parameters":{"id":1462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1459,"mutability":"mutable","name":"token","nameLocation":"3130:5:14","nodeType":"VariableDeclaration","scope":1473,"src":"3122:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1458,"name":"address","nodeType":"ElementaryTypeName","src":"3122:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1461,"mutability":"mutable","name":"value","nameLocation":"3145:5:14","nodeType":"VariableDeclaration","scope":1473,"src":"3137:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1460,"name":"uint256","nodeType":"ElementaryTypeName","src":"3137:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3121:30:14"},"returnParameters":{"id":1465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1464,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1473,"src":"3183:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1463,"name":"uint256","nodeType":"ElementaryTypeName","src":"3183:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3182:9:14"},"scope":1613,"src":"3103:227:14","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1484,"nodeType":"Block","src":"3718:34:14","statements":[{"expression":{"arguments":[{"hexValue":"30","id":1481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3743:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3735:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1479,"name":"address","nodeType":"ElementaryTypeName","src":"3735:7:14","typeDescriptions":{}}},"id":1482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3735:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1478,"id":1483,"nodeType":"Return","src":"3728:17:14"}]},"documentation":{"id":1474,"nodeType":"StructuredDocumentation","src":"3336:308:14","text":" @dev Returns the receiver address of the flash fee. By default this\n implementation returns the address(0) which means the fee amount will be burnt.\n This function can be overloaded to change the fee receiver.\n @return The address for which the flash fee will be sent to."},"id":1485,"implemented":true,"kind":"function","modifiers":[],"name":"_flashFeeReceiver","nameLocation":"3658:17:14","nodeType":"FunctionDefinition","parameters":{"id":1475,"nodeType":"ParameterList","parameters":[],"src":"3675:2:14"},"returnParameters":{"id":1478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1477,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1485,"src":"3709:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1476,"name":"address","nodeType":"ElementaryTypeName","src":"3709:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3708:9:14"},"scope":1613,"src":"3649:103:14","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[329],"body":{"id":1611,"nodeType":"Block","src":"4977:792:14","statements":[{"assignments":[1501],"declarations":[{"constant":false,"id":1501,"mutability":"mutable","name":"maxLoan","nameLocation":"4995:7:14","nodeType":"VariableDeclaration","scope":1611,"src":"4987:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1500,"name":"uint256","nodeType":"ElementaryTypeName","src":"4987:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1505,"initialValue":{"arguments":[{"id":1503,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1491,"src":"5018:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1502,"name":"maxFlashLoan","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"5005:12:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5005:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4987:37:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1506,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"5038:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1507,"name":"maxLoan","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"5046:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5038:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1514,"nodeType":"IfStatement","src":"5034:84:14","trueBody":{"id":1513,"nodeType":"Block","src":"5055:63:14","statements":[{"errorCall":{"arguments":[{"id":1510,"name":"maxLoan","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"5099:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1509,"name":"ERC3156ExceededMaxLoan","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"5076:22:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":1511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5076:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1512,"nodeType":"RevertStatement","src":"5069:38:14"}]}},{"assignments":[1516],"declarations":[{"constant":false,"id":1516,"mutability":"mutable","name":"fee","nameLocation":"5135:3:14","nodeType":"VariableDeclaration","scope":1611,"src":"5127:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1515,"name":"uint256","nodeType":"ElementaryTypeName","src":"5127:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1521,"initialValue":{"arguments":[{"id":1518,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1491,"src":"5150:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1519,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"5157:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1517,"name":"flashFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"5141:8:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":1520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5141:22:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5127:36:14"},{"expression":{"arguments":[{"arguments":[{"id":1525,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1489,"src":"5187:8:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$291","typeString":"contract IERC3156FlashBorrower"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$291","typeString":"contract IERC3156FlashBorrower"}],"id":1524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5179:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1523,"name":"address","nodeType":"ElementaryTypeName","src":"5179:7:14","typeDescriptions":{}}},"id":1526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5179:17:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1527,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"5198:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1522,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"5173:5:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5173:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1529,"nodeType":"ExpressionStatement","src":"5173:31:14"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1532,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2028,"src":"5239:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5239:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1534,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1491,"src":"5253:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1535,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"5260:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1536,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"5267:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1537,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"5272:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":1530,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1489,"src":"5218:8:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$291","typeString":"contract IERC3156FlashBorrower"}},"id":1531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5227:11:14","memberName":"onFlashLoan","nodeType":"MemberAccess","referencedDeclaration":290,"src":"5218:20:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (address,address,uint256,uint256,bytes memory) external returns (bytes32)"}},"id":1538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5218:59:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1539,"name":"RETURN_VALUE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1387,"src":"5281:12:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5218:75:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1549,"nodeType":"IfStatement","src":"5214:154:14","trueBody":{"id":1548,"nodeType":"Block","src":"5295:73:14","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1544,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1489,"src":"5347:8:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$291","typeString":"contract IERC3156FlashBorrower"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$291","typeString":"contract IERC3156FlashBorrower"}],"id":1543,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5339:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1542,"name":"address","nodeType":"ElementaryTypeName","src":"5339:7:14","typeDescriptions":{}}},"id":1545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5339:17:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1541,"name":"ERC3156InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"5316:22:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5316:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1547,"nodeType":"RevertStatement","src":"5309:48:14"}]}},{"assignments":[1551],"declarations":[{"constant":false,"id":1551,"mutability":"mutable","name":"flashFeeReceiver","nameLocation":"5385:16:14","nodeType":"VariableDeclaration","scope":1611,"src":"5377:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1550,"name":"address","nodeType":"ElementaryTypeName","src":"5377:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1554,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1552,"name":"_flashFeeReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1485,"src":"5404:17:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5404:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5377:46:14"},{"expression":{"arguments":[{"arguments":[{"id":1558,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1489,"src":"5457:8:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$291","typeString":"contract IERC3156FlashBorrower"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$291","typeString":"contract IERC3156FlashBorrower"}],"id":1557,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5449:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1556,"name":"address","nodeType":"ElementaryTypeName","src":"5449:7:14","typeDescriptions":{}}},"id":1559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5449:17:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1562,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5476:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20FlashMint_$1613","typeString":"contract ERC20FlashMint"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC20FlashMint_$1613","typeString":"contract ERC20FlashMint"}],"id":1561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5468:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1560,"name":"address","nodeType":"ElementaryTypeName","src":"5468:7:14","typeDescriptions":{}}},"id":1563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5468:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1564,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"5483:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1565,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"5491:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5483:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1555,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"5433:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5433:62:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1568,"nodeType":"ExpressionStatement","src":"5433:62:14"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1569,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"5509:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5516:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5509:8:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1572,"name":"flashFeeReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"5521:16:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5549:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5541:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1573,"name":"address","nodeType":"ElementaryTypeName","src":"5541:7:14","typeDescriptions":{}}},"id":1576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5541:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5521:30:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5509:42:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1607,"nodeType":"Block","src":"5621:121:14","statements":[{"expression":{"arguments":[{"arguments":[{"id":1593,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1489,"src":"5649:8:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$291","typeString":"contract IERC3156FlashBorrower"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$291","typeString":"contract IERC3156FlashBorrower"}],"id":1592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5641:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1591,"name":"address","nodeType":"ElementaryTypeName","src":"5641:7:14","typeDescriptions":{}}},"id":1594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5641:17:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1595,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"5660:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1590,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"5635:5:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5635:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1597,"nodeType":"ExpressionStatement","src":"5635:31:14"},{"expression":{"arguments":[{"arguments":[{"id":1601,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1489,"src":"5698:8:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$291","typeString":"contract IERC3156FlashBorrower"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$291","typeString":"contract IERC3156FlashBorrower"}],"id":1600,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5690:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1599,"name":"address","nodeType":"ElementaryTypeName","src":"5690:7:14","typeDescriptions":{}}},"id":1602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5690:17:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1603,"name":"flashFeeReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"5709:16:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1604,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"5727:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1598,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"5680:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5680:51:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1606,"nodeType":"ExpressionStatement","src":"5680:51:14"}]},"id":1608,"nodeType":"IfStatement","src":"5505:237:14","trueBody":{"id":1589,"nodeType":"Block","src":"5553:62:14","statements":[{"expression":{"arguments":[{"arguments":[{"id":1582,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1489,"src":"5581:8:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$291","typeString":"contract IERC3156FlashBorrower"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$291","typeString":"contract IERC3156FlashBorrower"}],"id":1581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5573:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1580,"name":"address","nodeType":"ElementaryTypeName","src":"5573:7:14","typeDescriptions":{}}},"id":1583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5573:17:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1584,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"5592:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1585,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"5600:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5592:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1579,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"5567:5:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5567:37:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1588,"nodeType":"ExpressionStatement","src":"5567:37:14"}]}},{"expression":{"hexValue":"74727565","id":1609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5758:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1499,"id":1610,"nodeType":"Return","src":"5751:11:14"}]},"documentation":{"id":1486,"nodeType":"StructuredDocumentation","src":"3758:760:14","text":" @dev Performs a flash loan. New tokens are minted and sent to the\n `receiver`, who is required to implement the {IERC3156FlashBorrower}\n interface. By the end of the flash loan, the receiver is expected to own\n value + fee tokens and have them approved back to the token contract itself so\n they can be burned.\n @param receiver The receiver of the flash loan. Should implement the\n {IERC3156FlashBorrower-onFlashLoan} interface.\n @param token The token to be flash loaned. Only `address(this)` is\n supported.\n @param value The amount of tokens to be loaned.\n @param data An arbitrary datafield that is passed to the receiver.\n @return `true` if the flash loan was successful."},"functionSelector":"5cffe9de","id":1612,"implemented":true,"kind":"function","modifiers":[],"name":"flashLoan","nameLocation":"4816:9:14","nodeType":"FunctionDefinition","parameters":{"id":1496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1489,"mutability":"mutable","name":"receiver","nameLocation":"4857:8:14","nodeType":"VariableDeclaration","scope":1612,"src":"4835:30:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$291","typeString":"contract IERC3156FlashBorrower"},"typeName":{"id":1488,"nodeType":"UserDefinedTypeName","pathNode":{"id":1487,"name":"IERC3156FlashBorrower","nameLocations":["4835:21:14"],"nodeType":"IdentifierPath","referencedDeclaration":291,"src":"4835:21:14"},"referencedDeclaration":291,"src":"4835:21:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$291","typeString":"contract IERC3156FlashBorrower"}},"visibility":"internal"},{"constant":false,"id":1491,"mutability":"mutable","name":"token","nameLocation":"4883:5:14","nodeType":"VariableDeclaration","scope":1612,"src":"4875:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1490,"name":"address","nodeType":"ElementaryTypeName","src":"4875:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1493,"mutability":"mutable","name":"value","nameLocation":"4906:5:14","nodeType":"VariableDeclaration","scope":1612,"src":"4898:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1492,"name":"uint256","nodeType":"ElementaryTypeName","src":"4898:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1495,"mutability":"mutable","name":"data","nameLocation":"4936:4:14","nodeType":"VariableDeclaration","scope":1612,"src":"4921:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1494,"name":"bytes","nodeType":"ElementaryTypeName","src":"4921:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4825:121:14"},"returnParameters":{"id":1499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1498,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1612,"src":"4971:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1497,"name":"bool","nodeType":"ElementaryTypeName","src":"4971:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4970:6:14"},"scope":1613,"src":"4807:962:14","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":1614,"src":"930:4841:14","usedErrors":[367,372,377,386,391,396,1392,1397,1402],"usedEvents":[1019,1028]}],"src":"125:5647:14"},"id":14},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol","exportedSymbols":{"ERC20":[1007],"ERC20Pausable":[1647],"Pausable":[2274]},"id":1648,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1615,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"124:24:15"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":1617,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1648,"sourceUnit":1008,"src":"150:35:15","symbolAliases":[{"foreign":{"id":1616,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"158:5:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Pausable.sol","file":"../../../utils/Pausable.sol","id":1619,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1648,"sourceUnit":2275,"src":"186:53:15","symbolAliases":[{"foreign":{"id":1618,"name":"Pausable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2274,"src":"194:8:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1621,"name":"ERC20","nameLocations":["965:5:15"],"nodeType":"IdentifierPath","referencedDeclaration":1007,"src":"965:5:15"},"id":1622,"nodeType":"InheritanceSpecifier","src":"965:5:15"},{"baseName":{"id":1623,"name":"Pausable","nameLocations":["972:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":2274,"src":"972:8:15"},"id":1624,"nodeType":"InheritanceSpecifier","src":"972:8:15"}],"canonicalName":"ERC20Pausable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1620,"nodeType":"StructuredDocumentation","src":"241:688:15","text":" @dev ERC-20 token with pausable token transfers, minting and burning.\n Useful for scenarios such as preventing trades until the end of an evaluation\n period, or having an emergency switch for freezing all token transfers in the\n event of a large bug.\n IMPORTANT: This contract does not include public pause and unpause functions. In\n addition to inheriting this contract, you must define both functions, invoking the\n {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n make the contract pause mechanism of the contract unreachable, and thus unusable."},"fullyImplemented":true,"id":1647,"linearizedBaseContracts":[1647,2274,1007,397,1827,1085,2046],"name":"ERC20Pausable","nameLocation":"948:13:15","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[814],"body":{"id":1645,"nodeType":"Block","src":"1211:47:15","statements":[{"expression":{"arguments":[{"id":1640,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"1235:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1641,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1629,"src":"1241:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1642,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"1245:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1637,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1221:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Pausable_$1647_$","typeString":"type(contract super ERC20Pausable)"}},"id":1639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1227:7:15","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":814,"src":"1221:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1221:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1644,"nodeType":"ExpressionStatement","src":"1221:30:15"}]},"documentation":{"id":1625,"nodeType":"StructuredDocumentation","src":"987:121:15","text":" @dev See {ERC20-_update}.\n Requirements:\n - the contract must not be paused."},"id":1646,"implemented":true,"kind":"function","modifiers":[{"id":1635,"kind":"modifierInvocation","modifierName":{"id":1634,"name":"whenNotPaused","nameLocations":["1197:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":2199,"src":"1197:13:15"},"nodeType":"ModifierInvocation","src":"1197:13:15"}],"name":"_update","nameLocation":"1122:7:15","nodeType":"FunctionDefinition","overrides":{"id":1633,"nodeType":"OverrideSpecifier","overrides":[],"src":"1188:8:15"},"parameters":{"id":1632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1627,"mutability":"mutable","name":"from","nameLocation":"1138:4:15","nodeType":"VariableDeclaration","scope":1646,"src":"1130:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1626,"name":"address","nodeType":"ElementaryTypeName","src":"1130:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1629,"mutability":"mutable","name":"to","nameLocation":"1152:2:15","nodeType":"VariableDeclaration","scope":1646,"src":"1144:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1628,"name":"address","nodeType":"ElementaryTypeName","src":"1144:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1631,"mutability":"mutable","name":"value","nameLocation":"1164:5:15","nodeType":"VariableDeclaration","scope":1646,"src":"1156:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1630,"name":"uint256","nodeType":"ElementaryTypeName","src":"1156:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1129:41:15"},"returnParameters":{"id":1636,"nodeType":"ParameterList","parameters":[],"src":"1211:0:15"},"scope":1647,"src":"1113:145:15","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1648,"src":"930:330:15","usedErrors":[367,372,377,386,391,396,2188,2191],"usedEvents":[1019,1028,2180,2185]}],"src":"124:1137:15"},"id":15},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","exportedSymbols":{"ECDSA":[4365],"EIP712":[4592],"ERC20":[1007],"ERC20Permit":[1801],"IERC20Permit":[1863],"Nonces":[2114]},"id":1802,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1649,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"122:24:16"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"./IERC20Permit.sol","id":1651,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1802,"sourceUnit":1864,"src":"148:48:16","symbolAliases":[{"foreign":{"id":1650,"name":"IERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1863,"src":"156:12:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":1653,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1802,"sourceUnit":1008,"src":"197:35:16","symbolAliases":[{"foreign":{"id":1652,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"205:5:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../../../utils/cryptography/ECDSA.sol","id":1655,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1802,"sourceUnit":4366,"src":"233:60:16","symbolAliases":[{"foreign":{"id":1654,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"241:5:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"../../../utils/cryptography/EIP712.sol","id":1657,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1802,"sourceUnit":4593,"src":"294:62:16","symbolAliases":[{"foreign":{"id":1656,"name":"EIP712","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4592,"src":"302:6:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","file":"../../../utils/Nonces.sol","id":1659,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1802,"sourceUnit":2115,"src":"357:49:16","symbolAliases":[{"foreign":{"id":1658,"name":"Nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2114,"src":"365:6:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1661,"name":"ERC20","nameLocations":["931:5:16"],"nodeType":"IdentifierPath","referencedDeclaration":1007,"src":"931:5:16"},"id":1662,"nodeType":"InheritanceSpecifier","src":"931:5:16"},{"baseName":{"id":1663,"name":"IERC20Permit","nameLocations":["938:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":1863,"src":"938:12:16"},"id":1664,"nodeType":"InheritanceSpecifier","src":"938:12:16"},{"baseName":{"id":1665,"name":"EIP712","nameLocations":["952:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":4592,"src":"952:6:16"},"id":1666,"nodeType":"InheritanceSpecifier","src":"952:6:16"},{"baseName":{"id":1667,"name":"Nonces","nameLocations":["960:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":2114,"src":"960:6:16"},"id":1668,"nodeType":"InheritanceSpecifier","src":"960:6:16"}],"canonicalName":"ERC20Permit","contractDependencies":[],"contractKind":"contract","documentation":{"id":1660,"nodeType":"StructuredDocumentation","src":"408:489:16","text":" @dev Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":true,"id":1801,"linearizedBaseContracts":[1801,2114,4592,355,1863,1007,397,1827,1085,2046],"name":"ERC20Permit","nameLocation":"916:11:16","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1673,"mutability":"constant","name":"PERMIT_TYPEHASH","nameLocation":"998:15:16","nodeType":"VariableDeclaration","scope":1801,"src":"973:146:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1669,"name":"bytes32","nodeType":"ElementaryTypeName","src":"973:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":1671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1034:84:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":1670,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1024:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1024:95:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"documentation":{"id":1674,"nodeType":"StructuredDocumentation","src":"1126:52:16","text":" @dev Permit deadline has expired."},"errorSelector":"62791302","id":1678,"name":"ERC2612ExpiredSignature","nameLocation":"1189:23:16","nodeType":"ErrorDefinition","parameters":{"id":1677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1676,"mutability":"mutable","name":"deadline","nameLocation":"1221:8:16","nodeType":"VariableDeclaration","scope":1678,"src":"1213:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1675,"name":"uint256","nodeType":"ElementaryTypeName","src":"1213:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1212:18:16"},"src":"1183:48:16"},{"documentation":{"id":1679,"nodeType":"StructuredDocumentation","src":"1237:45:16","text":" @dev Mismatched signature."},"errorSelector":"4b800e46","id":1685,"name":"ERC2612InvalidSigner","nameLocation":"1293:20:16","nodeType":"ErrorDefinition","parameters":{"id":1684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1681,"mutability":"mutable","name":"signer","nameLocation":"1322:6:16","nodeType":"VariableDeclaration","scope":1685,"src":"1314:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1680,"name":"address","nodeType":"ElementaryTypeName","src":"1314:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1683,"mutability":"mutable","name":"owner","nameLocation":"1338:5:16","nodeType":"VariableDeclaration","scope":1685,"src":"1330:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1682,"name":"address","nodeType":"ElementaryTypeName","src":"1330:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1313:31:16"},"src":"1287:58:16"},{"body":{"id":1695,"nodeType":"Block","src":"1627:2:16","statements":[]},"documentation":{"id":1686,"nodeType":"StructuredDocumentation","src":"1351:221:16","text":" @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC-20 token name."},"id":1696,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":1691,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1688,"src":"1616:4:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"31","id":1692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1622:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"id":1693,"kind":"baseConstructorSpecifier","modifierName":{"id":1690,"name":"EIP712","nameLocations":["1609:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":4592,"src":"1609:6:16"},"nodeType":"ModifierInvocation","src":"1609:17:16"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1688,"mutability":"mutable","name":"name","nameLocation":"1603:4:16","nodeType":"VariableDeclaration","scope":1696,"src":"1589:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1687,"name":"string","nodeType":"ElementaryTypeName","src":"1589:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1588:20:16"},"returnParameters":{"id":1694,"nodeType":"ParameterList","parameters":[],"src":"1627:0:16"},"scope":1801,"src":"1577:52:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1848],"body":{"id":1772,"nodeType":"Block","src":"1857:483:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1714,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1871:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1877:9:16","memberName":"timestamp","nodeType":"MemberAccess","src":"1871:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1716,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1705,"src":"1889:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1871:26:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1723,"nodeType":"IfStatement","src":"1867:97:16","trueBody":{"id":1722,"nodeType":"Block","src":"1899:65:16","statements":[{"errorCall":{"arguments":[{"id":1719,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1705,"src":"1944:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1718,"name":"ERC2612ExpiredSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"1920:23:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":1720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1920:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1721,"nodeType":"RevertStatement","src":"1913:40:16"}]}},{"assignments":[1725],"declarations":[{"constant":false,"id":1725,"mutability":"mutable","name":"structHash","nameLocation":"1982:10:16","nodeType":"VariableDeclaration","scope":1772,"src":"1974:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1724,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1974:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1739,"initialValue":{"arguments":[{"arguments":[{"id":1729,"name":"PERMIT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"2016:15:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1730,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"2033:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1731,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1701,"src":"2040:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1732,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1703,"src":"2049:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1734,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"2066:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1733,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2088,"src":"2056:9:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2056:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1736,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1705,"src":"2074:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1727,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2005:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2009:6:16","memberName":"encode","nodeType":"MemberAccess","src":"2005:10:16","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2005:78:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1726,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1995:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1995:89:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1974:110:16"},{"assignments":[1741],"declarations":[{"constant":false,"id":1741,"mutability":"mutable","name":"hash","nameLocation":"2103:4:16","nodeType":"VariableDeclaration","scope":1772,"src":"2095:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1740,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2095:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1745,"initialValue":{"arguments":[{"id":1743,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1725,"src":"2127:10:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1742,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4525,"src":"2110:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":1744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2110:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2095:43:16"},{"assignments":[1747],"declarations":[{"constant":false,"id":1747,"mutability":"mutable","name":"signer","nameLocation":"2157:6:16","nodeType":"VariableDeclaration","scope":1772,"src":"2149:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1746,"name":"address","nodeType":"ElementaryTypeName","src":"2149:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1755,"initialValue":{"arguments":[{"id":1750,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1741,"src":"2180:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1751,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"2186:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1752,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"2189:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1753,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"2192:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1748,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"2166:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$4365_$","typeString":"type(library ECDSA)"}},"id":1749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2172:7:16","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":4315,"src":"2166:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2166:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2149:45:16"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1756,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1747,"src":"2208:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1757,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"2218:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2208:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1765,"nodeType":"IfStatement","src":"2204:88:16","trueBody":{"id":1764,"nodeType":"Block","src":"2225:67:16","statements":[{"errorCall":{"arguments":[{"id":1760,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1747,"src":"2267:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1761,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"2275:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1759,"name":"ERC2612InvalidSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1685,"src":"2246:20:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$_t_error_$","typeString":"function (address,address) pure returns (error)"}},"id":1762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2246:35:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1763,"nodeType":"RevertStatement","src":"2239:42:16"}]}},{"expression":{"arguments":[{"id":1767,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"2311:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1768,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1701,"src":"2318:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1769,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1703,"src":"2327:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1766,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[898,958],"referencedDeclaration":898,"src":"2302:8:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2302:31:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1771,"nodeType":"ExpressionStatement","src":"2302:31:16"}]},"documentation":{"id":1697,"nodeType":"StructuredDocumentation","src":"1635:28:16","text":"@inheritdoc IERC20Permit"},"functionSelector":"d505accf","id":1773,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1677:6:16","nodeType":"FunctionDefinition","parameters":{"id":1712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1699,"mutability":"mutable","name":"owner","nameLocation":"1701:5:16","nodeType":"VariableDeclaration","scope":1773,"src":"1693:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1698,"name":"address","nodeType":"ElementaryTypeName","src":"1693:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1701,"mutability":"mutable","name":"spender","nameLocation":"1724:7:16","nodeType":"VariableDeclaration","scope":1773,"src":"1716:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1700,"name":"address","nodeType":"ElementaryTypeName","src":"1716:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1703,"mutability":"mutable","name":"value","nameLocation":"1749:5:16","nodeType":"VariableDeclaration","scope":1773,"src":"1741:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1702,"name":"uint256","nodeType":"ElementaryTypeName","src":"1741:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1705,"mutability":"mutable","name":"deadline","nameLocation":"1772:8:16","nodeType":"VariableDeclaration","scope":1773,"src":"1764:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1704,"name":"uint256","nodeType":"ElementaryTypeName","src":"1764:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1707,"mutability":"mutable","name":"v","nameLocation":"1796:1:16","nodeType":"VariableDeclaration","scope":1773,"src":"1790:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1706,"name":"uint8","nodeType":"ElementaryTypeName","src":"1790:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1709,"mutability":"mutable","name":"r","nameLocation":"1815:1:16","nodeType":"VariableDeclaration","scope":1773,"src":"1807:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1708,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1807:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1711,"mutability":"mutable","name":"s","nameLocation":"1834:1:16","nodeType":"VariableDeclaration","scope":1773,"src":"1826:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1710,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1826:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1683:158:16"},"returnParameters":{"id":1713,"nodeType":"ParameterList","parameters":[],"src":"1857:0:16"},"scope":1801,"src":"1668:672:16","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1856,2073],"body":{"id":1789,"nodeType":"Block","src":"2479:43:16","statements":[{"expression":{"arguments":[{"id":1786,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"2509:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1784,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2496:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Permit_$1801_$","typeString":"type(contract super ERC20Permit)"}},"id":1785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2502:6:16","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":2073,"src":"2496:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2496:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1783,"id":1788,"nodeType":"Return","src":"2489:26:16"}]},"documentation":{"id":1774,"nodeType":"StructuredDocumentation","src":"2346:28:16","text":"@inheritdoc IERC20Permit"},"functionSelector":"7ecebe00","id":1790,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"2388:6:16","nodeType":"FunctionDefinition","overrides":{"id":1780,"nodeType":"OverrideSpecifier","overrides":[{"id":1778,"name":"IERC20Permit","nameLocations":["2439:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":1863,"src":"2439:12:16"},{"id":1779,"name":"Nonces","nameLocations":["2453:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":2114,"src":"2453:6:16"}],"src":"2430:30:16"},"parameters":{"id":1777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1776,"mutability":"mutable","name":"owner","nameLocation":"2403:5:16","nodeType":"VariableDeclaration","scope":1790,"src":"2395:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1775,"name":"address","nodeType":"ElementaryTypeName","src":"2395:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2394:15:16"},"returnParameters":{"id":1783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1782,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1790,"src":"2470:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1781,"name":"uint256","nodeType":"ElementaryTypeName","src":"2470:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2469:9:16"},"scope":1801,"src":"2379:143:16","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1862],"body":{"id":1799,"nodeType":"Block","src":"2682:44:16","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1796,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4488,"src":"2699:18:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":1797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2699:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1795,"id":1798,"nodeType":"Return","src":"2692:27:16"}]},"documentation":{"id":1791,"nodeType":"StructuredDocumentation","src":"2528:28:16","text":"@inheritdoc IERC20Permit"},"functionSelector":"3644e515","id":1800,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2623:16:16","nodeType":"FunctionDefinition","parameters":{"id":1792,"nodeType":"ParameterList","parameters":[],"src":"2639:2:16"},"returnParameters":{"id":1795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1794,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1800,"src":"2673:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1793,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2673:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2672:9:16"},"scope":1801,"src":"2614:112:16","stateMutability":"view","virtual":true,"visibility":"external"}],"scope":1802,"src":"898:1830:16","usedErrors":[367,372,377,386,391,396,1678,1685,2056,2288,2290,4028,4033,4038],"usedEvents":[335,1019,1028]}],"src":"122:2607:16"},"id":16},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[1085],"IERC20Metadata":[1827]},"id":1828,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1803,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"125:24:17"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1805,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1828,"sourceUnit":1086,"src":"151:37:17","symbolAliases":[{"foreign":{"id":1804,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"159:6:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1807,"name":"IERC20","nameLocations":["306:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":1085,"src":"306:6:17"},"id":1808,"nodeType":"InheritanceSpecifier","src":"306:6:17"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1806,"nodeType":"StructuredDocumentation","src":"190:87:17","text":" @dev Interface for the optional metadata functions from the ERC-20 standard."},"fullyImplemented":false,"id":1827,"linearizedBaseContracts":[1827,1085],"name":"IERC20Metadata","nameLocation":"288:14:17","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1809,"nodeType":"StructuredDocumentation","src":"319:54:17","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1814,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"387:4:17","nodeType":"FunctionDefinition","parameters":{"id":1810,"nodeType":"ParameterList","parameters":[],"src":"391:2:17"},"returnParameters":{"id":1813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1812,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1814,"src":"417:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1811,"name":"string","nodeType":"ElementaryTypeName","src":"417:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"416:15:17"},"scope":1827,"src":"378:54:17","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1815,"nodeType":"StructuredDocumentation","src":"438:56:17","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1820,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"508:6:17","nodeType":"FunctionDefinition","parameters":{"id":1816,"nodeType":"ParameterList","parameters":[],"src":"514:2:17"},"returnParameters":{"id":1819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1818,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1820,"src":"540:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1817,"name":"string","nodeType":"ElementaryTypeName","src":"540:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"539:15:17"},"scope":1827,"src":"499:56:17","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1821,"nodeType":"StructuredDocumentation","src":"561:65:17","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1826,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"640:8:17","nodeType":"FunctionDefinition","parameters":{"id":1822,"nodeType":"ParameterList","parameters":[],"src":"648:2:17"},"returnParameters":{"id":1825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1824,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1826,"src":"674:5:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1823,"name":"uint8","nodeType":"ElementaryTypeName","src":"674:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"673:7:17"},"scope":1827,"src":"631:50:17","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1828,"src":"278:405:17","usedErrors":[],"usedEvents":[1019,1028]}],"src":"125:559:17"},"id":17},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[1863]},"id":1864,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1829,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"123:25:18"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":1830,"nodeType":"StructuredDocumentation","src":"150:1965:18","text":" @dev Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."},"fullyImplemented":false,"id":1863,"linearizedBaseContracts":[1863],"name":"IERC20Permit","nameLocation":"2126:12:18","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1831,"nodeType":"StructuredDocumentation","src":"2145:850:18","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."},"functionSelector":"d505accf","id":1848,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3009:6:18","nodeType":"FunctionDefinition","parameters":{"id":1846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1833,"mutability":"mutable","name":"owner","nameLocation":"3033:5:18","nodeType":"VariableDeclaration","scope":1848,"src":"3025:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1832,"name":"address","nodeType":"ElementaryTypeName","src":"3025:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1835,"mutability":"mutable","name":"spender","nameLocation":"3056:7:18","nodeType":"VariableDeclaration","scope":1848,"src":"3048:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1834,"name":"address","nodeType":"ElementaryTypeName","src":"3048:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1837,"mutability":"mutable","name":"value","nameLocation":"3081:5:18","nodeType":"VariableDeclaration","scope":1848,"src":"3073:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1836,"name":"uint256","nodeType":"ElementaryTypeName","src":"3073:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1839,"mutability":"mutable","name":"deadline","nameLocation":"3104:8:18","nodeType":"VariableDeclaration","scope":1848,"src":"3096:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1838,"name":"uint256","nodeType":"ElementaryTypeName","src":"3096:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1841,"mutability":"mutable","name":"v","nameLocation":"3128:1:18","nodeType":"VariableDeclaration","scope":1848,"src":"3122:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1840,"name":"uint8","nodeType":"ElementaryTypeName","src":"3122:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1843,"mutability":"mutable","name":"r","nameLocation":"3147:1:18","nodeType":"VariableDeclaration","scope":1848,"src":"3139:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1842,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3139:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1845,"mutability":"mutable","name":"s","nameLocation":"3166:1:18","nodeType":"VariableDeclaration","scope":1848,"src":"3158:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1844,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3158:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3015:158:18"},"returnParameters":{"id":1847,"nodeType":"ParameterList","parameters":[],"src":"3182:0:18"},"scope":1863,"src":"3000:183:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1849,"nodeType":"StructuredDocumentation","src":"3189:294:18","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":1856,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3497:6:18","nodeType":"FunctionDefinition","parameters":{"id":1852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1851,"mutability":"mutable","name":"owner","nameLocation":"3512:5:18","nodeType":"VariableDeclaration","scope":1856,"src":"3504:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1850,"name":"address","nodeType":"ElementaryTypeName","src":"3504:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3503:15:18"},"returnParameters":{"id":1855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1854,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1856,"src":"3542:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1853,"name":"uint256","nodeType":"ElementaryTypeName","src":"3542:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3541:9:18"},"scope":1863,"src":"3488:63:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1857,"nodeType":"StructuredDocumentation","src":"3557:128:18","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":1862,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3752:16:18","nodeType":"FunctionDefinition","parameters":{"id":1858,"nodeType":"ParameterList","parameters":[],"src":"3768:2:18"},"returnParameters":{"id":1861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1860,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1862,"src":"3794:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1859,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3794:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3793:9:18"},"scope":1863,"src":"3743:60:18","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1864,"src":"2116:1689:18","usedErrors":[],"usedEvents":[]}],"src":"123:3683:18"},"id":18},"@openzeppelin/contracts/token/ERC20/utils/ERC1363Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/ERC1363Utils.sol","exportedSymbols":{"ERC1363Utils":[2016],"IERC1363Receiver":[247],"IERC1363Spender":[263]},"id":2017,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1865,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:19"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363Receiver.sol","file":"../../../interfaces/IERC1363Receiver.sol","id":1867,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2017,"sourceUnit":248,"src":"144:74:19","symbolAliases":[{"foreign":{"id":1866,"name":"IERC1363Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"152:16:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363Spender.sol","file":"../../../interfaces/IERC1363Spender.sol","id":1869,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2017,"sourceUnit":264,"src":"219:72:19","symbolAliases":[{"foreign":{"id":1868,"name":"IERC1363Spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"227:15:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC1363Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":1870,"nodeType":"StructuredDocumentation","src":"293:133:19","text":" @dev Library that provides common ERC-1363 utility functions.\n See https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]."},"fullyImplemented":true,"id":2016,"linearizedBaseContracts":[2016],"name":"ERC1363Utils","nameLocation":"435:12:19","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1871,"nodeType":"StructuredDocumentation","src":"454:159:19","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"8a96cd9c","id":1875,"name":"ERC1363InvalidReceiver","nameLocation":"624:22:19","nodeType":"ErrorDefinition","parameters":{"id":1874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1873,"mutability":"mutable","name":"receiver","nameLocation":"655:8:19","nodeType":"VariableDeclaration","scope":1875,"src":"647:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1872,"name":"address","nodeType":"ElementaryTypeName","src":"647:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"646:18:19"},"src":"618:47:19"},{"documentation":{"id":1876,"nodeType":"StructuredDocumentation","src":"671:186:19","text":" @dev Indicates a failure with the token `spender`. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"deb6d3ed","id":1880,"name":"ERC1363InvalidSpender","nameLocation":"868:21:19","nodeType":"ErrorDefinition","parameters":{"id":1879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1878,"mutability":"mutable","name":"spender","nameLocation":"898:7:19","nodeType":"VariableDeclaration","scope":1880,"src":"890:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1877,"name":"address","nodeType":"ElementaryTypeName","src":"890:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"889:17:19"},"src":"862:45:19"},{"body":{"id":1948,"nodeType":"Block","src":"1459:642:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1894,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1887,"src":"1473:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1476:4:19","memberName":"code","nodeType":"MemberAccess","src":"1473:7:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1481:6:19","memberName":"length","nodeType":"MemberAccess","src":"1473:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1491:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1473:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1904,"nodeType":"IfStatement","src":"1469:83:19","trueBody":{"id":1903,"nodeType":"Block","src":"1494:58:19","statements":[{"errorCall":{"arguments":[{"id":1900,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1887,"src":"1538:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1899,"name":"ERC1363InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"1515:22:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1515:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1902,"nodeType":"RevertStatement","src":"1508:33:19"}]}},{"clauses":[{"block":{"id":1928,"nodeType":"Block","src":"1659:150:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1917,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"1677:6:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1918,"name":"IERC1363Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"1687:16:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1363Receiver_$247_$","typeString":"type(contract IERC1363Receiver)"}},"id":1919,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1704:18:19","memberName":"onTransferReceived","nodeType":"MemberAccess","referencedDeclaration":246,"src":"1687:35:19","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1363Receiver.onTransferReceived(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":1920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1723:8:19","memberName":"selector","nodeType":"MemberAccess","src":"1687:44:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1677:54:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1927,"nodeType":"IfStatement","src":"1673:126:19","trueBody":{"id":1926,"nodeType":"Block","src":"1733:66:19","statements":[{"errorCall":{"arguments":[{"id":1923,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1887,"src":"1781:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1922,"name":"ERC1363InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"1758:22:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1758:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1925,"nodeType":"RevertStatement","src":"1751:33:19"}]}}]},"errorName":"","id":1929,"nodeType":"TryCatchClause","parameters":{"id":1916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1915,"mutability":"mutable","name":"retval","nameLocation":"1651:6:19","nodeType":"VariableDeclaration","scope":1929,"src":"1644:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1914,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1644:6:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1643:15:19"},"src":"1635:174:19"},{"block":{"id":1945,"nodeType":"Block","src":"1838:257:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1933,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"1856:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1863:6:19","memberName":"length","nodeType":"MemberAccess","src":"1856:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1873:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1856:18:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1943,"nodeType":"Block","src":"1948:137:19","statements":[{"AST":{"nativeSrc":"1991:80:19","nodeType":"YulBlock","src":"1991:80:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"reason","nativeSrc":"2024:6:19","nodeType":"YulIdentifier","src":"2024:6:19"},{"kind":"number","nativeSrc":"2032:4:19","nodeType":"YulLiteral","src":"2032:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2020:3:19","nodeType":"YulIdentifier","src":"2020:3:19"},"nativeSrc":"2020:17:19","nodeType":"YulFunctionCall","src":"2020:17:19"},{"arguments":[{"name":"reason","nativeSrc":"2045:6:19","nodeType":"YulIdentifier","src":"2045:6:19"}],"functionName":{"name":"mload","nativeSrc":"2039:5:19","nodeType":"YulIdentifier","src":"2039:5:19"},"nativeSrc":"2039:13:19","nodeType":"YulFunctionCall","src":"2039:13:19"}],"functionName":{"name":"revert","nativeSrc":"2013:6:19","nodeType":"YulIdentifier","src":"2013:6:19"},"nativeSrc":"2013:40:19","nodeType":"YulFunctionCall","src":"2013:40:19"},"nativeSrc":"2013:40:19","nodeType":"YulExpressionStatement","src":"2013:40:19"}]},"evmVersion":"paris","externalReferences":[{"declaration":1931,"isOffset":false,"isSlot":false,"src":"2024:6:19","valueSize":1},{"declaration":1931,"isOffset":false,"isSlot":false,"src":"2045:6:19","valueSize":1}],"flags":["memory-safe"],"id":1942,"nodeType":"InlineAssembly","src":"1966:105:19"}]},"id":1944,"nodeType":"IfStatement","src":"1852:233:19","trueBody":{"id":1941,"nodeType":"Block","src":"1876:66:19","statements":[{"errorCall":{"arguments":[{"id":1938,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1887,"src":"1924:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1937,"name":"ERC1363InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"1901:22:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1940,"nodeType":"RevertStatement","src":"1894:33:19"}]}}]},"errorName":"","id":1946,"nodeType":"TryCatchClause","parameters":{"id":1932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1931,"mutability":"mutable","name":"reason","nameLocation":"1830:6:19","nodeType":"VariableDeclaration","scope":1946,"src":"1817:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1930,"name":"bytes","nodeType":"ElementaryTypeName","src":"1817:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1816:21:19"},"src":"1810:285:19"}],"externalCall":{"arguments":[{"id":1909,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1883,"src":"1606:8:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1910,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1885,"src":"1616:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1911,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1889,"src":"1622:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1912,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1891,"src":"1629:4:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1906,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1887,"src":"1583:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1905,"name":"IERC1363Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"1566:16:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1363Receiver_$247_$","typeString":"type(contract IERC1363Receiver)"}},"id":1907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1566:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363Receiver_$247","typeString":"contract IERC1363Receiver"}},"id":1908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1587:18:19","memberName":"onTransferReceived","nodeType":"MemberAccess","referencedDeclaration":246,"src":"1566:39:19","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":1913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1566:68:19","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1947,"nodeType":"TryStatement","src":"1562:533:19"}]},"documentation":{"id":1881,"nodeType":"StructuredDocumentation","src":"913:368:19","text":" @dev Performs a call to {IERC1363Receiver-onTransferReceived} on a target address.\n Requirements:\n - The target has code (i.e. is a contract).\n - The target `to` must implement the {IERC1363Receiver} interface.\n - The target must return the {IERC1363Receiver-onTransferReceived} selector to accept the transfer."},"id":1949,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC1363TransferReceived","nameLocation":"1295:30:19","nodeType":"FunctionDefinition","parameters":{"id":1892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1883,"mutability":"mutable","name":"operator","nameLocation":"1343:8:19","nodeType":"VariableDeclaration","scope":1949,"src":"1335:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1882,"name":"address","nodeType":"ElementaryTypeName","src":"1335:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1885,"mutability":"mutable","name":"from","nameLocation":"1369:4:19","nodeType":"VariableDeclaration","scope":1949,"src":"1361:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1884,"name":"address","nodeType":"ElementaryTypeName","src":"1361:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1887,"mutability":"mutable","name":"to","nameLocation":"1391:2:19","nodeType":"VariableDeclaration","scope":1949,"src":"1383:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1886,"name":"address","nodeType":"ElementaryTypeName","src":"1383:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1889,"mutability":"mutable","name":"value","nameLocation":"1411:5:19","nodeType":"VariableDeclaration","scope":1949,"src":"1403:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1888,"name":"uint256","nodeType":"ElementaryTypeName","src":"1403:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1891,"mutability":"mutable","name":"data","nameLocation":"1439:4:19","nodeType":"VariableDeclaration","scope":1949,"src":"1426:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1890,"name":"bytes","nodeType":"ElementaryTypeName","src":"1426:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1325:124:19"},"returnParameters":{"id":1893,"nodeType":"ParameterList","parameters":[],"src":"1459:0:19"},"scope":2016,"src":"1286:815:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2014,"nodeType":"Block","src":"2638:656:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1961,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1954,"src":"2652:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2660:4:19","memberName":"code","nodeType":"MemberAccess","src":"2652:12:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2665:6:19","memberName":"length","nodeType":"MemberAccess","src":"2652:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2675:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2652:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1971,"nodeType":"IfStatement","src":"2648:92:19","trueBody":{"id":1970,"nodeType":"Block","src":"2678:62:19","statements":[{"errorCall":{"arguments":[{"id":1967,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1954,"src":"2721:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1966,"name":"ERC1363InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1880,"src":"2699:21:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2699:30:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1969,"nodeType":"RevertStatement","src":"2692:37:19"}]}},{"clauses":[{"block":{"id":1994,"nodeType":"Block","src":"2845:153:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1983,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1981,"src":"2863:6:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1984,"name":"IERC1363Spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"2873:15:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1363Spender_$263_$","typeString":"type(contract IERC1363Spender)"}},"id":1985,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2889:18:19","memberName":"onApprovalReceived","nodeType":"MemberAccess","referencedDeclaration":262,"src":"2873:34:19","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1363Spender.onApprovalReceived(address,uint256,bytes calldata) returns (bytes4)"}},"id":1986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2908:8:19","memberName":"selector","nodeType":"MemberAccess","src":"2873:43:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2863:53:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1993,"nodeType":"IfStatement","src":"2859:129:19","trueBody":{"id":1992,"nodeType":"Block","src":"2918:70:19","statements":[{"errorCall":{"arguments":[{"id":1989,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1954,"src":"2965:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1988,"name":"ERC1363InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1880,"src":"2943:21:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2943:30:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1991,"nodeType":"RevertStatement","src":"2936:37:19"}]}}]},"errorName":"","id":1995,"nodeType":"TryCatchClause","parameters":{"id":1982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1981,"mutability":"mutable","name":"retval","nameLocation":"2837:6:19","nodeType":"VariableDeclaration","scope":1995,"src":"2830:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1980,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2830:6:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2829:15:19"},"src":"2821:177:19"},{"block":{"id":2011,"nodeType":"Block","src":"3027:261:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1999,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1997,"src":"3045:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3052:6:19","memberName":"length","nodeType":"MemberAccess","src":"3045:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3062:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3045:18:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2009,"nodeType":"Block","src":"3141:137:19","statements":[{"AST":{"nativeSrc":"3184:80:19","nodeType":"YulBlock","src":"3184:80:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"reason","nativeSrc":"3217:6:19","nodeType":"YulIdentifier","src":"3217:6:19"},{"kind":"number","nativeSrc":"3225:4:19","nodeType":"YulLiteral","src":"3225:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3213:3:19","nodeType":"YulIdentifier","src":"3213:3:19"},"nativeSrc":"3213:17:19","nodeType":"YulFunctionCall","src":"3213:17:19"},{"arguments":[{"name":"reason","nativeSrc":"3238:6:19","nodeType":"YulIdentifier","src":"3238:6:19"}],"functionName":{"name":"mload","nativeSrc":"3232:5:19","nodeType":"YulIdentifier","src":"3232:5:19"},"nativeSrc":"3232:13:19","nodeType":"YulFunctionCall","src":"3232:13:19"}],"functionName":{"name":"revert","nativeSrc":"3206:6:19","nodeType":"YulIdentifier","src":"3206:6:19"},"nativeSrc":"3206:40:19","nodeType":"YulFunctionCall","src":"3206:40:19"},"nativeSrc":"3206:40:19","nodeType":"YulExpressionStatement","src":"3206:40:19"}]},"evmVersion":"paris","externalReferences":[{"declaration":1997,"isOffset":false,"isSlot":false,"src":"3217:6:19","valueSize":1},{"declaration":1997,"isOffset":false,"isSlot":false,"src":"3238:6:19","valueSize":1}],"flags":["memory-safe"],"id":2008,"nodeType":"InlineAssembly","src":"3159:105:19"}]},"id":2010,"nodeType":"IfStatement","src":"3041:237:19","trueBody":{"id":2007,"nodeType":"Block","src":"3065:70:19","statements":[{"errorCall":{"arguments":[{"id":2004,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1954,"src":"3112:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2003,"name":"ERC1363InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1880,"src":"3090:21:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3090:30:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2006,"nodeType":"RevertStatement","src":"3083:37:19"}]}}]},"errorName":"","id":2012,"nodeType":"TryCatchClause","parameters":{"id":1998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1997,"mutability":"mutable","name":"reason","nameLocation":"3019:6:19","nodeType":"VariableDeclaration","scope":2012,"src":"3006:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1996,"name":"bytes","nodeType":"ElementaryTypeName","src":"3006:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3005:21:19"},"src":"2999:289:19"}],"externalCall":{"arguments":[{"id":1976,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"2798:8:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1977,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"2808:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1978,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"2815:4:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1973,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1954,"src":"2770:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1972,"name":"IERC1363Spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"2754:15:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1363Spender_$263_$","typeString":"type(contract IERC1363Spender)"}},"id":1974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2754:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363Spender_$263","typeString":"contract IERC1363Spender"}},"id":1975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2779:18:19","memberName":"onApprovalReceived","nodeType":"MemberAccess","referencedDeclaration":262,"src":"2754:43:19","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,uint256,bytes memory) external returns (bytes4)"}},"id":1979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2754:66:19","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":2013,"nodeType":"TryStatement","src":"2750:538:19"}]},"documentation":{"id":1950,"nodeType":"StructuredDocumentation","src":"2107:370:19","text":" @dev Performs a call to {IERC1363Spender-onApprovalReceived} on a target address.\n Requirements:\n - The target has code (i.e. is a contract).\n - The target `spender` must implement the {IERC1363Spender} interface.\n - The target must return the {IERC1363Spender-onApprovalReceived} selector to accept the approval."},"id":2015,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC1363ApprovalReceived","nameLocation":"2491:30:19","nodeType":"FunctionDefinition","parameters":{"id":1959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1952,"mutability":"mutable","name":"operator","nameLocation":"2539:8:19","nodeType":"VariableDeclaration","scope":2015,"src":"2531:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1951,"name":"address","nodeType":"ElementaryTypeName","src":"2531:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1954,"mutability":"mutable","name":"spender","nameLocation":"2565:7:19","nodeType":"VariableDeclaration","scope":2015,"src":"2557:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1953,"name":"address","nodeType":"ElementaryTypeName","src":"2557:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1956,"mutability":"mutable","name":"value","nameLocation":"2590:5:19","nodeType":"VariableDeclaration","scope":2015,"src":"2582:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1955,"name":"uint256","nodeType":"ElementaryTypeName","src":"2582:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1958,"mutability":"mutable","name":"data","nameLocation":"2618:4:19","nodeType":"VariableDeclaration","scope":2015,"src":"2605:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1957,"name":"bytes","nodeType":"ElementaryTypeName","src":"2605:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2521:107:19"},"returnParameters":{"id":1960,"nodeType":"ParameterList","parameters":[],"src":"2638:0:19"},"scope":2016,"src":"2482:812:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":2017,"src":"427:2869:19","usedErrors":[1875,1880],"usedEvents":[]}],"src":"118:3179:19"},"id":19},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2046]},"id":2047,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2018,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:20"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2019,"nodeType":"StructuredDocumentation","src":"127:496:20","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2046,"linearizedBaseContracts":[2046],"name":"Context","nameLocation":"642:7:20","nodeType":"ContractDefinition","nodes":[{"body":{"id":2027,"nodeType":"Block","src":"718:34:20","statements":[{"expression":{"expression":{"id":2024,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:20","memberName":"sender","nodeType":"MemberAccess","src":"735:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2023,"id":2026,"nodeType":"Return","src":"728:17:20"}]},"id":2028,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:20","nodeType":"FunctionDefinition","parameters":{"id":2020,"nodeType":"ParameterList","parameters":[],"src":"675:2:20"},"returnParameters":{"id":2023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2022,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2028,"src":"709:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2021,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:20"},"scope":2046,"src":"656:96:20","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2036,"nodeType":"Block","src":"825:32:20","statements":[{"expression":{"expression":{"id":2033,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:20","memberName":"data","nodeType":"MemberAccess","src":"842:8:20","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2032,"id":2035,"nodeType":"Return","src":"835:15:20"}]},"id":2037,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:20","nodeType":"FunctionDefinition","parameters":{"id":2029,"nodeType":"ParameterList","parameters":[],"src":"775:2:20"},"returnParameters":{"id":2032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2031,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2037,"src":"809:14:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2030,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:20"},"scope":2046,"src":"758:99:20","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2044,"nodeType":"Block","src":"935:25:20","statements":[{"expression":{"hexValue":"30","id":2042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2041,"id":2043,"nodeType":"Return","src":"945:8:20"}]},"id":2045,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:20","nodeType":"FunctionDefinition","parameters":{"id":2038,"nodeType":"ParameterList","parameters":[],"src":"892:2:20"},"returnParameters":{"id":2041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2040,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2045,"src":"926:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2039,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:20"},"scope":2046,"src":"863:97:20","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2047,"src":"624:338:20","usedErrors":[],"usedEvents":[]}],"src":"101:862:20"},"id":20},"@openzeppelin/contracts/utils/Nonces.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","exportedSymbols":{"Nonces":[2114]},"id":2115,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2048,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:21"},{"abstract":true,"baseContracts":[],"canonicalName":"Nonces","contractDependencies":[],"contractKind":"contract","documentation":{"id":2049,"nodeType":"StructuredDocumentation","src":"125:83:21","text":" @dev Provides tracking nonces for addresses. Nonces will only increment."},"fullyImplemented":true,"id":2114,"linearizedBaseContracts":[2114],"name":"Nonces","nameLocation":"227:6:21","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2050,"nodeType":"StructuredDocumentation","src":"240:90:21","text":" @dev The nonce used for an `account` is not the expected current nonce."},"errorSelector":"752d88c0","id":2056,"name":"InvalidAccountNonce","nameLocation":"341:19:21","nodeType":"ErrorDefinition","parameters":{"id":2055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2052,"mutability":"mutable","name":"account","nameLocation":"369:7:21","nodeType":"VariableDeclaration","scope":2056,"src":"361:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2051,"name":"address","nodeType":"ElementaryTypeName","src":"361:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2054,"mutability":"mutable","name":"currentNonce","nameLocation":"386:12:21","nodeType":"VariableDeclaration","scope":2056,"src":"378:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2053,"name":"uint256","nodeType":"ElementaryTypeName","src":"378:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"360:39:21"},"src":"335:65:21"},{"constant":false,"id":2060,"mutability":"mutable","name":"_nonces","nameLocation":"450:7:21","nodeType":"VariableDeclaration","scope":2114,"src":"406:51:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":2059,"keyName":"account","keyNameLocation":"422:7:21","keyType":{"id":2057,"name":"address","nodeType":"ElementaryTypeName","src":"414:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"406:35:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2058,"name":"uint256","nodeType":"ElementaryTypeName","src":"433:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"body":{"id":2072,"nodeType":"Block","src":"607:38:21","statements":[{"expression":{"baseExpression":{"id":2068,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2060,"src":"624:7:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2070,"indexExpression":{"id":2069,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"632:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"624:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2067,"id":2071,"nodeType":"Return","src":"617:21:21"}]},"documentation":{"id":2061,"nodeType":"StructuredDocumentation","src":"464:69:21","text":" @dev Returns the next unused nonce for an address."},"functionSelector":"7ecebe00","id":2073,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"547:6:21","nodeType":"FunctionDefinition","parameters":{"id":2064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2063,"mutability":"mutable","name":"owner","nameLocation":"562:5:21","nodeType":"VariableDeclaration","scope":2073,"src":"554:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2062,"name":"address","nodeType":"ElementaryTypeName","src":"554:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"553:15:21"},"returnParameters":{"id":2067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2066,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2073,"src":"598:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2065,"name":"uint256","nodeType":"ElementaryTypeName","src":"598:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"597:9:21"},"scope":2114,"src":"538:107:21","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2087,"nodeType":"Block","src":"828:326:21","statements":[{"id":2086,"nodeType":"UncheckedBlock","src":"1031:117:21","statements":[{"expression":{"id":2084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1121:16:21","subExpression":{"baseExpression":{"id":2081,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2060,"src":"1121:7:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2083,"indexExpression":{"id":2082,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"1129:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1121:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2080,"id":2085,"nodeType":"Return","src":"1114:23:21"}]}]},"documentation":{"id":2074,"nodeType":"StructuredDocumentation","src":"651:103:21","text":" @dev Consumes a nonce.\n Returns the current value and increments nonce."},"id":2088,"implemented":true,"kind":"function","modifiers":[],"name":"_useNonce","nameLocation":"768:9:21","nodeType":"FunctionDefinition","parameters":{"id":2077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2076,"mutability":"mutable","name":"owner","nameLocation":"786:5:21","nodeType":"VariableDeclaration","scope":2088,"src":"778:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2075,"name":"address","nodeType":"ElementaryTypeName","src":"778:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"777:15:21"},"returnParameters":{"id":2080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2079,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2088,"src":"819:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2078,"name":"uint256","nodeType":"ElementaryTypeName","src":"819:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"818:9:21"},"scope":2114,"src":"759:395:21","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2112,"nodeType":"Block","src":"1338:149:21","statements":[{"assignments":[2097],"declarations":[{"constant":false,"id":2097,"mutability":"mutable","name":"current","nameLocation":"1356:7:21","nodeType":"VariableDeclaration","scope":2112,"src":"1348:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2096,"name":"uint256","nodeType":"ElementaryTypeName","src":"1348:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2101,"initialValue":{"arguments":[{"id":2099,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2091,"src":"1376:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2098,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2088,"src":"1366:9:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":2100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1366:16:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1348:34:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2102,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2093,"src":"1396:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2103,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"1405:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1396:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2111,"nodeType":"IfStatement","src":"1392:89:21","trueBody":{"id":2110,"nodeType":"Block","src":"1414:67:21","statements":[{"errorCall":{"arguments":[{"id":2106,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2091,"src":"1455:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2107,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"1462:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2105,"name":"InvalidAccountNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"1435:19:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256) pure returns (error)"}},"id":2108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1435:35:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2109,"nodeType":"RevertStatement","src":"1428:42:21"}]}}]},"documentation":{"id":2089,"nodeType":"StructuredDocumentation","src":"1160:100:21","text":" @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`."},"id":2113,"implemented":true,"kind":"function","modifiers":[],"name":"_useCheckedNonce","nameLocation":"1274:16:21","nodeType":"FunctionDefinition","parameters":{"id":2094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2091,"mutability":"mutable","name":"owner","nameLocation":"1299:5:21","nodeType":"VariableDeclaration","scope":2113,"src":"1291:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2090,"name":"address","nodeType":"ElementaryTypeName","src":"1291:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2093,"mutability":"mutable","name":"nonce","nameLocation":"1314:5:21","nodeType":"VariableDeclaration","scope":2113,"src":"1306:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2092,"name":"uint256","nodeType":"ElementaryTypeName","src":"1306:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1290:30:21"},"returnParameters":{"id":2095,"nodeType":"ParameterList","parameters":[],"src":"1338:0:21"},"scope":2114,"src":"1265:222:21","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2115,"src":"209:1280:21","usedErrors":[2056],"usedEvents":[]}],"src":"99:1391:21"},"id":21},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[2166]},"id":2167,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2116,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:22"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":2117,"nodeType":"StructuredDocumentation","src":"125:489:22","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":2166,"linearizedBaseContracts":[2166],"name":"Panic","nameLocation":"665:5:22","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":2118,"nodeType":"StructuredDocumentation","src":"677:36:22","text":"@dev generic / unspecified error"},"id":2121,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:22","nodeType":"VariableDeclaration","scope":2166,"src":"718:40:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2119,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":2120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":2122,"nodeType":"StructuredDocumentation","src":"764:37:22","text":"@dev used by the assert() builtin"},"id":2125,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:22","nodeType":"VariableDeclaration","scope":2166,"src":"806:39:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2123,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":2124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":2126,"nodeType":"StructuredDocumentation","src":"851:41:22","text":"@dev arithmetic underflow or overflow"},"id":2129,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:22","nodeType":"VariableDeclaration","scope":2166,"src":"897:47:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2127,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":2128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:22","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":2130,"nodeType":"StructuredDocumentation","src":"950:35:22","text":"@dev division or modulo by zero"},"id":2133,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:22","nodeType":"VariableDeclaration","scope":2166,"src":"990:49:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2131,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":2132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:22","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":2134,"nodeType":"StructuredDocumentation","src":"1045:30:22","text":"@dev enum conversion error"},"id":2137,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:22","nodeType":"VariableDeclaration","scope":2166,"src":"1080:54:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2135,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":2136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:22","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":2138,"nodeType":"StructuredDocumentation","src":"1140:36:22","text":"@dev invalid encoding in storage"},"id":2141,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:22","nodeType":"VariableDeclaration","scope":2166,"src":"1181:55:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2139,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":2140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:22","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":2142,"nodeType":"StructuredDocumentation","src":"1242:24:22","text":"@dev empty array pop"},"id":2145,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:22","nodeType":"VariableDeclaration","scope":2166,"src":"1271:48:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2143,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":2144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:22","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":2146,"nodeType":"StructuredDocumentation","src":"1325:35:22","text":"@dev array out of bounds access"},"id":2149,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:22","nodeType":"VariableDeclaration","scope":2166,"src":"1365:52:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2147,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":2148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:22","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":2150,"nodeType":"StructuredDocumentation","src":"1423:65:22","text":"@dev resource error (too large allocation or too large array)"},"id":2153,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:22","nodeType":"VariableDeclaration","scope":2166,"src":"1493:47:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2151,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":2152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:22","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":2154,"nodeType":"StructuredDocumentation","src":"1546:42:22","text":"@dev calling invalid internal function"},"id":2157,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:22","nodeType":"VariableDeclaration","scope":2166,"src":"1593:58:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2155,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":2156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:22","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":2164,"nodeType":"Block","src":"1819:151:22","statements":[{"AST":{"nativeSrc":"1854:110:22","nodeType":"YulBlock","src":"1854:110:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1875:4:22","nodeType":"YulLiteral","src":"1875:4:22","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1881:10:22","nodeType":"YulLiteral","src":"1881:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nativeSrc":"1868:6:22","nodeType":"YulIdentifier","src":"1868:6:22"},"nativeSrc":"1868:24:22","nodeType":"YulFunctionCall","src":"1868:24:22"},"nativeSrc":"1868:24:22","nodeType":"YulExpressionStatement","src":"1868:24:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1912:4:22","nodeType":"YulLiteral","src":"1912:4:22","type":"","value":"0x20"},{"name":"code","nativeSrc":"1918:4:22","nodeType":"YulIdentifier","src":"1918:4:22"}],"functionName":{"name":"mstore","nativeSrc":"1905:6:22","nodeType":"YulIdentifier","src":"1905:6:22"},"nativeSrc":"1905:18:22","nodeType":"YulFunctionCall","src":"1905:18:22"},"nativeSrc":"1905:18:22","nodeType":"YulExpressionStatement","src":"1905:18:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1943:4:22","nodeType":"YulLiteral","src":"1943:4:22","type":"","value":"0x1c"},{"kind":"number","nativeSrc":"1949:4:22","nodeType":"YulLiteral","src":"1949:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1936:6:22","nodeType":"YulIdentifier","src":"1936:6:22"},"nativeSrc":"1936:18:22","nodeType":"YulFunctionCall","src":"1936:18:22"},"nativeSrc":"1936:18:22","nodeType":"YulExpressionStatement","src":"1936:18:22"}]},"evmVersion":"paris","externalReferences":[{"declaration":2160,"isOffset":false,"isSlot":false,"src":"1918:4:22","valueSize":1}],"flags":["memory-safe"],"id":2163,"nodeType":"InlineAssembly","src":"1829:135:22"}]},"documentation":{"id":2158,"nodeType":"StructuredDocumentation","src":"1658:113:22","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":2165,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:22","nodeType":"FunctionDefinition","parameters":{"id":2161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2160,"mutability":"mutable","name":"code","nameLocation":"1799:4:22","nodeType":"VariableDeclaration","scope":2165,"src":"1791:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2159,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:22"},"returnParameters":{"id":2162,"nodeType":"ParameterList","parameters":[],"src":"1819:0:22"},"scope":2166,"src":"1776:194:22","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2167,"src":"657:1315:22","usedErrors":[],"usedEvents":[]}],"src":"99:1874:22"},"id":22},"@openzeppelin/contracts/utils/Pausable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Pausable.sol","exportedSymbols":{"Context":[2046],"Pausable":[2274]},"id":2275,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2168,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:23"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2170,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2275,"sourceUnit":2047,"src":"128:45:23","symbolAliases":[{"foreign":{"id":2169,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2046,"src":"136:7:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2172,"name":"Context","nameLocations":["645:7:23"],"nodeType":"IdentifierPath","referencedDeclaration":2046,"src":"645:7:23"},"id":2173,"nodeType":"InheritanceSpecifier","src":"645:7:23"}],"canonicalName":"Pausable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2171,"nodeType":"StructuredDocumentation","src":"175:439:23","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":2274,"linearizedBaseContracts":[2274,2046],"name":"Pausable","nameLocation":"633:8:23","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":2175,"mutability":"mutable","name":"_paused","nameLocation":"672:7:23","nodeType":"VariableDeclaration","scope":2274,"src":"659:20:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2174,"name":"bool","nodeType":"ElementaryTypeName","src":"659:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":2176,"nodeType":"StructuredDocumentation","src":"686:73:23","text":" @dev Emitted when the pause is triggered by `account`."},"eventSelector":"62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258","id":2180,"name":"Paused","nameLocation":"770:6:23","nodeType":"EventDefinition","parameters":{"id":2179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2178,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"785:7:23","nodeType":"VariableDeclaration","scope":2180,"src":"777:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2177,"name":"address","nodeType":"ElementaryTypeName","src":"777:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"776:17:23"},"src":"764:30:23"},{"anonymous":false,"documentation":{"id":2181,"nodeType":"StructuredDocumentation","src":"800:70:23","text":" @dev Emitted when the pause is lifted by `account`."},"eventSelector":"5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa","id":2185,"name":"Unpaused","nameLocation":"881:8:23","nodeType":"EventDefinition","parameters":{"id":2184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2183,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"898:7:23","nodeType":"VariableDeclaration","scope":2185,"src":"890:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2182,"name":"address","nodeType":"ElementaryTypeName","src":"890:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"889:17:23"},"src":"875:32:23"},{"documentation":{"id":2186,"nodeType":"StructuredDocumentation","src":"913:76:23","text":" @dev The operation failed because the contract is paused."},"errorSelector":"d93c0665","id":2188,"name":"EnforcedPause","nameLocation":"1000:13:23","nodeType":"ErrorDefinition","parameters":{"id":2187,"nodeType":"ParameterList","parameters":[],"src":"1013:2:23"},"src":"994:22:23"},{"documentation":{"id":2189,"nodeType":"StructuredDocumentation","src":"1022:80:23","text":" @dev The operation failed because the contract is not paused."},"errorSelector":"8dfc202b","id":2191,"name":"ExpectedPause","nameLocation":"1113:13:23","nodeType":"ErrorDefinition","parameters":{"id":2190,"nodeType":"ParameterList","parameters":[],"src":"1126:2:23"},"src":"1107:22:23"},{"body":{"id":2198,"nodeType":"Block","src":"1340:47:23","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2194,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"1350:17:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":2195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1350:19:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2196,"nodeType":"ExpressionStatement","src":"1350:19:23"},{"id":2197,"nodeType":"PlaceholderStatement","src":"1379:1:23"}]},"documentation":{"id":2192,"nodeType":"StructuredDocumentation","src":"1135:175:23","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":2199,"name":"whenNotPaused","nameLocation":"1324:13:23","nodeType":"ModifierDefinition","parameters":{"id":2193,"nodeType":"ParameterList","parameters":[],"src":"1337:2:23"},"src":"1315:72:23","virtual":false,"visibility":"internal"},{"body":{"id":2206,"nodeType":"Block","src":"1587:44:23","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2202,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"1597:14:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":2203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1597:16:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2204,"nodeType":"ExpressionStatement","src":"1597:16:23"},{"id":2205,"nodeType":"PlaceholderStatement","src":"1623:1:23"}]},"documentation":{"id":2200,"nodeType":"StructuredDocumentation","src":"1393:167:23","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":2207,"name":"whenPaused","nameLocation":"1574:10:23","nodeType":"ModifierDefinition","parameters":{"id":2201,"nodeType":"ParameterList","parameters":[],"src":"1584:2:23"},"src":"1565:66:23","virtual":false,"visibility":"internal"},{"body":{"id":2215,"nodeType":"Block","src":"1779:31:23","statements":[{"expression":{"id":2213,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"1796:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2212,"id":2214,"nodeType":"Return","src":"1789:14:23"}]},"documentation":{"id":2208,"nodeType":"StructuredDocumentation","src":"1637:84:23","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":2216,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"1735:6:23","nodeType":"FunctionDefinition","parameters":{"id":2209,"nodeType":"ParameterList","parameters":[],"src":"1741:2:23"},"returnParameters":{"id":2212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2211,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2216,"src":"1773:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2210,"name":"bool","nodeType":"ElementaryTypeName","src":"1773:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1772:6:23"},"scope":2274,"src":"1726:84:23","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2227,"nodeType":"Block","src":"1929:77:23","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"id":2220,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2216,"src":"1943:6:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1943:8:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2226,"nodeType":"IfStatement","src":"1939:61:23","trueBody":{"id":2225,"nodeType":"Block","src":"1953:47:23","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2222,"name":"EnforcedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"1974:13:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1974:15:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2224,"nodeType":"RevertStatement","src":"1967:22:23"}]}}]},"documentation":{"id":2217,"nodeType":"StructuredDocumentation","src":"1816:57:23","text":" @dev Throws if the contract is paused."},"id":2228,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"1887:17:23","nodeType":"FunctionDefinition","parameters":{"id":2218,"nodeType":"ParameterList","parameters":[],"src":"1904:2:23"},"returnParameters":{"id":2219,"nodeType":"ParameterList","parameters":[],"src":"1929:0:23"},"scope":2274,"src":"1878:128:23","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2240,"nodeType":"Block","src":"2126:78:23","statements":[{"condition":{"id":2234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2140:9:23","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2232,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2216,"src":"2141:6:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":2233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2141:8:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2239,"nodeType":"IfStatement","src":"2136:62:23","trueBody":{"id":2238,"nodeType":"Block","src":"2151:47:23","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2235,"name":"ExpectedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2191,"src":"2172:13:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2172:15:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2237,"nodeType":"RevertStatement","src":"2165:22:23"}]}}]},"documentation":{"id":2229,"nodeType":"StructuredDocumentation","src":"2012:61:23","text":" @dev Throws if the contract is not paused."},"id":2241,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"2087:14:23","nodeType":"FunctionDefinition","parameters":{"id":2230,"nodeType":"ParameterList","parameters":[],"src":"2101:2:23"},"returnParameters":{"id":2231,"nodeType":"ParameterList","parameters":[],"src":"2126:0:23"},"scope":2274,"src":"2078:126:23","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2256,"nodeType":"Block","src":"2388:66:23","statements":[{"expression":{"id":2249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2247,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"2398:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2408:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2398:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2250,"nodeType":"ExpressionStatement","src":"2398:14:23"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2252,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2028,"src":"2434:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2434:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2251,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2180,"src":"2427:6:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2427:20:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2255,"nodeType":"EmitStatement","src":"2422:25:23"}]},"documentation":{"id":2242,"nodeType":"StructuredDocumentation","src":"2210:124:23","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":2257,"implemented":true,"kind":"function","modifiers":[{"id":2245,"kind":"modifierInvocation","modifierName":{"id":2244,"name":"whenNotPaused","nameLocations":["2374:13:23"],"nodeType":"IdentifierPath","referencedDeclaration":2199,"src":"2374:13:23"},"nodeType":"ModifierInvocation","src":"2374:13:23"}],"name":"_pause","nameLocation":"2348:6:23","nodeType":"FunctionDefinition","parameters":{"id":2243,"nodeType":"ParameterList","parameters":[],"src":"2354:2:23"},"returnParameters":{"id":2246,"nodeType":"ParameterList","parameters":[],"src":"2388:0:23"},"scope":2274,"src":"2339:115:23","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2272,"nodeType":"Block","src":"2634:69:23","statements":[{"expression":{"id":2265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2263,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"2644:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":2264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2654:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2644:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2266,"nodeType":"ExpressionStatement","src":"2644:15:23"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2268,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2028,"src":"2683:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2683:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2267,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"2674:8:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2674:22:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2271,"nodeType":"EmitStatement","src":"2669:27:23"}]},"documentation":{"id":2258,"nodeType":"StructuredDocumentation","src":"2460:121:23","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":2273,"implemented":true,"kind":"function","modifiers":[{"id":2261,"kind":"modifierInvocation","modifierName":{"id":2260,"name":"whenPaused","nameLocations":["2623:10:23"],"nodeType":"IdentifierPath","referencedDeclaration":2207,"src":"2623:10:23"},"nodeType":"ModifierInvocation","src":"2623:10:23"}],"name":"_unpause","nameLocation":"2595:8:23","nodeType":"FunctionDefinition","parameters":{"id":2259,"nodeType":"ParameterList","parameters":[],"src":"2603:2:23"},"returnParameters":{"id":2262,"nodeType":"ParameterList","parameters":[],"src":"2634:0:23"},"scope":2274,"src":"2586:117:23","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2275,"src":"615:2090:23","usedErrors":[2188,2191],"usedEvents":[2180,2185]}],"src":"102:2604:23"},"id":23},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","exportedSymbols":{"ShortString":[2280],"ShortStrings":[2491],"StorageSlot":[2615]},"id":2492,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2276,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:24"},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":2278,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2492,"sourceUnit":2616,"src":"132:46:24","symbolAliases":[{"foreign":{"id":2277,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2615,"src":"140:11:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"ShortString","id":2280,"name":"ShortString","nameLocation":"353:11:24","nodeType":"UserDefinedValueTypeDefinition","src":"348:28:24","underlyingType":{"id":2279,"name":"bytes32","nodeType":"ElementaryTypeName","src":"368:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"abstract":false,"baseContracts":[],"canonicalName":"ShortStrings","contractDependencies":[],"contractKind":"library","documentation":{"id":2281,"nodeType":"StructuredDocumentation","src":"378:876:24","text":" @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"},"fullyImplemented":true,"id":2491,"linearizedBaseContracts":[2491],"name":"ShortStrings","nameLocation":"1263:12:24","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2284,"mutability":"constant","name":"FALLBACK_SENTINEL","nameLocation":"1370:17:24","nodeType":"VariableDeclaration","scope":2491,"src":"1345:111:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2282,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1345:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646","id":2283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1390:66:24","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0x00000000000000000000000000000000000000000000000000000000000000FF"},"visibility":"private"},{"errorSelector":"305a27a9","id":2288,"name":"StringTooLong","nameLocation":"1469:13:24","nodeType":"ErrorDefinition","parameters":{"id":2287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2286,"mutability":"mutable","name":"str","nameLocation":"1490:3:24","nodeType":"VariableDeclaration","scope":2288,"src":"1483:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2285,"name":"string","nodeType":"ElementaryTypeName","src":"1483:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1482:12:24"},"src":"1463:32:24"},{"errorSelector":"b3512b0c","id":2290,"name":"InvalidShortString","nameLocation":"1506:18:24","nodeType":"ErrorDefinition","parameters":{"id":2289,"nodeType":"ParameterList","parameters":[],"src":"1524:2:24"},"src":"1500:27:24"},{"body":{"id":2333,"nodeType":"Block","src":"1786:208:24","statements":[{"assignments":[2300],"declarations":[{"constant":false,"id":2300,"mutability":"mutable","name":"bstr","nameLocation":"1809:4:24","nodeType":"VariableDeclaration","scope":2333,"src":"1796:17:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2299,"name":"bytes","nodeType":"ElementaryTypeName","src":"1796:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2305,"initialValue":{"arguments":[{"id":2303,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2293,"src":"1822:3:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2302,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1816:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2301,"name":"bytes","nodeType":"ElementaryTypeName","src":"1816:5:24","typeDescriptions":{}}},"id":2304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1816:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1796:30:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2306,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"1840:4:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1845:6:24","memberName":"length","nodeType":"MemberAccess","src":"1840:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":2308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1854:2:24","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"1840:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2315,"nodeType":"IfStatement","src":"1836:72:24","trueBody":{"id":2314,"nodeType":"Block","src":"1858:50:24","statements":[{"errorCall":{"arguments":[{"id":2311,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2293,"src":"1893:3:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2310,"name":"StringTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"1879:13:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$_t_error_$","typeString":"function (string memory) pure returns (error)"}},"id":2312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1879:18:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2313,"nodeType":"RevertStatement","src":"1872:25:24"}]}},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2324,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"1965:4:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2323,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1957:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2322,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1957:7:24","typeDescriptions":{}}},"id":2325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1957:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2321,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1949:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2320,"name":"uint256","nodeType":"ElementaryTypeName","src":"1949:7:24","typeDescriptions":{}}},"id":2326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1949:22:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":2327,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"1974:4:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1979:6:24","memberName":"length","nodeType":"MemberAccess","src":"1974:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1949:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2319,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1941:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2318,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1941:7:24","typeDescriptions":{}}},"id":2330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1941:45:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2316,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"1924:11:24","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2280_$","typeString":"type(ShortString)"}},"id":2317,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1936:4:24","memberName":"wrap","nodeType":"MemberAccess","src":"1924:16:24","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$2280_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":2331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1924:63:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2280","typeString":"ShortString"}},"functionReturnParameters":2298,"id":2332,"nodeType":"Return","src":"1917:70:24"}]},"documentation":{"id":2291,"nodeType":"StructuredDocumentation","src":"1533:170:24","text":" @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."},"id":2334,"implemented":true,"kind":"function","modifiers":[],"name":"toShortString","nameLocation":"1717:13:24","nodeType":"FunctionDefinition","parameters":{"id":2294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2293,"mutability":"mutable","name":"str","nameLocation":"1745:3:24","nodeType":"VariableDeclaration","scope":2334,"src":"1731:17:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2292,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1730:19:24"},"returnParameters":{"id":2298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2297,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2334,"src":"1773:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2280","typeString":"ShortString"},"typeName":{"id":2296,"nodeType":"UserDefinedTypeName","pathNode":{"id":2295,"name":"ShortString","nameLocations":["1773:11:24"],"nodeType":"IdentifierPath","referencedDeclaration":2280,"src":"1773:11:24"},"referencedDeclaration":2280,"src":"1773:11:24","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2280","typeString":"ShortString"}},"visibility":"internal"}],"src":"1772:13:24"},"scope":2491,"src":"1708:286:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2359,"nodeType":"Block","src":"2152:304:24","statements":[{"assignments":[2344],"declarations":[{"constant":false,"id":2344,"mutability":"mutable","name":"len","nameLocation":"2170:3:24","nodeType":"VariableDeclaration","scope":2359,"src":"2162:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2343,"name":"uint256","nodeType":"ElementaryTypeName","src":"2162:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2348,"initialValue":{"arguments":[{"id":2346,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2338,"src":"2187:4:24","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2280","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2280","typeString":"ShortString"}],"id":2345,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2392,"src":"2176:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2280_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":2347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:16:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2162:30:24"},{"assignments":[2350],"declarations":[{"constant":false,"id":2350,"mutability":"mutable","name":"str","nameLocation":"2294:3:24","nodeType":"VariableDeclaration","scope":2359,"src":"2280:17:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2349,"name":"string","nodeType":"ElementaryTypeName","src":"2280:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2355,"initialValue":{"arguments":[{"hexValue":"3332","id":2353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2311:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":2352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2300:10:24","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2351,"name":"string","nodeType":"ElementaryTypeName","src":"2304:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2300:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2280:34:24"},{"AST":{"nativeSrc":"2349:81:24","nodeType":"YulBlock","src":"2349:81:24","statements":[{"expression":{"arguments":[{"name":"str","nativeSrc":"2370:3:24","nodeType":"YulIdentifier","src":"2370:3:24"},{"name":"len","nativeSrc":"2375:3:24","nodeType":"YulIdentifier","src":"2375:3:24"}],"functionName":{"name":"mstore","nativeSrc":"2363:6:24","nodeType":"YulIdentifier","src":"2363:6:24"},"nativeSrc":"2363:16:24","nodeType":"YulFunctionCall","src":"2363:16:24"},"nativeSrc":"2363:16:24","nodeType":"YulExpressionStatement","src":"2363:16:24"},{"expression":{"arguments":[{"arguments":[{"name":"str","nativeSrc":"2403:3:24","nodeType":"YulIdentifier","src":"2403:3:24"},{"kind":"number","nativeSrc":"2408:4:24","nodeType":"YulLiteral","src":"2408:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2399:3:24","nodeType":"YulIdentifier","src":"2399:3:24"},"nativeSrc":"2399:14:24","nodeType":"YulFunctionCall","src":"2399:14:24"},{"name":"sstr","nativeSrc":"2415:4:24","nodeType":"YulIdentifier","src":"2415:4:24"}],"functionName":{"name":"mstore","nativeSrc":"2392:6:24","nodeType":"YulIdentifier","src":"2392:6:24"},"nativeSrc":"2392:28:24","nodeType":"YulFunctionCall","src":"2392:28:24"},"nativeSrc":"2392:28:24","nodeType":"YulExpressionStatement","src":"2392:28:24"}]},"evmVersion":"paris","externalReferences":[{"declaration":2344,"isOffset":false,"isSlot":false,"src":"2375:3:24","valueSize":1},{"declaration":2338,"isOffset":false,"isSlot":false,"src":"2415:4:24","valueSize":1},{"declaration":2350,"isOffset":false,"isSlot":false,"src":"2370:3:24","valueSize":1},{"declaration":2350,"isOffset":false,"isSlot":false,"src":"2403:3:24","valueSize":1}],"flags":["memory-safe"],"id":2356,"nodeType":"InlineAssembly","src":"2324:106:24"},{"expression":{"id":2357,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"2446:3:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2342,"id":2358,"nodeType":"Return","src":"2439:10:24"}]},"documentation":{"id":2335,"nodeType":"StructuredDocumentation","src":"2000:73:24","text":" @dev Decode a `ShortString` back to a \"normal\" string."},"id":2360,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"2087:8:24","nodeType":"FunctionDefinition","parameters":{"id":2339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2338,"mutability":"mutable","name":"sstr","nameLocation":"2108:4:24","nodeType":"VariableDeclaration","scope":2360,"src":"2096:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2280","typeString":"ShortString"},"typeName":{"id":2337,"nodeType":"UserDefinedTypeName","pathNode":{"id":2336,"name":"ShortString","nameLocations":["2096:11:24"],"nodeType":"IdentifierPath","referencedDeclaration":2280,"src":"2096:11:24"},"referencedDeclaration":2280,"src":"2096:11:24","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2280","typeString":"ShortString"}},"visibility":"internal"}],"src":"2095:18:24"},"returnParameters":{"id":2342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2341,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2360,"src":"2137:13:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2340,"name":"string","nodeType":"ElementaryTypeName","src":"2137:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2136:15:24"},"scope":2491,"src":"2078:378:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2391,"nodeType":"Block","src":"2598:175:24","statements":[{"assignments":[2370],"declarations":[{"constant":false,"id":2370,"mutability":"mutable","name":"result","nameLocation":"2616:6:24","nodeType":"VariableDeclaration","scope":2391,"src":"2608:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2369,"name":"uint256","nodeType":"ElementaryTypeName","src":"2608:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2380,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2375,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2364,"src":"2652:4:24","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2280","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2280","typeString":"ShortString"}],"expression":{"id":2373,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"2633:11:24","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2280_$","typeString":"type(ShortString)"}},"id":2374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2645:6:24","memberName":"unwrap","nodeType":"MemberAccess","src":"2633:18:24","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2280_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2633:24:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2372,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2625:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2371,"name":"uint256","nodeType":"ElementaryTypeName","src":"2625:7:24","typeDescriptions":{}}},"id":2377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2625:33:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30784646","id":2378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2661:4:24","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"2625:40:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2608:57:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2381,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2370,"src":"2679:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":2382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2688:2:24","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"2679:11:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2388,"nodeType":"IfStatement","src":"2675:69:24","trueBody":{"id":2387,"nodeType":"Block","src":"2692:52:24","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2384,"name":"InvalidShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2290,"src":"2713:18:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2713:20:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2386,"nodeType":"RevertStatement","src":"2706:27:24"}]}},{"expression":{"id":2389,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2370,"src":"2760:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2368,"id":2390,"nodeType":"Return","src":"2753:13:24"}]},"documentation":{"id":2361,"nodeType":"StructuredDocumentation","src":"2462:61:24","text":" @dev Return the length of a `ShortString`."},"id":2392,"implemented":true,"kind":"function","modifiers":[],"name":"byteLength","nameLocation":"2537:10:24","nodeType":"FunctionDefinition","parameters":{"id":2365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2364,"mutability":"mutable","name":"sstr","nameLocation":"2560:4:24","nodeType":"VariableDeclaration","scope":2392,"src":"2548:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2280","typeString":"ShortString"},"typeName":{"id":2363,"nodeType":"UserDefinedTypeName","pathNode":{"id":2362,"name":"ShortString","nameLocations":["2548:11:24"],"nodeType":"IdentifierPath","referencedDeclaration":2280,"src":"2548:11:24"},"referencedDeclaration":2280,"src":"2548:11:24","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2280","typeString":"ShortString"}},"visibility":"internal"}],"src":"2547:18:24"},"returnParameters":{"id":2368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2367,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2392,"src":"2589:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2366,"name":"uint256","nodeType":"ElementaryTypeName","src":"2589:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2588:9:24"},"scope":2491,"src":"2528:245:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2431,"nodeType":"Block","src":"2996:231:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2405,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"3016:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2404,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3010:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2403,"name":"bytes","nodeType":"ElementaryTypeName","src":"3010:5:24","typeDescriptions":{}}},"id":2406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3010:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3023:6:24","memberName":"length","nodeType":"MemberAccess","src":"3010:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":2408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3032:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3010:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2429,"nodeType":"Block","src":"3094:127:24","statements":[{"expression":{"id":2422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":2418,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2397,"src":"3134:5:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"expression":{"id":2415,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2615,"src":"3108:11:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2615_$","typeString":"type(library StorageSlot)"}},"id":2417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3120:13:24","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":2592,"src":"3108:25:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$2512_storage_ptr_$","typeString":"function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":2419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3108:32:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2512_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"id":2420,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3141:5:24","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2511,"src":"3108:38:24","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2421,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"3149:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3108:46:24","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2423,"nodeType":"ExpressionStatement","src":"3108:46:24"},{"expression":{"arguments":[{"id":2426,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2284,"src":"3192:17:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2424,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"3175:11:24","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2280_$","typeString":"type(ShortString)"}},"id":2425,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3187:4:24","memberName":"wrap","nodeType":"MemberAccess","src":"3175:16:24","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$2280_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":2427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3175:35:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2280","typeString":"ShortString"}},"functionReturnParameters":2402,"id":2428,"nodeType":"Return","src":"3168:42:24"}]},"id":2430,"nodeType":"IfStatement","src":"3006:215:24","trueBody":{"id":2414,"nodeType":"Block","src":"3036:52:24","statements":[{"expression":{"arguments":[{"id":2411,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"3071:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2410,"name":"toShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2334,"src":"3057:13:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$2280_$","typeString":"function (string memory) pure returns (ShortString)"}},"id":2412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3057:20:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2280","typeString":"ShortString"}},"functionReturnParameters":2402,"id":2413,"nodeType":"Return","src":"3050:27:24"}]}}]},"documentation":{"id":2393,"nodeType":"StructuredDocumentation","src":"2779:103:24","text":" @dev Encode a string into a `ShortString`, or write it to storage if it is too long."},"id":2432,"implemented":true,"kind":"function","modifiers":[],"name":"toShortStringWithFallback","nameLocation":"2896:25:24","nodeType":"FunctionDefinition","parameters":{"id":2398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2395,"mutability":"mutable","name":"value","nameLocation":"2936:5:24","nodeType":"VariableDeclaration","scope":2432,"src":"2922:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2394,"name":"string","nodeType":"ElementaryTypeName","src":"2922:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2397,"mutability":"mutable","name":"store","nameLocation":"2958:5:24","nodeType":"VariableDeclaration","scope":2432,"src":"2943:20:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2396,"name":"string","nodeType":"ElementaryTypeName","src":"2943:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2921:43:24"},"returnParameters":{"id":2402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2401,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2432,"src":"2983:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2280","typeString":"ShortString"},"typeName":{"id":2400,"nodeType":"UserDefinedTypeName","pathNode":{"id":2399,"name":"ShortString","nameLocations":["2983:11:24"],"nodeType":"IdentifierPath","referencedDeclaration":2280,"src":"2983:11:24"},"referencedDeclaration":2280,"src":"2983:11:24","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2280","typeString":"ShortString"}},"visibility":"internal"}],"src":"2982:13:24"},"scope":2491,"src":"2887:340:24","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2458,"nodeType":"Block","src":"3477:158:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2445,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"3510:5:24","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2280","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2280","typeString":"ShortString"}],"expression":{"id":2443,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"3491:11:24","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2280_$","typeString":"type(ShortString)"}},"id":2444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3503:6:24","memberName":"unwrap","nodeType":"MemberAccess","src":"3491:18:24","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2280_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3491:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2447,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2284,"src":"3520:17:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3491:46:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2456,"nodeType":"Block","src":"3592:37:24","statements":[{"expression":{"id":2454,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2438,"src":"3613:5:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}},"functionReturnParameters":2442,"id":2455,"nodeType":"Return","src":"3606:12:24"}]},"id":2457,"nodeType":"IfStatement","src":"3487:142:24","trueBody":{"id":2453,"nodeType":"Block","src":"3539:47:24","statements":[{"expression":{"arguments":[{"id":2450,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"3569:5:24","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2280","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2280","typeString":"ShortString"}],"id":2449,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2360,"src":"3560:8:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2280_$returns$_t_string_memory_ptr_$","typeString":"function (ShortString) pure returns (string memory)"}},"id":2451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3560:15:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2442,"id":2452,"nodeType":"Return","src":"3553:22:24"}]}}]},"documentation":{"id":2433,"nodeType":"StructuredDocumentation","src":"3233:130:24","text":" @dev Decode a string that was encoded to `ShortString` or written to storage using {toShortStringWithFallback}."},"id":2459,"implemented":true,"kind":"function","modifiers":[],"name":"toStringWithFallback","nameLocation":"3377:20:24","nodeType":"FunctionDefinition","parameters":{"id":2439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2436,"mutability":"mutable","name":"value","nameLocation":"3410:5:24","nodeType":"VariableDeclaration","scope":2459,"src":"3398:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2280","typeString":"ShortString"},"typeName":{"id":2435,"nodeType":"UserDefinedTypeName","pathNode":{"id":2434,"name":"ShortString","nameLocations":["3398:11:24"],"nodeType":"IdentifierPath","referencedDeclaration":2280,"src":"3398:11:24"},"referencedDeclaration":2280,"src":"3398:11:24","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2280","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":2438,"mutability":"mutable","name":"store","nameLocation":"3432:5:24","nodeType":"VariableDeclaration","scope":2459,"src":"3417:20:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2437,"name":"string","nodeType":"ElementaryTypeName","src":"3417:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3397:41:24"},"returnParameters":{"id":2442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2441,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2459,"src":"3462:13:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2440,"name":"string","nodeType":"ElementaryTypeName","src":"3462:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3461:15:24"},"scope":2491,"src":"3368:267:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2489,"nodeType":"Block","src":"4125:174:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2472,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"4158:5:24","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2280","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2280","typeString":"ShortString"}],"expression":{"id":2470,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"4139:11:24","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2280_$","typeString":"type(ShortString)"}},"id":2471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4151:6:24","memberName":"unwrap","nodeType":"MemberAccess","src":"4139:18:24","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2280_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4139:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2474,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2284,"src":"4168:17:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4139:46:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2487,"nodeType":"Block","src":"4242:51:24","statements":[{"expression":{"expression":{"arguments":[{"id":2483,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2465,"src":"4269:5:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"id":2482,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4263:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2481,"name":"bytes","nodeType":"ElementaryTypeName","src":"4263:5:24","typeDescriptions":{}}},"id":2484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4263:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":2485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4276:6:24","memberName":"length","nodeType":"MemberAccess","src":"4263:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2469,"id":2486,"nodeType":"Return","src":"4256:26:24"}]},"id":2488,"nodeType":"IfStatement","src":"4135:158:24","trueBody":{"id":2480,"nodeType":"Block","src":"4187:49:24","statements":[{"expression":{"arguments":[{"id":2477,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"4219:5:24","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2280","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2280","typeString":"ShortString"}],"id":2476,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2392,"src":"4208:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2280_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":2478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4208:17:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2469,"id":2479,"nodeType":"Return","src":"4201:24:24"}]}}]},"documentation":{"id":2460,"nodeType":"StructuredDocumentation","src":"3641:374:24","text":" @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {toShortStringWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."},"id":2490,"implemented":true,"kind":"function","modifiers":[],"name":"byteLengthWithFallback","nameLocation":"4029:22:24","nodeType":"FunctionDefinition","parameters":{"id":2466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2463,"mutability":"mutable","name":"value","nameLocation":"4064:5:24","nodeType":"VariableDeclaration","scope":2490,"src":"4052:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2280","typeString":"ShortString"},"typeName":{"id":2462,"nodeType":"UserDefinedTypeName","pathNode":{"id":2461,"name":"ShortString","nameLocations":["4052:11:24"],"nodeType":"IdentifierPath","referencedDeclaration":2280,"src":"4052:11:24"},"referencedDeclaration":2280,"src":"4052:11:24","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2280","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":2465,"mutability":"mutable","name":"store","nameLocation":"4086:5:24","nodeType":"VariableDeclaration","scope":2490,"src":"4071:20:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2464,"name":"string","nodeType":"ElementaryTypeName","src":"4071:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4051:41:24"},"returnParameters":{"id":2469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2468,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2490,"src":"4116:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2467,"name":"uint256","nodeType":"ElementaryTypeName","src":"4116:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4115:9:24"},"scope":2491,"src":"4020:279:24","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2492,"src":"1255:3046:24","usedErrors":[2288,2290],"usedEvents":[]}],"src":"106:4196:24"},"id":24},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[2615]},"id":2616,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2493,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:25"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":2494,"nodeType":"StructuredDocumentation","src":"219:1187:25","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":2615,"linearizedBaseContracts":[2615],"name":"StorageSlot","nameLocation":"1415:11:25","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":2497,"members":[{"constant":false,"id":2496,"mutability":"mutable","name":"value","nameLocation":"1470:5:25","nodeType":"VariableDeclaration","scope":2497,"src":"1462:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2495,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1440:11:25","nodeType":"StructDefinition","scope":2615,"src":"1433:49:25","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":2500,"members":[{"constant":false,"id":2499,"mutability":"mutable","name":"value","nameLocation":"1522:5:25","nodeType":"VariableDeclaration","scope":2500,"src":"1517:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2498,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1495:11:25","nodeType":"StructDefinition","scope":2615,"src":"1488:46:25","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":2503,"members":[{"constant":false,"id":2502,"mutability":"mutable","name":"value","nameLocation":"1577:5:25","nodeType":"VariableDeclaration","scope":2503,"src":"1569:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2501,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1547:11:25","nodeType":"StructDefinition","scope":2615,"src":"1540:49:25","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":2506,"members":[{"constant":false,"id":2505,"mutability":"mutable","name":"value","nameLocation":"1632:5:25","nodeType":"VariableDeclaration","scope":2506,"src":"1624:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2504,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1602:11:25","nodeType":"StructDefinition","scope":2615,"src":"1595:49:25","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":2509,"members":[{"constant":false,"id":2508,"mutability":"mutable","name":"value","nameLocation":"1685:5:25","nodeType":"VariableDeclaration","scope":2509,"src":"1678:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2507,"name":"int256","nodeType":"ElementaryTypeName","src":"1678:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1657:10:25","nodeType":"StructDefinition","scope":2615,"src":"1650:47:25","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":2512,"members":[{"constant":false,"id":2511,"mutability":"mutable","name":"value","nameLocation":"1738:5:25","nodeType":"VariableDeclaration","scope":2512,"src":"1731:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2510,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1710:10:25","nodeType":"StructDefinition","scope":2615,"src":"1703:47:25","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":2515,"members":[{"constant":false,"id":2514,"mutability":"mutable","name":"value","nameLocation":"1789:5:25","nodeType":"VariableDeclaration","scope":2515,"src":"1783:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2513,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1763:9:25","nodeType":"StructDefinition","scope":2615,"src":"1756:45:25","visibility":"public"},{"body":{"id":2525,"nodeType":"Block","src":"1983:79:25","statements":[{"AST":{"nativeSrc":"2018:38:25","nodeType":"YulBlock","src":"2018:38:25","statements":[{"nativeSrc":"2032:14:25","nodeType":"YulAssignment","src":"2032:14:25","value":{"name":"slot","nativeSrc":"2042:4:25","nodeType":"YulIdentifier","src":"2042:4:25"},"variableNames":[{"name":"r.slot","nativeSrc":"2032:6:25","nodeType":"YulIdentifier","src":"2032:6:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2522,"isOffset":false,"isSlot":true,"src":"2032:6:25","suffix":"slot","valueSize":1},{"declaration":2518,"isOffset":false,"isSlot":false,"src":"2042:4:25","valueSize":1}],"flags":["memory-safe"],"id":2524,"nodeType":"InlineAssembly","src":"1993:63:25"}]},"documentation":{"id":2516,"nodeType":"StructuredDocumentation","src":"1807:87:25","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":2526,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1908:14:25","nodeType":"FunctionDefinition","parameters":{"id":2519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2518,"mutability":"mutable","name":"slot","nameLocation":"1931:4:25","nodeType":"VariableDeclaration","scope":2526,"src":"1923:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2517,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1923:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1922:14:25"},"returnParameters":{"id":2523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2522,"mutability":"mutable","name":"r","nameLocation":"1980:1:25","nodeType":"VariableDeclaration","scope":2526,"src":"1960:21:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2497_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":2521,"nodeType":"UserDefinedTypeName","pathNode":{"id":2520,"name":"AddressSlot","nameLocations":["1960:11:25"],"nodeType":"IdentifierPath","referencedDeclaration":2497,"src":"1960:11:25"},"referencedDeclaration":2497,"src":"1960:11:25","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2497_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:23:25"},"scope":2615,"src":"1899:163:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2536,"nodeType":"Block","src":"2243:79:25","statements":[{"AST":{"nativeSrc":"2278:38:25","nodeType":"YulBlock","src":"2278:38:25","statements":[{"nativeSrc":"2292:14:25","nodeType":"YulAssignment","src":"2292:14:25","value":{"name":"slot","nativeSrc":"2302:4:25","nodeType":"YulIdentifier","src":"2302:4:25"},"variableNames":[{"name":"r.slot","nativeSrc":"2292:6:25","nodeType":"YulIdentifier","src":"2292:6:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2533,"isOffset":false,"isSlot":true,"src":"2292:6:25","suffix":"slot","valueSize":1},{"declaration":2529,"isOffset":false,"isSlot":false,"src":"2302:4:25","valueSize":1}],"flags":["memory-safe"],"id":2535,"nodeType":"InlineAssembly","src":"2253:63:25"}]},"documentation":{"id":2527,"nodeType":"StructuredDocumentation","src":"2068:86:25","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":2537,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2168:14:25","nodeType":"FunctionDefinition","parameters":{"id":2530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2529,"mutability":"mutable","name":"slot","nameLocation":"2191:4:25","nodeType":"VariableDeclaration","scope":2537,"src":"2183:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2528,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2183:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2182:14:25"},"returnParameters":{"id":2534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2533,"mutability":"mutable","name":"r","nameLocation":"2240:1:25","nodeType":"VariableDeclaration","scope":2537,"src":"2220:21:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2500_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":2532,"nodeType":"UserDefinedTypeName","pathNode":{"id":2531,"name":"BooleanSlot","nameLocations":["2220:11:25"],"nodeType":"IdentifierPath","referencedDeclaration":2500,"src":"2220:11:25"},"referencedDeclaration":2500,"src":"2220:11:25","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2500_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2219:23:25"},"scope":2615,"src":"2159:163:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2547,"nodeType":"Block","src":"2503:79:25","statements":[{"AST":{"nativeSrc":"2538:38:25","nodeType":"YulBlock","src":"2538:38:25","statements":[{"nativeSrc":"2552:14:25","nodeType":"YulAssignment","src":"2552:14:25","value":{"name":"slot","nativeSrc":"2562:4:25","nodeType":"YulIdentifier","src":"2562:4:25"},"variableNames":[{"name":"r.slot","nativeSrc":"2552:6:25","nodeType":"YulIdentifier","src":"2552:6:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2544,"isOffset":false,"isSlot":true,"src":"2552:6:25","suffix":"slot","valueSize":1},{"declaration":2540,"isOffset":false,"isSlot":false,"src":"2562:4:25","valueSize":1}],"flags":["memory-safe"],"id":2546,"nodeType":"InlineAssembly","src":"2513:63:25"}]},"documentation":{"id":2538,"nodeType":"StructuredDocumentation","src":"2328:86:25","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":2548,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2428:14:25","nodeType":"FunctionDefinition","parameters":{"id":2541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2540,"mutability":"mutable","name":"slot","nameLocation":"2451:4:25","nodeType":"VariableDeclaration","scope":2548,"src":"2443:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2539,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2442:14:25"},"returnParameters":{"id":2545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2544,"mutability":"mutable","name":"r","nameLocation":"2500:1:25","nodeType":"VariableDeclaration","scope":2548,"src":"2480:21:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2503_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":2543,"nodeType":"UserDefinedTypeName","pathNode":{"id":2542,"name":"Bytes32Slot","nameLocations":["2480:11:25"],"nodeType":"IdentifierPath","referencedDeclaration":2503,"src":"2480:11:25"},"referencedDeclaration":2503,"src":"2480:11:25","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2503_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2479:23:25"},"scope":2615,"src":"2419:163:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2558,"nodeType":"Block","src":"2763:79:25","statements":[{"AST":{"nativeSrc":"2798:38:25","nodeType":"YulBlock","src":"2798:38:25","statements":[{"nativeSrc":"2812:14:25","nodeType":"YulAssignment","src":"2812:14:25","value":{"name":"slot","nativeSrc":"2822:4:25","nodeType":"YulIdentifier","src":"2822:4:25"},"variableNames":[{"name":"r.slot","nativeSrc":"2812:6:25","nodeType":"YulIdentifier","src":"2812:6:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2555,"isOffset":false,"isSlot":true,"src":"2812:6:25","suffix":"slot","valueSize":1},{"declaration":2551,"isOffset":false,"isSlot":false,"src":"2822:4:25","valueSize":1}],"flags":["memory-safe"],"id":2557,"nodeType":"InlineAssembly","src":"2773:63:25"}]},"documentation":{"id":2549,"nodeType":"StructuredDocumentation","src":"2588:86:25","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":2559,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2688:14:25","nodeType":"FunctionDefinition","parameters":{"id":2552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2551,"mutability":"mutable","name":"slot","nameLocation":"2711:4:25","nodeType":"VariableDeclaration","scope":2559,"src":"2703:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2550,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2702:14:25"},"returnParameters":{"id":2556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2555,"mutability":"mutable","name":"r","nameLocation":"2760:1:25","nodeType":"VariableDeclaration","scope":2559,"src":"2740:21:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2506_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":2554,"nodeType":"UserDefinedTypeName","pathNode":{"id":2553,"name":"Uint256Slot","nameLocations":["2740:11:25"],"nodeType":"IdentifierPath","referencedDeclaration":2506,"src":"2740:11:25"},"referencedDeclaration":2506,"src":"2740:11:25","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2506_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2739:23:25"},"scope":2615,"src":"2679:163:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2569,"nodeType":"Block","src":"3020:79:25","statements":[{"AST":{"nativeSrc":"3055:38:25","nodeType":"YulBlock","src":"3055:38:25","statements":[{"nativeSrc":"3069:14:25","nodeType":"YulAssignment","src":"3069:14:25","value":{"name":"slot","nativeSrc":"3079:4:25","nodeType":"YulIdentifier","src":"3079:4:25"},"variableNames":[{"name":"r.slot","nativeSrc":"3069:6:25","nodeType":"YulIdentifier","src":"3069:6:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2566,"isOffset":false,"isSlot":true,"src":"3069:6:25","suffix":"slot","valueSize":1},{"declaration":2562,"isOffset":false,"isSlot":false,"src":"3079:4:25","valueSize":1}],"flags":["memory-safe"],"id":2568,"nodeType":"InlineAssembly","src":"3030:63:25"}]},"documentation":{"id":2560,"nodeType":"StructuredDocumentation","src":"2848:85:25","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":2570,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"2947:13:25","nodeType":"FunctionDefinition","parameters":{"id":2563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2562,"mutability":"mutable","name":"slot","nameLocation":"2969:4:25","nodeType":"VariableDeclaration","scope":2570,"src":"2961:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2561,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2960:14:25"},"returnParameters":{"id":2567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2566,"mutability":"mutable","name":"r","nameLocation":"3017:1:25","nodeType":"VariableDeclaration","scope":2570,"src":"2998:20:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$2509_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":2565,"nodeType":"UserDefinedTypeName","pathNode":{"id":2564,"name":"Int256Slot","nameLocations":["2998:10:25"],"nodeType":"IdentifierPath","referencedDeclaration":2509,"src":"2998:10:25"},"referencedDeclaration":2509,"src":"2998:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$2509_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"2997:22:25"},"scope":2615,"src":"2938:161:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2580,"nodeType":"Block","src":"3277:79:25","statements":[{"AST":{"nativeSrc":"3312:38:25","nodeType":"YulBlock","src":"3312:38:25","statements":[{"nativeSrc":"3326:14:25","nodeType":"YulAssignment","src":"3326:14:25","value":{"name":"slot","nativeSrc":"3336:4:25","nodeType":"YulIdentifier","src":"3336:4:25"},"variableNames":[{"name":"r.slot","nativeSrc":"3326:6:25","nodeType":"YulIdentifier","src":"3326:6:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2577,"isOffset":false,"isSlot":true,"src":"3326:6:25","suffix":"slot","valueSize":1},{"declaration":2573,"isOffset":false,"isSlot":false,"src":"3336:4:25","valueSize":1}],"flags":["memory-safe"],"id":2579,"nodeType":"InlineAssembly","src":"3287:63:25"}]},"documentation":{"id":2571,"nodeType":"StructuredDocumentation","src":"3105:85:25","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":2581,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3204:13:25","nodeType":"FunctionDefinition","parameters":{"id":2574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2573,"mutability":"mutable","name":"slot","nameLocation":"3226:4:25","nodeType":"VariableDeclaration","scope":2581,"src":"3218:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2572,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:14:25"},"returnParameters":{"id":2578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2577,"mutability":"mutable","name":"r","nameLocation":"3274:1:25","nodeType":"VariableDeclaration","scope":2581,"src":"3255:20:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2512_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2576,"nodeType":"UserDefinedTypeName","pathNode":{"id":2575,"name":"StringSlot","nameLocations":["3255:10:25"],"nodeType":"IdentifierPath","referencedDeclaration":2512,"src":"3255:10:25"},"referencedDeclaration":2512,"src":"3255:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2512_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3254:22:25"},"scope":2615,"src":"3195:161:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2591,"nodeType":"Block","src":"3558:85:25","statements":[{"AST":{"nativeSrc":"3593:44:25","nodeType":"YulBlock","src":"3593:44:25","statements":[{"nativeSrc":"3607:20:25","nodeType":"YulAssignment","src":"3607:20:25","value":{"name":"store.slot","nativeSrc":"3617:10:25","nodeType":"YulIdentifier","src":"3617:10:25"},"variableNames":[{"name":"r.slot","nativeSrc":"3607:6:25","nodeType":"YulIdentifier","src":"3607:6:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2588,"isOffset":false,"isSlot":true,"src":"3607:6:25","suffix":"slot","valueSize":1},{"declaration":2584,"isOffset":false,"isSlot":true,"src":"3617:10:25","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":2590,"nodeType":"InlineAssembly","src":"3568:69:25"}]},"documentation":{"id":2582,"nodeType":"StructuredDocumentation","src":"3362:101:25","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":2592,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3477:13:25","nodeType":"FunctionDefinition","parameters":{"id":2585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2584,"mutability":"mutable","name":"store","nameLocation":"3506:5:25","nodeType":"VariableDeclaration","scope":2592,"src":"3491:20:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2583,"name":"string","nodeType":"ElementaryTypeName","src":"3491:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3490:22:25"},"returnParameters":{"id":2589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2588,"mutability":"mutable","name":"r","nameLocation":"3555:1:25","nodeType":"VariableDeclaration","scope":2592,"src":"3536:20:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2512_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2587,"nodeType":"UserDefinedTypeName","pathNode":{"id":2586,"name":"StringSlot","nameLocations":["3536:10:25"],"nodeType":"IdentifierPath","referencedDeclaration":2512,"src":"3536:10:25"},"referencedDeclaration":2512,"src":"3536:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2512_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3535:22:25"},"scope":2615,"src":"3468:175:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2602,"nodeType":"Block","src":"3818:79:25","statements":[{"AST":{"nativeSrc":"3853:38:25","nodeType":"YulBlock","src":"3853:38:25","statements":[{"nativeSrc":"3867:14:25","nodeType":"YulAssignment","src":"3867:14:25","value":{"name":"slot","nativeSrc":"3877:4:25","nodeType":"YulIdentifier","src":"3877:4:25"},"variableNames":[{"name":"r.slot","nativeSrc":"3867:6:25","nodeType":"YulIdentifier","src":"3867:6:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2599,"isOffset":false,"isSlot":true,"src":"3867:6:25","suffix":"slot","valueSize":1},{"declaration":2595,"isOffset":false,"isSlot":false,"src":"3877:4:25","valueSize":1}],"flags":["memory-safe"],"id":2601,"nodeType":"InlineAssembly","src":"3828:63:25"}]},"documentation":{"id":2593,"nodeType":"StructuredDocumentation","src":"3649:84:25","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":2603,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3747:12:25","nodeType":"FunctionDefinition","parameters":{"id":2596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2595,"mutability":"mutable","name":"slot","nameLocation":"3768:4:25","nodeType":"VariableDeclaration","scope":2603,"src":"3760:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2594,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3760:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3759:14:25"},"returnParameters":{"id":2600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2599,"mutability":"mutable","name":"r","nameLocation":"3815:1:25","nodeType":"VariableDeclaration","scope":2603,"src":"3797:19:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2515_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2598,"nodeType":"UserDefinedTypeName","pathNode":{"id":2597,"name":"BytesSlot","nameLocations":["3797:9:25"],"nodeType":"IdentifierPath","referencedDeclaration":2515,"src":"3797:9:25"},"referencedDeclaration":2515,"src":"3797:9:25","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2515_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3796:21:25"},"scope":2615,"src":"3738:159:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2613,"nodeType":"Block","src":"4094:85:25","statements":[{"AST":{"nativeSrc":"4129:44:25","nodeType":"YulBlock","src":"4129:44:25","statements":[{"nativeSrc":"4143:20:25","nodeType":"YulAssignment","src":"4143:20:25","value":{"name":"store.slot","nativeSrc":"4153:10:25","nodeType":"YulIdentifier","src":"4153:10:25"},"variableNames":[{"name":"r.slot","nativeSrc":"4143:6:25","nodeType":"YulIdentifier","src":"4143:6:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2610,"isOffset":false,"isSlot":true,"src":"4143:6:25","suffix":"slot","valueSize":1},{"declaration":2606,"isOffset":false,"isSlot":true,"src":"4153:10:25","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":2612,"nodeType":"InlineAssembly","src":"4104:69:25"}]},"documentation":{"id":2604,"nodeType":"StructuredDocumentation","src":"3903:99:25","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":2614,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4016:12:25","nodeType":"FunctionDefinition","parameters":{"id":2607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2606,"mutability":"mutable","name":"store","nameLocation":"4043:5:25","nodeType":"VariableDeclaration","scope":2614,"src":"4029:19:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2605,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:21:25"},"returnParameters":{"id":2611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2610,"mutability":"mutable","name":"r","nameLocation":"4091:1:25","nodeType":"VariableDeclaration","scope":2614,"src":"4073:19:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2515_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2609,"nodeType":"UserDefinedTypeName","pathNode":{"id":2608,"name":"BytesSlot","nameLocations":["4073:9:25"],"nodeType":"IdentifierPath","referencedDeclaration":2515,"src":"4073:9:25"},"referencedDeclaration":2515,"src":"4073:9:25","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2515_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4072:21:25"},"scope":2615,"src":"4007:172:25","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2616,"src":"1407:2774:25","usedErrors":[],"usedEvents":[]}],"src":"193:3989:25"},"id":25},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[6335],"SafeCast":[8100],"SignedMath":[8244],"Strings":[4017]},"id":4018,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2617,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:26"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2619,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4018,"sourceUnit":6336,"src":"127:37:26","symbolAliases":[{"foreign":{"id":2618,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6335,"src":"135:4:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":2621,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4018,"sourceUnit":8101,"src":"165:45:26","symbolAliases":[{"foreign":{"id":2620,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8100,"src":"173:8:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":2623,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4018,"sourceUnit":8245,"src":"211:49:26","symbolAliases":[{"foreign":{"id":2622,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8244,"src":"219:10:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":2624,"nodeType":"StructuredDocumentation","src":"262:34:26","text":" @dev String operations."},"fullyImplemented":true,"id":4017,"linearizedBaseContracts":[4017],"name":"Strings","nameLocation":"305:7:26","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2626,"libraryName":{"id":2625,"name":"SafeCast","nameLocations":["325:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":8100,"src":"325:8:26"},"nodeType":"UsingForDirective","src":"319:21:26"},{"constant":true,"id":2629,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:26","nodeType":"VariableDeclaration","scope":4017,"src":"346:56:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2627,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:26","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2632,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:26","nodeType":"VariableDeclaration","scope":4017,"src":"408:42:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2630,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:26","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"constant":true,"id":2668,"mutability":"constant","name":"SPECIAL_CHARS_LOOKUP","nameLocation":"481:20:26","nodeType":"VariableDeclaration","scope":4017,"src":"456:302:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2633,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"},"id":2667,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"},"id":2662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"},"id":2657,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"},"id":2652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"},"id":2647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"},"id":2642,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":2636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"513:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783038","id":2635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"518:4:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"513:9:26","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":2637,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"512:11:26","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"id":2640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"552:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783039","id":2639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:4:26","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"552:9:26","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}}],"id":2641,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"551:11:26","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}},"src":"512:50:26","typeDescriptions":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"id":2645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"585:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783061","id":2644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"590:4:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"585:9:26","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}}],"id":2646,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"584:11:26","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}},"src":"512:83:26","typeDescriptions":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"},"id":2650,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"622:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783063","id":2649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"627:4:26","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"622:9:26","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}}],"id":2651,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"621:11:26","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}},"src":"512:120:26","typeDescriptions":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"id":2655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"661:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783064","id":2654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"666:4:26","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"661:9:26","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}}],"id":2656,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"660:11:26","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}},"src":"512:159:26","typeDescriptions":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"},"id":2660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"706:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783232","id":2659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"711:4:26","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"706:9:26","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}}],"id":2661,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"705:11:26","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}},"src":"512:204:26","typeDescriptions":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"},"id":2665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"748:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783563","id":2664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:4:26","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"748:9:26","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}}],"id":2666,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"747:11:26","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}},"src":"512:246:26","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"}},"visibility":"private"},{"documentation":{"id":2669,"nodeType":"StructuredDocumentation","src":"778:81:26","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":2675,"name":"StringsInsufficientHexLength","nameLocation":"870:28:26","nodeType":"ErrorDefinition","parameters":{"id":2674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2671,"mutability":"mutable","name":"value","nameLocation":"907:5:26","nodeType":"VariableDeclaration","scope":2675,"src":"899:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2670,"name":"uint256","nodeType":"ElementaryTypeName","src":"899:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2673,"mutability":"mutable","name":"length","nameLocation":"922:6:26","nodeType":"VariableDeclaration","scope":2675,"src":"914:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2672,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"898:31:26"},"src":"864:66:26"},{"documentation":{"id":2676,"nodeType":"StructuredDocumentation","src":"936:108:26","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":2678,"name":"StringsInvalidChar","nameLocation":"1055:18:26","nodeType":"ErrorDefinition","parameters":{"id":2677,"nodeType":"ParameterList","parameters":[],"src":"1073:2:26"},"src":"1049:27:26"},{"documentation":{"id":2679,"nodeType":"StructuredDocumentation","src":"1082:84:26","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":2681,"name":"StringsInvalidAddressFormat","nameLocation":"1177:27:26","nodeType":"ErrorDefinition","parameters":{"id":2680,"nodeType":"ParameterList","parameters":[],"src":"1204:2:26"},"src":"1171:36:26"},{"body":{"id":2728,"nodeType":"Block","src":"1379:563:26","statements":[{"id":2727,"nodeType":"UncheckedBlock","src":"1389:547:26","statements":[{"assignments":[2690],"declarations":[{"constant":false,"id":2690,"mutability":"mutable","name":"length","nameLocation":"1421:6:26","nodeType":"VariableDeclaration","scope":2727,"src":"1413:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2689,"name":"uint256","nodeType":"ElementaryTypeName","src":"1413:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2697,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2693,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2684,"src":"1441:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2691,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6335,"src":"1430:4:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6335_$","typeString":"type(library Math)"}},"id":2692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:5:26","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":6167,"src":"1430:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1430:17:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1450:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1430:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1413:38:26"},{"assignments":[2699],"declarations":[{"constant":false,"id":2699,"mutability":"mutable","name":"buffer","nameLocation":"1479:6:26","nodeType":"VariableDeclaration","scope":2727,"src":"1465:20:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2698,"name":"string","nodeType":"ElementaryTypeName","src":"1465:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2704,"initialValue":{"arguments":[{"id":2702,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2690,"src":"1499:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2701,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1488:10:26","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2700,"name":"string","nodeType":"ElementaryTypeName","src":"1492:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:18:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1465:41:26"},{"assignments":[2706],"declarations":[{"constant":false,"id":2706,"mutability":"mutable","name":"ptr","nameLocation":"1528:3:26","nodeType":"VariableDeclaration","scope":2727,"src":"1520:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2705,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2707,"nodeType":"VariableDeclarationStatement","src":"1520:11:26"},{"AST":{"nativeSrc":"1570:69:26","nodeType":"YulBlock","src":"1570:69:26","statements":[{"nativeSrc":"1588:37:26","nodeType":"YulAssignment","src":"1588:37:26","value":{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"1603:6:26","nodeType":"YulIdentifier","src":"1603:6:26"},{"kind":"number","nativeSrc":"1611:4:26","nodeType":"YulLiteral","src":"1611:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1599:3:26","nodeType":"YulIdentifier","src":"1599:3:26"},"nativeSrc":"1599:17:26","nodeType":"YulFunctionCall","src":"1599:17:26"},{"name":"length","nativeSrc":"1618:6:26","nodeType":"YulIdentifier","src":"1618:6:26"}],"functionName":{"name":"add","nativeSrc":"1595:3:26","nodeType":"YulIdentifier","src":"1595:3:26"},"nativeSrc":"1595:30:26","nodeType":"YulFunctionCall","src":"1595:30:26"},"variableNames":[{"name":"ptr","nativeSrc":"1588:3:26","nodeType":"YulIdentifier","src":"1588:3:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2699,"isOffset":false,"isSlot":false,"src":"1603:6:26","valueSize":1},{"declaration":2690,"isOffset":false,"isSlot":false,"src":"1618:6:26","valueSize":1},{"declaration":2706,"isOffset":false,"isSlot":false,"src":"1588:3:26","valueSize":1}],"flags":["memory-safe"],"id":2708,"nodeType":"InlineAssembly","src":"1545:94:26"},{"body":{"id":2723,"nodeType":"Block","src":"1665:234:26","statements":[{"expression":{"id":2711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1683:5:26","subExpression":{"id":2710,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2706,"src":"1683:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2712,"nodeType":"ExpressionStatement","src":"1683:5:26"},{"AST":{"nativeSrc":"1731:86:26","nodeType":"YulBlock","src":"1731:86:26","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1761:3:26","nodeType":"YulIdentifier","src":"1761:3:26"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1775:5:26","nodeType":"YulIdentifier","src":"1775:5:26"},{"kind":"number","nativeSrc":"1782:2:26","nodeType":"YulLiteral","src":"1782:2:26","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1771:3:26","nodeType":"YulIdentifier","src":"1771:3:26"},"nativeSrc":"1771:14:26","nodeType":"YulFunctionCall","src":"1771:14:26"},{"name":"HEX_DIGITS","nativeSrc":"1787:10:26","nodeType":"YulIdentifier","src":"1787:10:26"}],"functionName":{"name":"byte","nativeSrc":"1766:4:26","nodeType":"YulIdentifier","src":"1766:4:26"},"nativeSrc":"1766:32:26","nodeType":"YulFunctionCall","src":"1766:32:26"}],"functionName":{"name":"mstore8","nativeSrc":"1753:7:26","nodeType":"YulIdentifier","src":"1753:7:26"},"nativeSrc":"1753:46:26","nodeType":"YulFunctionCall","src":"1753:46:26"},"nativeSrc":"1753:46:26","nodeType":"YulExpressionStatement","src":"1753:46:26"}]},"evmVersion":"paris","externalReferences":[{"declaration":2629,"isOffset":false,"isSlot":false,"src":"1787:10:26","valueSize":1},{"declaration":2706,"isOffset":false,"isSlot":false,"src":"1761:3:26","valueSize":1},{"declaration":2684,"isOffset":false,"isSlot":false,"src":"1775:5:26","valueSize":1}],"flags":["memory-safe"],"id":2713,"nodeType":"InlineAssembly","src":"1706:111:26"},{"expression":{"id":2716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2714,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2684,"src":"1834:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1843:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1834:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2717,"nodeType":"ExpressionStatement","src":"1834:11:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2718,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2684,"src":"1867:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1876:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1867:10:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2722,"nodeType":"IfStatement","src":"1863:21:26","trueBody":{"id":2721,"nodeType":"Break","src":"1879:5:26"}}]},"condition":{"hexValue":"74727565","id":2709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1659:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2724,"nodeType":"WhileStatement","src":"1652:247:26"},{"expression":{"id":2725,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2699,"src":"1919:6:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2688,"id":2726,"nodeType":"Return","src":"1912:13:26"}]}]},"documentation":{"id":2682,"nodeType":"StructuredDocumentation","src":"1213:90:26","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2729,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1317:8:26","nodeType":"FunctionDefinition","parameters":{"id":2685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2684,"mutability":"mutable","name":"value","nameLocation":"1334:5:26","nodeType":"VariableDeclaration","scope":2729,"src":"1326:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2683,"name":"uint256","nodeType":"ElementaryTypeName","src":"1326:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1325:15:26"},"returnParameters":{"id":2688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2687,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2729,"src":"1364:13:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2686,"name":"string","nodeType":"ElementaryTypeName","src":"1364:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1363:15:26"},"scope":4017,"src":"1308:634:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2754,"nodeType":"Block","src":"2118:92:26","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2740,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"2149:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2157:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2149:9:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2167:2:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2149:20:26","trueExpression":{"hexValue":"2d","id":2743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2161:3:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":2749,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"2195:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":2747,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8244,"src":"2180:10:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$8244_$","typeString":"type(library SignedMath)"}},"id":2748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2191:3:26","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":8243,"src":"2180:14:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":2750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2180:21:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2746,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2729,"src":"2171:8:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2171:31:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2738,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2135:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2737,"name":"string","nodeType":"ElementaryTypeName","src":"2135:6:26","typeDescriptions":{}}},"id":2739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2142:6:26","memberName":"concat","nodeType":"MemberAccess","src":"2135:13:26","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":2752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2135:68:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2736,"id":2753,"nodeType":"Return","src":"2128:75:26"}]},"documentation":{"id":2730,"nodeType":"StructuredDocumentation","src":"1948:89:26","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":2755,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"2051:14:26","nodeType":"FunctionDefinition","parameters":{"id":2733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2732,"mutability":"mutable","name":"value","nameLocation":"2073:5:26","nodeType":"VariableDeclaration","scope":2755,"src":"2066:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2731,"name":"int256","nodeType":"ElementaryTypeName","src":"2066:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2065:14:26"},"returnParameters":{"id":2736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2735,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2755,"src":"2103:13:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2734,"name":"string","nodeType":"ElementaryTypeName","src":"2103:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2102:15:26"},"scope":4017,"src":"2042:168:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2774,"nodeType":"Block","src":"2389:100:26","statements":[{"id":2773,"nodeType":"UncheckedBlock","src":"2399:84:26","statements":[{"expression":{"arguments":[{"id":2764,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2758,"src":"2442:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2767,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2758,"src":"2461:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2765,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6335,"src":"2449:4:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6335_$","typeString":"type(library Math)"}},"id":2766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2454:6:26","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":6278,"src":"2449:11:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2449:18:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2470:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2449:22:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2763,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2775,2858,2878],"referencedDeclaration":2858,"src":"2430:11:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2430:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2762,"id":2772,"nodeType":"Return","src":"2423:49:26"}]}]},"documentation":{"id":2756,"nodeType":"StructuredDocumentation","src":"2216:94:26","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2775,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2324:11:26","nodeType":"FunctionDefinition","parameters":{"id":2759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2758,"mutability":"mutable","name":"value","nameLocation":"2344:5:26","nodeType":"VariableDeclaration","scope":2775,"src":"2336:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2757,"name":"uint256","nodeType":"ElementaryTypeName","src":"2336:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2335:15:26"},"returnParameters":{"id":2762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2761,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2775,"src":"2374:13:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2760,"name":"string","nodeType":"ElementaryTypeName","src":"2374:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2373:15:26"},"scope":4017,"src":"2315:174:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2857,"nodeType":"Block","src":"2702:435:26","statements":[{"assignments":[2786],"declarations":[{"constant":false,"id":2786,"mutability":"mutable","name":"localValue","nameLocation":"2720:10:26","nodeType":"VariableDeclaration","scope":2857,"src":"2712:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2785,"name":"uint256","nodeType":"ElementaryTypeName","src":"2712:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2788,"initialValue":{"id":2787,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2778,"src":"2733:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2712:26:26"},{"assignments":[2790],"declarations":[{"constant":false,"id":2790,"mutability":"mutable","name":"buffer","nameLocation":"2761:6:26","nodeType":"VariableDeclaration","scope":2857,"src":"2748:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2789,"name":"bytes","nodeType":"ElementaryTypeName","src":"2748:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2799,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2780:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2794,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"2784:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2780:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2793:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2780:14:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2792,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2770:9:26","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2791,"name":"bytes","nodeType":"ElementaryTypeName","src":"2774:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2770:25:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2748:47:26"},{"expression":{"id":2804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2800,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2790,"src":"2805:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2802,"indexExpression":{"hexValue":"30","id":2801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2812:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2805:9:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2817:3:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2805:15:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2805,"nodeType":"ExpressionStatement","src":"2805:15:26"},{"expression":{"id":2810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2806,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2790,"src":"2830:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2808,"indexExpression":{"hexValue":"31","id":2807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2837:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2830:9:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2842:3:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2830:15:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2811,"nodeType":"ExpressionStatement","src":"2830:15:26"},{"body":{"id":2840,"nodeType":"Block","src":"2900:95:26","statements":[{"expression":{"id":2834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2826,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2790,"src":"2914:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2828,"indexExpression":{"id":2827,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"2921:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2914:9:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2829,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2629,"src":"2926:10:26","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2833,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2830,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2786,"src":"2937:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2950:3:26","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2937:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2926:28:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2914:40:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2835,"nodeType":"ExpressionStatement","src":"2914:40:26"},{"expression":{"id":2838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2836,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2786,"src":"2968:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2983:1:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2968:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2839,"nodeType":"ExpressionStatement","src":"2968:16:26"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2820,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"2888:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2892:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2888:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2841,"initializationExpression":{"assignments":[2813],"declarations":[{"constant":false,"id":2813,"mutability":"mutable","name":"i","nameLocation":"2868:1:26","nodeType":"VariableDeclaration","scope":2841,"src":"2860:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2812,"name":"uint256","nodeType":"ElementaryTypeName","src":"2860:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2819,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2872:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2815,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"2876:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2872:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2885:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2872:14:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2860:26:26"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":2824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2895:3:26","subExpression":{"id":2823,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"2897:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2825,"nodeType":"ExpressionStatement","src":"2895:3:26"},"nodeType":"ForStatement","src":"2855:140:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2842,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2786,"src":"3008:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3022:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3008:15:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2851,"nodeType":"IfStatement","src":"3004:96:26","trueBody":{"id":2850,"nodeType":"Block","src":"3025:75:26","statements":[{"errorCall":{"arguments":[{"id":2846,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2778,"src":"3075:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2847,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"3082:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2845,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2675,"src":"3046:28:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":2848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3046:43:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2849,"nodeType":"RevertStatement","src":"3039:50:26"}]}},{"expression":{"arguments":[{"id":2854,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2790,"src":"3123:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2853,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3116:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2852,"name":"string","nodeType":"ElementaryTypeName","src":"3116:6:26","typeDescriptions":{}}},"id":2855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3116:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2784,"id":2856,"nodeType":"Return","src":"3109:21:26"}]},"documentation":{"id":2776,"nodeType":"StructuredDocumentation","src":"2495:112:26","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2858,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2621:11:26","nodeType":"FunctionDefinition","parameters":{"id":2781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2778,"mutability":"mutable","name":"value","nameLocation":"2641:5:26","nodeType":"VariableDeclaration","scope":2858,"src":"2633:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2777,"name":"uint256","nodeType":"ElementaryTypeName","src":"2633:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2780,"mutability":"mutable","name":"length","nameLocation":"2656:6:26","nodeType":"VariableDeclaration","scope":2858,"src":"2648:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2779,"name":"uint256","nodeType":"ElementaryTypeName","src":"2648:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2632:31:26"},"returnParameters":{"id":2784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2783,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2858,"src":"2687:13:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2782,"name":"string","nodeType":"ElementaryTypeName","src":"2687:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2686:15:26"},"scope":4017,"src":"2612:525:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2877,"nodeType":"Block","src":"3369:75:26","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2871,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"3414:4:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3406:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2869,"name":"uint160","nodeType":"ElementaryTypeName","src":"3406:7:26","typeDescriptions":{}}},"id":2872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3406:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2868,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3398:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2867,"name":"uint256","nodeType":"ElementaryTypeName","src":"3398:7:26","typeDescriptions":{}}},"id":2873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3398:22:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2874,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2632,"src":"3422:14:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2866,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2775,2858,2878],"referencedDeclaration":2858,"src":"3386:11:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:51:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2865,"id":2876,"nodeType":"Return","src":"3379:58:26"}]},"documentation":{"id":2859,"nodeType":"StructuredDocumentation","src":"3143:148:26","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":2878,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"3305:11:26","nodeType":"FunctionDefinition","parameters":{"id":2862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2861,"mutability":"mutable","name":"addr","nameLocation":"3325:4:26","nodeType":"VariableDeclaration","scope":2878,"src":"3317:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2860,"name":"address","nodeType":"ElementaryTypeName","src":"3317:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3316:14:26"},"returnParameters":{"id":2865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2864,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2878,"src":"3354:13:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2863,"name":"string","nodeType":"ElementaryTypeName","src":"3354:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3353:15:26"},"scope":4017,"src":"3296:148:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2942,"nodeType":"Block","src":"3701:642:26","statements":[{"assignments":[2887],"declarations":[{"constant":false,"id":2887,"mutability":"mutable","name":"buffer","nameLocation":"3724:6:26","nodeType":"VariableDeclaration","scope":2942,"src":"3711:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2886,"name":"bytes","nodeType":"ElementaryTypeName","src":"3711:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2894,"initialValue":{"arguments":[{"arguments":[{"id":2891,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2881,"src":"3751:4:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2890,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2775,2858,2878],"referencedDeclaration":2878,"src":"3739:11:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":2892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:17:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2889,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3733:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2888,"name":"bytes","nodeType":"ElementaryTypeName","src":"3733:5:26","typeDescriptions":{}}},"id":2893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:24:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3711:46:26"},{"assignments":[2896],"declarations":[{"constant":false,"id":2896,"mutability":"mutable","name":"hashValue","nameLocation":"3850:9:26","nodeType":"VariableDeclaration","scope":2942,"src":"3842:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2895,"name":"uint256","nodeType":"ElementaryTypeName","src":"3842:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2897,"nodeType":"VariableDeclarationStatement","src":"3842:17:26"},{"AST":{"nativeSrc":"3894:78:26","nodeType":"YulBlock","src":"3894:78:26","statements":[{"nativeSrc":"3908:54:26","nodeType":"YulAssignment","src":"3908:54:26","value":{"arguments":[{"kind":"number","nativeSrc":"3925:2:26","nodeType":"YulLiteral","src":"3925:2:26","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"3943:6:26","nodeType":"YulIdentifier","src":"3943:6:26"},{"kind":"number","nativeSrc":"3951:4:26","nodeType":"YulLiteral","src":"3951:4:26","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3939:3:26","nodeType":"YulIdentifier","src":"3939:3:26"},"nativeSrc":"3939:17:26","nodeType":"YulFunctionCall","src":"3939:17:26"},{"kind":"number","nativeSrc":"3958:2:26","nodeType":"YulLiteral","src":"3958:2:26","type":"","value":"40"}],"functionName":{"name":"keccak256","nativeSrc":"3929:9:26","nodeType":"YulIdentifier","src":"3929:9:26"},"nativeSrc":"3929:32:26","nodeType":"YulFunctionCall","src":"3929:32:26"}],"functionName":{"name":"shr","nativeSrc":"3921:3:26","nodeType":"YulIdentifier","src":"3921:3:26"},"nativeSrc":"3921:41:26","nodeType":"YulFunctionCall","src":"3921:41:26"},"variableNames":[{"name":"hashValue","nativeSrc":"3908:9:26","nodeType":"YulIdentifier","src":"3908:9:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2887,"isOffset":false,"isSlot":false,"src":"3943:6:26","valueSize":1},{"declaration":2896,"isOffset":false,"isSlot":false,"src":"3908:9:26","valueSize":1}],"flags":["memory-safe"],"id":2898,"nodeType":"InlineAssembly","src":"3869:103:26"},{"body":{"id":2935,"nodeType":"Block","src":"4015:291:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2909,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"4121:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4133:3:26","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"4121:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":2912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4139:1:26","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"4121:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":2916,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2887,"src":"4150:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2918,"indexExpression":{"id":2917,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"4157:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4150:9:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2915,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4144:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2914,"name":"uint8","nodeType":"ElementaryTypeName","src":"4144:5:26","typeDescriptions":{}}},"id":2919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4144:16:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":2920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4163:2:26","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"4144:21:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4121:44:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2930,"nodeType":"IfStatement","src":"4117:150:26","trueBody":{"id":2929,"nodeType":"Block","src":"4167:100:26","statements":[{"expression":{"id":2927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2923,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2887,"src":"4235:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2925,"indexExpression":{"id":2924,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"4242:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4235:9:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":2926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4248:4:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"4235:17:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2928,"nodeType":"ExpressionStatement","src":"4235:17:26"}]}},{"expression":{"id":2933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2931,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"4280:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4294:1:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4280:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2934,"nodeType":"ExpressionStatement","src":"4280:15:26"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2903,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"4003:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4007:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4003:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2936,"initializationExpression":{"assignments":[2900],"declarations":[{"constant":false,"id":2900,"mutability":"mutable","name":"i","nameLocation":"3995:1:26","nodeType":"VariableDeclaration","scope":2936,"src":"3987:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2899,"name":"uint256","nodeType":"ElementaryTypeName","src":"3987:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2902,"initialValue":{"hexValue":"3431","id":2901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3999:2:26","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3987:14:26"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":2907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"4010:3:26","subExpression":{"id":2906,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"4012:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2908,"nodeType":"ExpressionStatement","src":"4010:3:26"},"nodeType":"ForStatement","src":"3982:324:26"},{"expression":{"arguments":[{"id":2939,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2887,"src":"4329:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2938,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4322:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2937,"name":"string","nodeType":"ElementaryTypeName","src":"4322:6:26","typeDescriptions":{}}},"id":2940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4322:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2885,"id":2941,"nodeType":"Return","src":"4315:21:26"}]},"documentation":{"id":2879,"nodeType":"StructuredDocumentation","src":"3450:165:26","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":2943,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3629:19:26","nodeType":"FunctionDefinition","parameters":{"id":2882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2881,"mutability":"mutable","name":"addr","nameLocation":"3657:4:26","nodeType":"VariableDeclaration","scope":2943,"src":"3649:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2880,"name":"address","nodeType":"ElementaryTypeName","src":"3649:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3648:14:26"},"returnParameters":{"id":2885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2884,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2943,"src":"3686:13:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2883,"name":"string","nodeType":"ElementaryTypeName","src":"3686:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3685:15:26"},"scope":4017,"src":"3620:723:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2979,"nodeType":"Block","src":"4498:104:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2955,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2946,"src":"4521:1:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2954,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4515:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2953,"name":"bytes","nodeType":"ElementaryTypeName","src":"4515:5:26","typeDescriptions":{}}},"id":2956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4515:8:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4524:6:26","memberName":"length","nodeType":"MemberAccess","src":"4515:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2960,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2948,"src":"4540:1:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4534:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2958,"name":"bytes","nodeType":"ElementaryTypeName","src":"4534:5:26","typeDescriptions":{}}},"id":2961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4534:8:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4543:6:26","memberName":"length","nodeType":"MemberAccess","src":"4534:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4515:34:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2967,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2946,"src":"4569:1:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4563:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2965,"name":"bytes","nodeType":"ElementaryTypeName","src":"4563:5:26","typeDescriptions":{}}},"id":2968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4563:8:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2964,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4553:9:26","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4553:19:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2973,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2948,"src":"4592:1:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4586:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2971,"name":"bytes","nodeType":"ElementaryTypeName","src":"4586:5:26","typeDescriptions":{}}},"id":2974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4586:8:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2970,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4576:9:26","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4576:19:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4553:42:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4515:80:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2952,"id":2978,"nodeType":"Return","src":"4508:87:26"}]},"documentation":{"id":2944,"nodeType":"StructuredDocumentation","src":"4349:66:26","text":" @dev Returns true if the two strings are equal."},"id":2980,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4429:5:26","nodeType":"FunctionDefinition","parameters":{"id":2949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2946,"mutability":"mutable","name":"a","nameLocation":"4449:1:26","nodeType":"VariableDeclaration","scope":2980,"src":"4435:15:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2945,"name":"string","nodeType":"ElementaryTypeName","src":"4435:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2948,"mutability":"mutable","name":"b","nameLocation":"4466:1:26","nodeType":"VariableDeclaration","scope":2980,"src":"4452:15:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2947,"name":"string","nodeType":"ElementaryTypeName","src":"4452:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4434:34:26"},"returnParameters":{"id":2952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2951,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2980,"src":"4492:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2950,"name":"bool","nodeType":"ElementaryTypeName","src":"4492:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4491:6:26"},"scope":4017,"src":"4420:182:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2998,"nodeType":"Block","src":"4899:64:26","statements":[{"expression":{"arguments":[{"id":2989,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2983,"src":"4926:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4933:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2993,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2983,"src":"4942:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4936:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2991,"name":"bytes","nodeType":"ElementaryTypeName","src":"4936:5:26","typeDescriptions":{}}},"id":2994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4936:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4949:6:26","memberName":"length","nodeType":"MemberAccess","src":"4936:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2988,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[2999,3030],"referencedDeclaration":3030,"src":"4916:9:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":2996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4916:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2987,"id":2997,"nodeType":"Return","src":"4909:47:26"}]},"documentation":{"id":2981,"nodeType":"StructuredDocumentation","src":"4608:214:26","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":2999,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4836:9:26","nodeType":"FunctionDefinition","parameters":{"id":2984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2983,"mutability":"mutable","name":"input","nameLocation":"4860:5:26","nodeType":"VariableDeclaration","scope":2999,"src":"4846:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2982,"name":"string","nodeType":"ElementaryTypeName","src":"4846:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4845:21:26"},"returnParameters":{"id":2987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2986,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2999,"src":"4890:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2985,"name":"uint256","nodeType":"ElementaryTypeName","src":"4890:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4889:9:26"},"scope":4017,"src":"4827:136:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3029,"nodeType":"Block","src":"5368:153:26","statements":[{"assignments":[3012,3014],"declarations":[{"constant":false,"id":3012,"mutability":"mutable","name":"success","nameLocation":"5384:7:26","nodeType":"VariableDeclaration","scope":3029,"src":"5379:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3011,"name":"bool","nodeType":"ElementaryTypeName","src":"5379:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3014,"mutability":"mutable","name":"value","nameLocation":"5401:5:26","nodeType":"VariableDeclaration","scope":3029,"src":"5393:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3013,"name":"uint256","nodeType":"ElementaryTypeName","src":"5393:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3020,"initialValue":{"arguments":[{"id":3016,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"5423:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3017,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"5430:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3018,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3006,"src":"5437:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3015,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[3051,3088],"referencedDeclaration":3088,"src":"5410:12:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5410:31:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5378:63:26"},{"condition":{"id":3022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5455:8:26","subExpression":{"id":3021,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3012,"src":"5456:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3026,"nodeType":"IfStatement","src":"5451:41:26","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3023,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"5472:18:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":3024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5472:20:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3025,"nodeType":"RevertStatement","src":"5465:27:26"}},{"expression":{"id":3027,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"5509:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3010,"id":3028,"nodeType":"Return","src":"5502:12:26"}]},"documentation":{"id":3000,"nodeType":"StructuredDocumentation","src":"4969:294:26","text":" @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":3030,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"5277:9:26","nodeType":"FunctionDefinition","parameters":{"id":3007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3002,"mutability":"mutable","name":"input","nameLocation":"5301:5:26","nodeType":"VariableDeclaration","scope":3030,"src":"5287:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3001,"name":"string","nodeType":"ElementaryTypeName","src":"5287:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3004,"mutability":"mutable","name":"begin","nameLocation":"5316:5:26","nodeType":"VariableDeclaration","scope":3030,"src":"5308:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3003,"name":"uint256","nodeType":"ElementaryTypeName","src":"5308:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3006,"mutability":"mutable","name":"end","nameLocation":"5331:3:26","nodeType":"VariableDeclaration","scope":3030,"src":"5323:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3005,"name":"uint256","nodeType":"ElementaryTypeName","src":"5323:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5286:49:26"},"returnParameters":{"id":3010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3009,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3030,"src":"5359:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3008,"name":"uint256","nodeType":"ElementaryTypeName","src":"5359:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5358:9:26"},"scope":4017,"src":"5268:253:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3050,"nodeType":"Block","src":"5842:83:26","statements":[{"expression":{"arguments":[{"id":3041,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3033,"src":"5888:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5895:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3045,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3033,"src":"5904:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3043,"name":"bytes","nodeType":"ElementaryTypeName","src":"5898:5:26","typeDescriptions":{}}},"id":3046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5911:6:26","memberName":"length","nodeType":"MemberAccess","src":"5898:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3040,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3158,"src":"5859:28:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5859:59:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3039,"id":3049,"nodeType":"Return","src":"5852:66:26"}]},"documentation":{"id":3031,"nodeType":"StructuredDocumentation","src":"5527:215:26","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3051,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5756:12:26","nodeType":"FunctionDefinition","parameters":{"id":3034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3033,"mutability":"mutable","name":"input","nameLocation":"5783:5:26","nodeType":"VariableDeclaration","scope":3051,"src":"5769:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3032,"name":"string","nodeType":"ElementaryTypeName","src":"5769:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5768:21:26"},"returnParameters":{"id":3039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3036,"mutability":"mutable","name":"success","nameLocation":"5818:7:26","nodeType":"VariableDeclaration","scope":3051,"src":"5813:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3035,"name":"bool","nodeType":"ElementaryTypeName","src":"5813:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3038,"mutability":"mutable","name":"value","nameLocation":"5835:5:26","nodeType":"VariableDeclaration","scope":3051,"src":"5827:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3037,"name":"uint256","nodeType":"ElementaryTypeName","src":"5827:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5812:29:26"},"scope":4017,"src":"5747:178:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3087,"nodeType":"Block","src":"6327:144:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3065,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"6341:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3068,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"6353:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3067,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6347:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3066,"name":"bytes","nodeType":"ElementaryTypeName","src":"6347:5:26","typeDescriptions":{}}},"id":3069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6347:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6360:6:26","memberName":"length","nodeType":"MemberAccess","src":"6347:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6341:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3072,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3056,"src":"6370:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3073,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"6378:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6370:11:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6341:40:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3080,"nodeType":"IfStatement","src":"6337:63:26","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6391:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6398:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3078,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6390:10:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3064,"id":3079,"nodeType":"Return","src":"6383:17:26"}},{"expression":{"arguments":[{"id":3082,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"6446:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3083,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3056,"src":"6453:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3084,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"6460:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3081,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3158,"src":"6417:28:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6417:47:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3064,"id":3086,"nodeType":"Return","src":"6410:54:26"}]},"documentation":{"id":3052,"nodeType":"StructuredDocumentation","src":"5931:238:26","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3088,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"6183:12:26","nodeType":"FunctionDefinition","parameters":{"id":3059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3054,"mutability":"mutable","name":"input","nameLocation":"6219:5:26","nodeType":"VariableDeclaration","scope":3088,"src":"6205:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3053,"name":"string","nodeType":"ElementaryTypeName","src":"6205:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3056,"mutability":"mutable","name":"begin","nameLocation":"6242:5:26","nodeType":"VariableDeclaration","scope":3088,"src":"6234:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3055,"name":"uint256","nodeType":"ElementaryTypeName","src":"6234:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3058,"mutability":"mutable","name":"end","nameLocation":"6265:3:26","nodeType":"VariableDeclaration","scope":3088,"src":"6257:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3057,"name":"uint256","nodeType":"ElementaryTypeName","src":"6257:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6195:79:26"},"returnParameters":{"id":3064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3061,"mutability":"mutable","name":"success","nameLocation":"6303:7:26","nodeType":"VariableDeclaration","scope":3088,"src":"6298:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3060,"name":"bool","nodeType":"ElementaryTypeName","src":"6298:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3063,"mutability":"mutable","name":"value","nameLocation":"6320:5:26","nodeType":"VariableDeclaration","scope":3088,"src":"6312:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3062,"name":"uint256","nodeType":"ElementaryTypeName","src":"6312:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6297:29:26"},"scope":4017,"src":"6174:297:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3157,"nodeType":"Block","src":"6874:347:26","statements":[{"assignments":[3103],"declarations":[{"constant":false,"id":3103,"mutability":"mutable","name":"buffer","nameLocation":"6897:6:26","nodeType":"VariableDeclaration","scope":3157,"src":"6884:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3102,"name":"bytes","nodeType":"ElementaryTypeName","src":"6884:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3108,"initialValue":{"arguments":[{"id":3106,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3091,"src":"6912:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3105,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6906:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3104,"name":"bytes","nodeType":"ElementaryTypeName","src":"6906:5:26","typeDescriptions":{}}},"id":3107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6906:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6884:34:26"},{"assignments":[3110],"declarations":[{"constant":false,"id":3110,"mutability":"mutable","name":"result","nameLocation":"6937:6:26","nodeType":"VariableDeclaration","scope":3157,"src":"6929:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3109,"name":"uint256","nodeType":"ElementaryTypeName","src":"6929:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3112,"initialValue":{"hexValue":"30","id":3111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6946:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6929:18:26"},{"body":{"id":3151,"nodeType":"Block","src":"6995:189:26","statements":[{"assignments":[3124],"declarations":[{"constant":false,"id":3124,"mutability":"mutable","name":"chr","nameLocation":"7015:3:26","nodeType":"VariableDeclaration","scope":3151,"src":"7009:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3123,"name":"uint8","nodeType":"ElementaryTypeName","src":"7009:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3134,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":3129,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3103,"src":"7064:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3130,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"7072:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3128,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"7041:22:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7041:33:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3127,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7034:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3126,"name":"bytes1","nodeType":"ElementaryTypeName","src":"7034:6:26","typeDescriptions":{}}},"id":3132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7034:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3125,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3838,"src":"7021:12:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":3133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7021:55:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"7009:67:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3135,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3124,"src":"7094:3:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":3136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7100:1:26","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"7094:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3142,"nodeType":"IfStatement","src":"7090:30:26","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7111:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7118:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3140,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7110:10:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3101,"id":3141,"nodeType":"Return","src":"7103:17:26"}},{"expression":{"id":3145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3143,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3110,"src":"7134:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":3144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7144:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"7134:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3146,"nodeType":"ExpressionStatement","src":"7134:12:26"},{"expression":{"id":3149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3147,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3110,"src":"7160:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3148,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3124,"src":"7170:3:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7160:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3150,"nodeType":"ExpressionStatement","src":"7160:13:26"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3117,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"6981:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3118,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"6985:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6981:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3152,"initializationExpression":{"assignments":[3114],"declarations":[{"constant":false,"id":3114,"mutability":"mutable","name":"i","nameLocation":"6970:1:26","nodeType":"VariableDeclaration","scope":3152,"src":"6962:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3113,"name":"uint256","nodeType":"ElementaryTypeName","src":"6962:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3116,"initialValue":{"id":3115,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3093,"src":"6974:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6962:17:26"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6990:3:26","subExpression":{"id":3120,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"6992:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3122,"nodeType":"ExpressionStatement","src":"6990:3:26"},"nodeType":"ForStatement","src":"6957:227:26"},{"expression":{"components":[{"hexValue":"74727565","id":3153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7201:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3154,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3110,"src":"7207:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3155,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7200:14:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3101,"id":3156,"nodeType":"Return","src":"7193:21:26"}]},"documentation":{"id":3089,"nodeType":"StructuredDocumentation","src":"6477:224:26","text":" @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":3158,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6715:28:26","nodeType":"FunctionDefinition","parameters":{"id":3096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3091,"mutability":"mutable","name":"input","nameLocation":"6767:5:26","nodeType":"VariableDeclaration","scope":3158,"src":"6753:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3090,"name":"string","nodeType":"ElementaryTypeName","src":"6753:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3093,"mutability":"mutable","name":"begin","nameLocation":"6790:5:26","nodeType":"VariableDeclaration","scope":3158,"src":"6782:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3092,"name":"uint256","nodeType":"ElementaryTypeName","src":"6782:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3095,"mutability":"mutable","name":"end","nameLocation":"6813:3:26","nodeType":"VariableDeclaration","scope":3158,"src":"6805:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3094,"name":"uint256","nodeType":"ElementaryTypeName","src":"6805:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6743:79:26"},"returnParameters":{"id":3101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3098,"mutability":"mutable","name":"success","nameLocation":"6850:7:26","nodeType":"VariableDeclaration","scope":3158,"src":"6845:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3097,"name":"bool","nodeType":"ElementaryTypeName","src":"6845:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3100,"mutability":"mutable","name":"value","nameLocation":"6867:5:26","nodeType":"VariableDeclaration","scope":3158,"src":"6859:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3099,"name":"uint256","nodeType":"ElementaryTypeName","src":"6859:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6844:29:26"},"scope":4017,"src":"6706:515:26","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3176,"nodeType":"Block","src":"7518:63:26","statements":[{"expression":{"arguments":[{"id":3167,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3161,"src":"7544:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7551:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3171,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3161,"src":"7560:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7554:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3169,"name":"bytes","nodeType":"ElementaryTypeName","src":"7554:5:26","typeDescriptions":{}}},"id":3172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7554:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7567:6:26","memberName":"length","nodeType":"MemberAccess","src":"7554:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3166,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[3177,3208],"referencedDeclaration":3208,"src":"7535:8:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":3174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7535:39:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3165,"id":3175,"nodeType":"Return","src":"7528:46:26"}]},"documentation":{"id":3159,"nodeType":"StructuredDocumentation","src":"7227:216:26","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":3177,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7457:8:26","nodeType":"FunctionDefinition","parameters":{"id":3162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3161,"mutability":"mutable","name":"input","nameLocation":"7480:5:26","nodeType":"VariableDeclaration","scope":3177,"src":"7466:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3160,"name":"string","nodeType":"ElementaryTypeName","src":"7466:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7465:21:26"},"returnParameters":{"id":3165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3164,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3177,"src":"7510:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3163,"name":"int256","nodeType":"ElementaryTypeName","src":"7510:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7509:8:26"},"scope":4017,"src":"7448:133:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3207,"nodeType":"Block","src":"7986:151:26","statements":[{"assignments":[3190,3192],"declarations":[{"constant":false,"id":3190,"mutability":"mutable","name":"success","nameLocation":"8002:7:26","nodeType":"VariableDeclaration","scope":3207,"src":"7997:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3189,"name":"bool","nodeType":"ElementaryTypeName","src":"7997:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3192,"mutability":"mutable","name":"value","nameLocation":"8018:5:26","nodeType":"VariableDeclaration","scope":3207,"src":"8011:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3191,"name":"int256","nodeType":"ElementaryTypeName","src":"8011:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3198,"initialValue":{"arguments":[{"id":3194,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3180,"src":"8039:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3195,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"8046:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3196,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3184,"src":"8053:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3193,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[3229,3271],"referencedDeclaration":3271,"src":"8027:11:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":3197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8027:30:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7996:61:26"},{"condition":{"id":3200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8071:8:26","subExpression":{"id":3199,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3190,"src":"8072:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3204,"nodeType":"IfStatement","src":"8067:41:26","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3201,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"8088:18:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":3202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8088:20:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3203,"nodeType":"RevertStatement","src":"8081:27:26"}},{"expression":{"id":3205,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"8125:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3188,"id":3206,"nodeType":"Return","src":"8118:12:26"}]},"documentation":{"id":3178,"nodeType":"StructuredDocumentation","src":"7587:296:26","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":3208,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7897:8:26","nodeType":"FunctionDefinition","parameters":{"id":3185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3180,"mutability":"mutable","name":"input","nameLocation":"7920:5:26","nodeType":"VariableDeclaration","scope":3208,"src":"7906:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3179,"name":"string","nodeType":"ElementaryTypeName","src":"7906:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3182,"mutability":"mutable","name":"begin","nameLocation":"7935:5:26","nodeType":"VariableDeclaration","scope":3208,"src":"7927:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3181,"name":"uint256","nodeType":"ElementaryTypeName","src":"7927:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3184,"mutability":"mutable","name":"end","nameLocation":"7950:3:26","nodeType":"VariableDeclaration","scope":3208,"src":"7942:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3183,"name":"uint256","nodeType":"ElementaryTypeName","src":"7942:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7905:49:26"},"returnParameters":{"id":3188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3187,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3208,"src":"7978:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3186,"name":"int256","nodeType":"ElementaryTypeName","src":"7978:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7977:8:26"},"scope":4017,"src":"7888:249:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3228,"nodeType":"Block","src":"8528:82:26","statements":[{"expression":{"arguments":[{"id":3219,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3211,"src":"8573:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8580:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3223,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3211,"src":"8589:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8583:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3221,"name":"bytes","nodeType":"ElementaryTypeName","src":"8583:5:26","typeDescriptions":{}}},"id":3224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8583:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8596:6:26","memberName":"length","nodeType":"MemberAccess","src":"8583:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3218,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3392,"src":"8545:27:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":3226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8545:58:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":3217,"id":3227,"nodeType":"Return","src":"8538:65:26"}]},"documentation":{"id":3209,"nodeType":"StructuredDocumentation","src":"8143:287:26","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":3229,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8444:11:26","nodeType":"FunctionDefinition","parameters":{"id":3212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3211,"mutability":"mutable","name":"input","nameLocation":"8470:5:26","nodeType":"VariableDeclaration","scope":3229,"src":"8456:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3210,"name":"string","nodeType":"ElementaryTypeName","src":"8456:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8455:21:26"},"returnParameters":{"id":3217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3214,"mutability":"mutable","name":"success","nameLocation":"8505:7:26","nodeType":"VariableDeclaration","scope":3229,"src":"8500:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3213,"name":"bool","nodeType":"ElementaryTypeName","src":"8500:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3216,"mutability":"mutable","name":"value","nameLocation":"8521:5:26","nodeType":"VariableDeclaration","scope":3229,"src":"8514:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3215,"name":"int256","nodeType":"ElementaryTypeName","src":"8514:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8499:28:26"},"scope":4017,"src":"8435:175:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":3234,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8641:14:26","nodeType":"VariableDeclaration","scope":4017,"src":"8616:50:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3230,"name":"uint256","nodeType":"ElementaryTypeName","src":"8616:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":3233,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8658:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":3232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:3:26","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8658:8:26","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":3270,"nodeType":"Block","src":"9132:143:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3248,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3241,"src":"9146:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3251,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3237,"src":"9158:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9152:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3249,"name":"bytes","nodeType":"ElementaryTypeName","src":"9152:5:26","typeDescriptions":{}}},"id":3252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9152:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9165:6:26","memberName":"length","nodeType":"MemberAccess","src":"9152:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9146:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3255,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3239,"src":"9175:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3256,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3241,"src":"9183:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9175:11:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9146:40:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3263,"nodeType":"IfStatement","src":"9142:63:26","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9196:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9203:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3261,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9195:10:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3247,"id":3262,"nodeType":"Return","src":"9188:17:26"}},{"expression":{"arguments":[{"id":3265,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3237,"src":"9250:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3266,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3239,"src":"9257:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3267,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3241,"src":"9264:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3264,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3392,"src":"9222:27:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":3268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9222:46:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":3247,"id":3269,"nodeType":"Return","src":"9215:53:26"}]},"documentation":{"id":3235,"nodeType":"StructuredDocumentation","src":"8673:303:26","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":3271,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8990:11:26","nodeType":"FunctionDefinition","parameters":{"id":3242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3237,"mutability":"mutable","name":"input","nameLocation":"9025:5:26","nodeType":"VariableDeclaration","scope":3271,"src":"9011:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3236,"name":"string","nodeType":"ElementaryTypeName","src":"9011:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3239,"mutability":"mutable","name":"begin","nameLocation":"9048:5:26","nodeType":"VariableDeclaration","scope":3271,"src":"9040:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3238,"name":"uint256","nodeType":"ElementaryTypeName","src":"9040:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3241,"mutability":"mutable","name":"end","nameLocation":"9071:3:26","nodeType":"VariableDeclaration","scope":3271,"src":"9063:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3240,"name":"uint256","nodeType":"ElementaryTypeName","src":"9063:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9001:79:26"},"returnParameters":{"id":3247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3244,"mutability":"mutable","name":"success","nameLocation":"9109:7:26","nodeType":"VariableDeclaration","scope":3271,"src":"9104:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3243,"name":"bool","nodeType":"ElementaryTypeName","src":"9104:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3246,"mutability":"mutable","name":"value","nameLocation":"9125:5:26","nodeType":"VariableDeclaration","scope":3271,"src":"9118:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3245,"name":"int256","nodeType":"ElementaryTypeName","src":"9118:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9103:28:26"},"scope":4017,"src":"8981:294:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3391,"nodeType":"Block","src":"9675:812:26","statements":[{"assignments":[3286],"declarations":[{"constant":false,"id":3286,"mutability":"mutable","name":"buffer","nameLocation":"9698:6:26","nodeType":"VariableDeclaration","scope":3391,"src":"9685:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3285,"name":"bytes","nodeType":"ElementaryTypeName","src":"9685:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3291,"initialValue":{"arguments":[{"id":3289,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3274,"src":"9713:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9707:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3287,"name":"bytes","nodeType":"ElementaryTypeName","src":"9707:5:26","typeDescriptions":{}}},"id":3290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9707:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9685:34:26"},{"assignments":[3293],"declarations":[{"constant":false,"id":3293,"mutability":"mutable","name":"sign","nameLocation":"9783:4:26","nodeType":"VariableDeclaration","scope":3391,"src":"9776:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3292,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9776:6:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":3309,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3294,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3276,"src":"9790:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3295,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"9799:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9790:12:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":3304,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"9847:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3305,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3276,"src":"9855:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3303,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"9824:22:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9824:37:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3302,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9817:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3301,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9817:6:26","typeDescriptions":{}}},"id":3307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9817:45:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9790:72:26","trueExpression":{"arguments":[{"hexValue":"30","id":3299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9812:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9805:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3297,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9805:6:26","typeDescriptions":{}}},"id":3300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9805:9:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9776:86:26"},{"assignments":[3311],"declarations":[{"constant":false,"id":3311,"mutability":"mutable","name":"positiveSign","nameLocation":"9948:12:26","nodeType":"VariableDeclaration","scope":3391,"src":"9943:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3310,"name":"bool","nodeType":"ElementaryTypeName","src":"9943:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3318,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3312,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"9963:4:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":3315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9978:3:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":3314,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9971:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3313,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9971:6:26","typeDescriptions":{}}},"id":3316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9971:11:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9963:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9943:39:26"},{"assignments":[3320],"declarations":[{"constant":false,"id":3320,"mutability":"mutable","name":"negativeSign","nameLocation":"9997:12:26","nodeType":"VariableDeclaration","scope":3391,"src":"9992:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3319,"name":"bool","nodeType":"ElementaryTypeName","src":"9992:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3327,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3321,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"10012:4:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":3324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10027:3:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":3323,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10020:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3322,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10020:6:26","typeDescriptions":{}}},"id":3325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10020:11:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"10012:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9992:39:26"},{"assignments":[3329],"declarations":[{"constant":false,"id":3329,"mutability":"mutable","name":"offset","nameLocation":"10049:6:26","nodeType":"VariableDeclaration","scope":3391,"src":"10041:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3328,"name":"uint256","nodeType":"ElementaryTypeName","src":"10041:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3336,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3330,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3311,"src":"10059:12:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":3331,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3320,"src":"10075:12:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10059:28:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3333,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10058:30:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10089:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8099,"src":"10058:37:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":3335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10058:39:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10041:56:26"},{"assignments":[3338,3340],"declarations":[{"constant":false,"id":3338,"mutability":"mutable","name":"absSuccess","nameLocation":"10114:10:26","nodeType":"VariableDeclaration","scope":3391,"src":"10109:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3337,"name":"bool","nodeType":"ElementaryTypeName","src":"10109:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3340,"mutability":"mutable","name":"absValue","nameLocation":"10134:8:26","nodeType":"VariableDeclaration","scope":3391,"src":"10126:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3339,"name":"uint256","nodeType":"ElementaryTypeName","src":"10126:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3348,"initialValue":{"arguments":[{"id":3342,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3274,"src":"10159:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3343,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3276,"src":"10166:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3344,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3329,"src":"10174:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10166:14:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3346,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"10182:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3341,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[3051,3088],"referencedDeclaration":3088,"src":"10146:12:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10146:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10108:78:26"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3349,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3338,"src":"10201:10:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3350,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3340,"src":"10215:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3351,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3234,"src":"10226:14:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10215:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10201:39:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3369,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3338,"src":"10343:10:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":3370,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3320,"src":"10357:12:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10343:26:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3372,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3340,"src":"10373:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3373,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3234,"src":"10385:14:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10373:26:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10343:56:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10471:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10478:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3387,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10470:10:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3284,"id":3388,"nodeType":"Return","src":"10463:17:26"},"id":3389,"nodeType":"IfStatement","src":"10339:141:26","trueBody":{"id":3384,"nodeType":"Block","src":"10401:56:26","statements":[{"expression":{"components":[{"hexValue":"74727565","id":3376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10423:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":3379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10434:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3378,"name":"int256","nodeType":"ElementaryTypeName","src":"10434:6:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":3377,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10429:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10429:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":3381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10442:3:26","memberName":"min","nodeType":"MemberAccess","src":"10429:16:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3382,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10422:24:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":3284,"id":3383,"nodeType":"Return","src":"10415:31:26"}]}},"id":3390,"nodeType":"IfStatement","src":"10197:283:26","trueBody":{"id":3368,"nodeType":"Block","src":"10242:91:26","statements":[{"expression":{"components":[{"hexValue":"74727565","id":3354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10264:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":3355,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3320,"src":"10270:12:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":3363,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3340,"src":"10312:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10305:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3361,"name":"int256","nodeType":"ElementaryTypeName","src":"10305:6:26","typeDescriptions":{}}},"id":3364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10305:16:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10270:51:26","trueExpression":{"id":3360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10285:17:26","subExpression":{"arguments":[{"id":3358,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3340,"src":"10293:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10286:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3356,"name":"int256","nodeType":"ElementaryTypeName","src":"10286:6:26","typeDescriptions":{}}},"id":3359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10286:16:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3366,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10263:59:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":3284,"id":3367,"nodeType":"Return","src":"10256:66:26"}]}}]},"documentation":{"id":3272,"nodeType":"StructuredDocumentation","src":"9281:223:26","text":" @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":3392,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9518:27:26","nodeType":"FunctionDefinition","parameters":{"id":3279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3274,"mutability":"mutable","name":"input","nameLocation":"9569:5:26","nodeType":"VariableDeclaration","scope":3392,"src":"9555:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3273,"name":"string","nodeType":"ElementaryTypeName","src":"9555:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3276,"mutability":"mutable","name":"begin","nameLocation":"9592:5:26","nodeType":"VariableDeclaration","scope":3392,"src":"9584:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3275,"name":"uint256","nodeType":"ElementaryTypeName","src":"9584:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3278,"mutability":"mutable","name":"end","nameLocation":"9615:3:26","nodeType":"VariableDeclaration","scope":3392,"src":"9607:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3277,"name":"uint256","nodeType":"ElementaryTypeName","src":"9607:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9545:79:26"},"returnParameters":{"id":3284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3281,"mutability":"mutable","name":"success","nameLocation":"9652:7:26","nodeType":"VariableDeclaration","scope":3392,"src":"9647:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3280,"name":"bool","nodeType":"ElementaryTypeName","src":"9647:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3283,"mutability":"mutable","name":"value","nameLocation":"9668:5:26","nodeType":"VariableDeclaration","scope":3392,"src":"9661:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3282,"name":"int256","nodeType":"ElementaryTypeName","src":"9661:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9646:28:26"},"scope":4017,"src":"9509:978:26","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3410,"nodeType":"Block","src":"10832:67:26","statements":[{"expression":{"arguments":[{"id":3401,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3395,"src":"10862:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10869:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3405,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3395,"src":"10878:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3404,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10872:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3403,"name":"bytes","nodeType":"ElementaryTypeName","src":"10872:5:26","typeDescriptions":{}}},"id":3406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10872:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10885:6:26","memberName":"length","nodeType":"MemberAccess","src":"10872:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3400,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[3411,3442],"referencedDeclaration":3442,"src":"10849:12:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":3408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10849:43:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3399,"id":3409,"nodeType":"Return","src":"10842:50:26"}]},"documentation":{"id":3393,"nodeType":"StructuredDocumentation","src":"10493:259:26","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":3411,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10766:12:26","nodeType":"FunctionDefinition","parameters":{"id":3396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3395,"mutability":"mutable","name":"input","nameLocation":"10793:5:26","nodeType":"VariableDeclaration","scope":3411,"src":"10779:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3394,"name":"string","nodeType":"ElementaryTypeName","src":"10779:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10778:21:26"},"returnParameters":{"id":3399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3398,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3411,"src":"10823:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3397,"name":"uint256","nodeType":"ElementaryTypeName","src":"10823:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10822:9:26"},"scope":4017,"src":"10757:142:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3441,"nodeType":"Block","src":"11320:156:26","statements":[{"assignments":[3424,3426],"declarations":[{"constant":false,"id":3424,"mutability":"mutable","name":"success","nameLocation":"11336:7:26","nodeType":"VariableDeclaration","scope":3441,"src":"11331:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3423,"name":"bool","nodeType":"ElementaryTypeName","src":"11331:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3426,"mutability":"mutable","name":"value","nameLocation":"11353:5:26","nodeType":"VariableDeclaration","scope":3441,"src":"11345:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3425,"name":"uint256","nodeType":"ElementaryTypeName","src":"11345:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3432,"initialValue":{"arguments":[{"id":3428,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3414,"src":"11378:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3429,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3416,"src":"11385:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3430,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3418,"src":"11392:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3427,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[3463,3500],"referencedDeclaration":3500,"src":"11362:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11362:34:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11330:66:26"},{"condition":{"id":3434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11410:8:26","subExpression":{"id":3433,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3424,"src":"11411:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3438,"nodeType":"IfStatement","src":"11406:41:26","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3435,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"11427:18:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":3436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11427:20:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3437,"nodeType":"RevertStatement","src":"11420:27:26"}},{"expression":{"id":3439,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3426,"src":"11464:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3422,"id":3440,"nodeType":"Return","src":"11457:12:26"}]},"documentation":{"id":3412,"nodeType":"StructuredDocumentation","src":"10905:307:26","text":" @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":3442,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"11226:12:26","nodeType":"FunctionDefinition","parameters":{"id":3419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3414,"mutability":"mutable","name":"input","nameLocation":"11253:5:26","nodeType":"VariableDeclaration","scope":3442,"src":"11239:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3413,"name":"string","nodeType":"ElementaryTypeName","src":"11239:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3416,"mutability":"mutable","name":"begin","nameLocation":"11268:5:26","nodeType":"VariableDeclaration","scope":3442,"src":"11260:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3415,"name":"uint256","nodeType":"ElementaryTypeName","src":"11260:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3418,"mutability":"mutable","name":"end","nameLocation":"11283:3:26","nodeType":"VariableDeclaration","scope":3442,"src":"11275:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3417,"name":"uint256","nodeType":"ElementaryTypeName","src":"11275:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11238:49:26"},"returnParameters":{"id":3422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3421,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3442,"src":"11311:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3420,"name":"uint256","nodeType":"ElementaryTypeName","src":"11311:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11310:9:26"},"scope":4017,"src":"11217:259:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3462,"nodeType":"Block","src":"11803:86:26","statements":[{"expression":{"arguments":[{"id":3453,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3445,"src":"11852:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11859:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3457,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3445,"src":"11868:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3456,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11862:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3455,"name":"bytes","nodeType":"ElementaryTypeName","src":"11862:5:26","typeDescriptions":{}}},"id":3458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11862:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11875:6:26","memberName":"length","nodeType":"MemberAccess","src":"11862:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3452,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"11820:31:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11820:62:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3451,"id":3461,"nodeType":"Return","src":"11813:69:26"}]},"documentation":{"id":3443,"nodeType":"StructuredDocumentation","src":"11482:218:26","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3463,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11714:15:26","nodeType":"FunctionDefinition","parameters":{"id":3446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3445,"mutability":"mutable","name":"input","nameLocation":"11744:5:26","nodeType":"VariableDeclaration","scope":3463,"src":"11730:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3444,"name":"string","nodeType":"ElementaryTypeName","src":"11730:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11729:21:26"},"returnParameters":{"id":3451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3448,"mutability":"mutable","name":"success","nameLocation":"11779:7:26","nodeType":"VariableDeclaration","scope":3463,"src":"11774:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3447,"name":"bool","nodeType":"ElementaryTypeName","src":"11774:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3450,"mutability":"mutable","name":"value","nameLocation":"11796:5:26","nodeType":"VariableDeclaration","scope":3463,"src":"11788:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3449,"name":"uint256","nodeType":"ElementaryTypeName","src":"11788:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11773:29:26"},"scope":4017,"src":"11705:184:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3499,"nodeType":"Block","src":"12297:147:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3477,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3470,"src":"12311:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3480,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3466,"src":"12323:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12317:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3478,"name":"bytes","nodeType":"ElementaryTypeName","src":"12317:5:26","typeDescriptions":{}}},"id":3481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12317:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12330:6:26","memberName":"length","nodeType":"MemberAccess","src":"12317:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12311:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3484,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3468,"src":"12340:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3485,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3470,"src":"12348:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12340:11:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12311:40:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3492,"nodeType":"IfStatement","src":"12307:63:26","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12361:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12368:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3490,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12360:10:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3476,"id":3491,"nodeType":"Return","src":"12353:17:26"}},{"expression":{"arguments":[{"id":3494,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3466,"src":"12419:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3495,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3468,"src":"12426:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3496,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3470,"src":"12433:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3493,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"12387:31:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12387:50:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3476,"id":3498,"nodeType":"Return","src":"12380:57:26"}]},"documentation":{"id":3464,"nodeType":"StructuredDocumentation","src":"11895:241:26","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3500,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"12150:15:26","nodeType":"FunctionDefinition","parameters":{"id":3471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3466,"mutability":"mutable","name":"input","nameLocation":"12189:5:26","nodeType":"VariableDeclaration","scope":3500,"src":"12175:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3465,"name":"string","nodeType":"ElementaryTypeName","src":"12175:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3468,"mutability":"mutable","name":"begin","nameLocation":"12212:5:26","nodeType":"VariableDeclaration","scope":3500,"src":"12204:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3467,"name":"uint256","nodeType":"ElementaryTypeName","src":"12204:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3470,"mutability":"mutable","name":"end","nameLocation":"12235:3:26","nodeType":"VariableDeclaration","scope":3500,"src":"12227:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3469,"name":"uint256","nodeType":"ElementaryTypeName","src":"12227:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12165:79:26"},"returnParameters":{"id":3476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3473,"mutability":"mutable","name":"success","nameLocation":"12273:7:26","nodeType":"VariableDeclaration","scope":3500,"src":"12268:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3472,"name":"bool","nodeType":"ElementaryTypeName","src":"12268:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3475,"mutability":"mutable","name":"value","nameLocation":"12290:5:26","nodeType":"VariableDeclaration","scope":3500,"src":"12282:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3474,"name":"uint256","nodeType":"ElementaryTypeName","src":"12282:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12267:29:26"},"scope":4017,"src":"12141:303:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3602,"nodeType":"Block","src":"12853:881:26","statements":[{"assignments":[3515],"declarations":[{"constant":false,"id":3515,"mutability":"mutable","name":"buffer","nameLocation":"12876:6:26","nodeType":"VariableDeclaration","scope":3602,"src":"12863:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3514,"name":"bytes","nodeType":"ElementaryTypeName","src":"12863:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3520,"initialValue":{"arguments":[{"id":3518,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3503,"src":"12891:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12885:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3516,"name":"bytes","nodeType":"ElementaryTypeName","src":"12885:5:26","typeDescriptions":{}}},"id":3519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12885:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12863:34:26"},{"assignments":[3522],"declarations":[{"constant":false,"id":3522,"mutability":"mutable","name":"hasPrefix","nameLocation":"12950:9:26","nodeType":"VariableDeclaration","scope":3602,"src":"12945:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3521,"name":"bool","nodeType":"ElementaryTypeName","src":"12945:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3542,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3523,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3507,"src":"12963:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3524,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3505,"src":"12969:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12977:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12969:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12963:15:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3528,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12962:17:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":3540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3532,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3515,"src":"13013:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3533,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3505,"src":"13021:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3531,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"12990:22:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12990:37:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12983:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3529,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12983:6:26","typeDescriptions":{}}},"id":3535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12983:45:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":3538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13039:4:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":3537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13032:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3536,"name":"bytes2","nodeType":"ElementaryTypeName","src":"13032:6:26","typeDescriptions":{}}},"id":3539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13032:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12983:61:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12962:82:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12945:99:26"},{"assignments":[3544],"declarations":[{"constant":false,"id":3544,"mutability":"mutable","name":"offset","nameLocation":"13133:6:26","nodeType":"VariableDeclaration","scope":3602,"src":"13125:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3543,"name":"uint256","nodeType":"ElementaryTypeName","src":"13125:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3550,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3545,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3522,"src":"13142:9:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13152:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8099,"src":"13142:16:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":3547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13142:18:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":3548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13163:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13142:22:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13125:39:26"},{"assignments":[3552],"declarations":[{"constant":false,"id":3552,"mutability":"mutable","name":"result","nameLocation":"13183:6:26","nodeType":"VariableDeclaration","scope":3602,"src":"13175:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3551,"name":"uint256","nodeType":"ElementaryTypeName","src":"13175:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3554,"initialValue":{"hexValue":"30","id":3553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13192:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13175:18:26"},{"body":{"id":3596,"nodeType":"Block","src":"13250:447:26","statements":[{"assignments":[3568],"declarations":[{"constant":false,"id":3568,"mutability":"mutable","name":"chr","nameLocation":"13270:3:26","nodeType":"VariableDeclaration","scope":3596,"src":"13264:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3567,"name":"uint8","nodeType":"ElementaryTypeName","src":"13264:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3578,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":3573,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3515,"src":"13319:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3574,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3556,"src":"13327:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3572,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"13296:22:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13296:33:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3571,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13289:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3570,"name":"bytes1","nodeType":"ElementaryTypeName","src":"13289:6:26","typeDescriptions":{}}},"id":3576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13289:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3569,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3838,"src":"13276:12:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":3577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13276:55:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13264:67:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3579,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"13349:3:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":3580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13355:2:26","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"13349:8:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3586,"nodeType":"IfStatement","src":"13345:31:26","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13367:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13374:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3584,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13366:10:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3513,"id":3585,"nodeType":"Return","src":"13359:17:26"}},{"expression":{"id":3589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3587,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"13390:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":3588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13400:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13390:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3590,"nodeType":"ExpressionStatement","src":"13390:12:26"},{"id":3595,"nodeType":"UncheckedBlock","src":"13416:271:26","statements":[{"expression":{"id":3593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3591,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"13659:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3592,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"13669:3:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13659:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3594,"nodeType":"ExpressionStatement","src":"13659:13:26"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3561,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3556,"src":"13236:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3562,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3507,"src":"13240:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13236:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3597,"initializationExpression":{"assignments":[3556],"declarations":[{"constant":false,"id":3556,"mutability":"mutable","name":"i","nameLocation":"13216:1:26","nodeType":"VariableDeclaration","scope":3597,"src":"13208:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3555,"name":"uint256","nodeType":"ElementaryTypeName","src":"13208:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3560,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3557,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3505,"src":"13220:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3558,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3544,"src":"13228:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13220:14:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13208:26:26"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13245:3:26","subExpression":{"id":3564,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3556,"src":"13247:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3566,"nodeType":"ExpressionStatement","src":"13245:3:26"},"nodeType":"ForStatement","src":"13203:494:26"},{"expression":{"components":[{"hexValue":"74727565","id":3598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13714:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3599,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"13720:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3600,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13713:14:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3513,"id":3601,"nodeType":"Return","src":"13706:21:26"}]},"documentation":{"id":3501,"nodeType":"StructuredDocumentation","src":"12450:227:26","text":" @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":3603,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12691:31:26","nodeType":"FunctionDefinition","parameters":{"id":3508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3503,"mutability":"mutable","name":"input","nameLocation":"12746:5:26","nodeType":"VariableDeclaration","scope":3603,"src":"12732:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3502,"name":"string","nodeType":"ElementaryTypeName","src":"12732:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3505,"mutability":"mutable","name":"begin","nameLocation":"12769:5:26","nodeType":"VariableDeclaration","scope":3603,"src":"12761:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3504,"name":"uint256","nodeType":"ElementaryTypeName","src":"12761:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3507,"mutability":"mutable","name":"end","nameLocation":"12792:3:26","nodeType":"VariableDeclaration","scope":3603,"src":"12784:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3506,"name":"uint256","nodeType":"ElementaryTypeName","src":"12784:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12722:79:26"},"returnParameters":{"id":3513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3510,"mutability":"mutable","name":"success","nameLocation":"12829:7:26","nodeType":"VariableDeclaration","scope":3603,"src":"12824:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3509,"name":"bool","nodeType":"ElementaryTypeName","src":"12824:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3512,"mutability":"mutable","name":"value","nameLocation":"12846:5:26","nodeType":"VariableDeclaration","scope":3603,"src":"12838:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3511,"name":"uint256","nodeType":"ElementaryTypeName","src":"12838:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12823:29:26"},"scope":4017,"src":"12682:1052:26","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3621,"nodeType":"Block","src":"14032:67:26","statements":[{"expression":{"arguments":[{"id":3612,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3606,"src":"14062:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14069:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3616,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3606,"src":"14078:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14072:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3614,"name":"bytes","nodeType":"ElementaryTypeName","src":"14072:5:26","typeDescriptions":{}}},"id":3617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14072:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14085:6:26","memberName":"length","nodeType":"MemberAccess","src":"14072:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3611,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[3622,3653],"referencedDeclaration":3653,"src":"14049:12:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":3619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14049:43:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3610,"id":3620,"nodeType":"Return","src":"14042:50:26"}]},"documentation":{"id":3604,"nodeType":"StructuredDocumentation","src":"13740:212:26","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":3622,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13966:12:26","nodeType":"FunctionDefinition","parameters":{"id":3607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3606,"mutability":"mutable","name":"input","nameLocation":"13993:5:26","nodeType":"VariableDeclaration","scope":3622,"src":"13979:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3605,"name":"string","nodeType":"ElementaryTypeName","src":"13979:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13978:21:26"},"returnParameters":{"id":3610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3609,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3622,"src":"14023:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3608,"name":"address","nodeType":"ElementaryTypeName","src":"14023:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14022:9:26"},"scope":4017,"src":"13957:142:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3652,"nodeType":"Block","src":"14472:165:26","statements":[{"assignments":[3635,3637],"declarations":[{"constant":false,"id":3635,"mutability":"mutable","name":"success","nameLocation":"14488:7:26","nodeType":"VariableDeclaration","scope":3652,"src":"14483:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3634,"name":"bool","nodeType":"ElementaryTypeName","src":"14483:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3637,"mutability":"mutable","name":"value","nameLocation":"14505:5:26","nodeType":"VariableDeclaration","scope":3652,"src":"14497:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3636,"name":"address","nodeType":"ElementaryTypeName","src":"14497:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3643,"initialValue":{"arguments":[{"id":3639,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3625,"src":"14530:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3640,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3627,"src":"14537:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3641,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3629,"src":"14544:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3638,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[3674,3778],"referencedDeclaration":3778,"src":"14514:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":3642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14514:34:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14482:66:26"},{"condition":{"id":3645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14562:8:26","subExpression":{"id":3644,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3635,"src":"14563:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3649,"nodeType":"IfStatement","src":"14558:50:26","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3646,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"14579:27:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":3647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14579:29:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3648,"nodeType":"RevertStatement","src":"14572:36:26"}},{"expression":{"id":3650,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3637,"src":"14625:5:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3633,"id":3651,"nodeType":"Return","src":"14618:12:26"}]},"documentation":{"id":3623,"nodeType":"StructuredDocumentation","src":"14105:259:26","text":" @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":3653,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"14378:12:26","nodeType":"FunctionDefinition","parameters":{"id":3630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3625,"mutability":"mutable","name":"input","nameLocation":"14405:5:26","nodeType":"VariableDeclaration","scope":3653,"src":"14391:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3624,"name":"string","nodeType":"ElementaryTypeName","src":"14391:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3627,"mutability":"mutable","name":"begin","nameLocation":"14420:5:26","nodeType":"VariableDeclaration","scope":3653,"src":"14412:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3626,"name":"uint256","nodeType":"ElementaryTypeName","src":"14412:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3629,"mutability":"mutable","name":"end","nameLocation":"14435:3:26","nodeType":"VariableDeclaration","scope":3653,"src":"14427:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3628,"name":"uint256","nodeType":"ElementaryTypeName","src":"14427:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14390:49:26"},"returnParameters":{"id":3633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3632,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3653,"src":"14463:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3631,"name":"address","nodeType":"ElementaryTypeName","src":"14463:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14462:9:26"},"scope":4017,"src":"14369:268:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3673,"nodeType":"Block","src":"14944:70:26","statements":[{"expression":{"arguments":[{"id":3664,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3656,"src":"14977:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14984:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3668,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3656,"src":"14993:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3667,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14987:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3666,"name":"bytes","nodeType":"ElementaryTypeName","src":"14987:5:26","typeDescriptions":{}}},"id":3669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14987:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15000:6:26","memberName":"length","nodeType":"MemberAccess","src":"14987:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3663,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[3674,3778],"referencedDeclaration":3778,"src":"14961:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":3671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14961:46:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3662,"id":3672,"nodeType":"Return","src":"14954:53:26"}]},"documentation":{"id":3654,"nodeType":"StructuredDocumentation","src":"14643:198:26","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress-string} requirements."},"id":3674,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14855:15:26","nodeType":"FunctionDefinition","parameters":{"id":3657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3656,"mutability":"mutable","name":"input","nameLocation":"14885:5:26","nodeType":"VariableDeclaration","scope":3674,"src":"14871:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3655,"name":"string","nodeType":"ElementaryTypeName","src":"14871:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14870:21:26"},"returnParameters":{"id":3662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3659,"mutability":"mutable","name":"success","nameLocation":"14920:7:26","nodeType":"VariableDeclaration","scope":3674,"src":"14915:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3658,"name":"bool","nodeType":"ElementaryTypeName","src":"14915:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3661,"mutability":"mutable","name":"value","nameLocation":"14937:5:26","nodeType":"VariableDeclaration","scope":3674,"src":"14929:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3660,"name":"address","nodeType":"ElementaryTypeName","src":"14929:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14914:29:26"},"scope":4017,"src":"14846:168:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3777,"nodeType":"Block","src":"15407:733:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3688,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3681,"src":"15421:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3691,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3677,"src":"15433:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15427:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3689,"name":"bytes","nodeType":"ElementaryTypeName","src":"15427:5:26","typeDescriptions":{}}},"id":3692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15427:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15440:6:26","memberName":"length","nodeType":"MemberAccess","src":"15427:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15421:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3695,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3679,"src":"15450:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3696,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3681,"src":"15458:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15450:11:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15421:40:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3706,"nodeType":"IfStatement","src":"15417:72:26","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15471:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15486:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3701,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15478:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3700,"name":"address","nodeType":"ElementaryTypeName","src":"15478:7:26","typeDescriptions":{}}},"id":3703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15478:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3704,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15470:19:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3687,"id":3705,"nodeType":"Return","src":"15463:26:26"}},{"assignments":[3708],"declarations":[{"constant":false,"id":3708,"mutability":"mutable","name":"hasPrefix","nameLocation":"15505:9:26","nodeType":"VariableDeclaration","scope":3777,"src":"15500:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3707,"name":"bool","nodeType":"ElementaryTypeName","src":"15500:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3731,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3709,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3681,"src":"15518:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3710,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3679,"src":"15524:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15532:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15524:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15518:15:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3714,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15517:17:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":3729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":3720,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3677,"src":"15574:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15568:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3718,"name":"bytes","nodeType":"ElementaryTypeName","src":"15568:5:26","typeDescriptions":{}}},"id":3721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15568:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3722,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3679,"src":"15582:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3717,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"15545:22:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15545:43:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15538:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3715,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15538:6:26","typeDescriptions":{}}},"id":3724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15538:51:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":3727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15600:4:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":3726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15593:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3725,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15593:6:26","typeDescriptions":{}}},"id":3728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15593:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15538:67:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15517:88:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15500:105:26"},{"assignments":[3733],"declarations":[{"constant":false,"id":3733,"mutability":"mutable","name":"expectedLength","nameLocation":"15694:14:26","nodeType":"VariableDeclaration","scope":3777,"src":"15686:22:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3732,"name":"uint256","nodeType":"ElementaryTypeName","src":"15686:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3741,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":3734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15711:2:26","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3735,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3708,"src":"15716:9:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15726:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8099,"src":"15716:16:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":3737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15716:18:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":3738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15737:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15716:22:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15711:27:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15686:52:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3742,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3681,"src":"15803:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3743,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3679,"src":"15809:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3745,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3733,"src":"15818:14:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:29:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3775,"nodeType":"Block","src":"16083:51:26","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":3768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16105:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16120:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16112:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3769,"name":"address","nodeType":"ElementaryTypeName","src":"16112:7:26","typeDescriptions":{}}},"id":3772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16112:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3773,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16104:19:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3687,"id":3774,"nodeType":"Return","src":"16097:26:26"}]},"id":3776,"nodeType":"IfStatement","src":"15799:335:26","trueBody":{"id":3767,"nodeType":"Block","src":"15834:243:26","statements":[{"assignments":[3748,3750],"declarations":[{"constant":false,"id":3748,"mutability":"mutable","name":"s","nameLocation":"15955:1:26","nodeType":"VariableDeclaration","scope":3767,"src":"15950:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3747,"name":"bool","nodeType":"ElementaryTypeName","src":"15950:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3750,"mutability":"mutable","name":"v","nameLocation":"15966:1:26","nodeType":"VariableDeclaration","scope":3767,"src":"15958:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3749,"name":"uint256","nodeType":"ElementaryTypeName","src":"15958:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3756,"initialValue":{"arguments":[{"id":3752,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3677,"src":"16003:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3753,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3679,"src":"16010:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3754,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3681,"src":"16017:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3751,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"15971:31:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15971:50:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15949:72:26"},{"expression":{"components":[{"id":3757,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3748,"src":"16043:1:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":3762,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3750,"src":"16062:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16054:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3760,"name":"uint160","nodeType":"ElementaryTypeName","src":"16054:7:26","typeDescriptions":{}}},"id":3763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3759,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16046:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3758,"name":"address","nodeType":"ElementaryTypeName","src":"16046:7:26","typeDescriptions":{}}},"id":3764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16046:19:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3765,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16042:24:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3687,"id":3766,"nodeType":"Return","src":"16035:31:26"}]}}]},"documentation":{"id":3675,"nodeType":"StructuredDocumentation","src":"15020:226:26","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress-string-uint256-uint256} requirements."},"id":3778,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"15260:15:26","nodeType":"FunctionDefinition","parameters":{"id":3682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3677,"mutability":"mutable","name":"input","nameLocation":"15299:5:26","nodeType":"VariableDeclaration","scope":3778,"src":"15285:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3676,"name":"string","nodeType":"ElementaryTypeName","src":"15285:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3679,"mutability":"mutable","name":"begin","nameLocation":"15322:5:26","nodeType":"VariableDeclaration","scope":3778,"src":"15314:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3678,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3681,"mutability":"mutable","name":"end","nameLocation":"15345:3:26","nodeType":"VariableDeclaration","scope":3778,"src":"15337:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3680,"name":"uint256","nodeType":"ElementaryTypeName","src":"15337:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15275:79:26"},"returnParameters":{"id":3687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3684,"mutability":"mutable","name":"success","nameLocation":"15383:7:26","nodeType":"VariableDeclaration","scope":3778,"src":"15378:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3683,"name":"bool","nodeType":"ElementaryTypeName","src":"15378:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3686,"mutability":"mutable","name":"value","nameLocation":"15400:5:26","nodeType":"VariableDeclaration","scope":3778,"src":"15392:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3685,"name":"address","nodeType":"ElementaryTypeName","src":"15392:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15377:29:26"},"scope":4017,"src":"15251:889:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3837,"nodeType":"Block","src":"16209:461:26","statements":[{"assignments":[3786],"declarations":[{"constant":false,"id":3786,"mutability":"mutable","name":"value","nameLocation":"16225:5:26","nodeType":"VariableDeclaration","scope":3837,"src":"16219:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3785,"name":"uint8","nodeType":"ElementaryTypeName","src":"16219:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3791,"initialValue":{"arguments":[{"id":3789,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3780,"src":"16239:3:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3788,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16233:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3787,"name":"uint8","nodeType":"ElementaryTypeName","src":"16233:5:26","typeDescriptions":{}}},"id":3790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16233:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"16219:24:26"},{"id":3834,"nodeType":"UncheckedBlock","src":"16403:238:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3792,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3786,"src":"16431:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":3793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16439:2:26","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"16431:10:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3795,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3786,"src":"16445:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":3796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16453:2:26","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16445:10:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16431:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3803,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3786,"src":"16491:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":3804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16499:2:26","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16491:10:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3806,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3786,"src":"16505:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":3807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16513:3:26","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16505:11:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16491:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3814,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3786,"src":"16552:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":3815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16560:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16552:10:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3817,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3786,"src":"16566:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":3818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16574:2:26","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16566:10:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16552:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":3827,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16620:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3826,"name":"uint8","nodeType":"ElementaryTypeName","src":"16620:5:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":3825,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16615:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16615:11:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":3829,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16627:3:26","memberName":"max","nodeType":"MemberAccess","src":"16615:15:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3784,"id":3830,"nodeType":"Return","src":"16608:22:26"},"id":3831,"nodeType":"IfStatement","src":"16548:82:26","trueBody":{"expression":{"id":3823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3821,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3786,"src":"16578:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":3822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16587:2:26","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16578:11:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3824,"nodeType":"ExpressionStatement","src":"16578:11:26"}},"id":3832,"nodeType":"IfStatement","src":"16487:143:26","trueBody":{"expression":{"id":3812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3810,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3786,"src":"16518:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":3811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16527:2:26","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16518:11:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3813,"nodeType":"ExpressionStatement","src":"16518:11:26"}},"id":3833,"nodeType":"IfStatement","src":"16427:203:26","trueBody":{"expression":{"id":3801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3799,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3786,"src":"16457:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":3800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16466:2:26","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16457:11:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3802,"nodeType":"ExpressionStatement","src":"16457:11:26"}}]},{"expression":{"id":3835,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3786,"src":"16658:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3784,"id":3836,"nodeType":"Return","src":"16651:12:26"}]},"id":3838,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"16155:12:26","nodeType":"FunctionDefinition","parameters":{"id":3781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3780,"mutability":"mutable","name":"chr","nameLocation":"16175:3:26","nodeType":"VariableDeclaration","scope":3838,"src":"16168:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3779,"name":"bytes1","nodeType":"ElementaryTypeName","src":"16168:6:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"16167:12:26"},"returnParameters":{"id":3784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3783,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3838,"src":"16202:5:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3782,"name":"uint8","nodeType":"ElementaryTypeName","src":"16202:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16201:7:26"},"scope":4017,"src":"16146:524:26","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4003,"nodeType":"Block","src":"17336:1331:26","statements":[{"assignments":[3847],"declarations":[{"constant":false,"id":3847,"mutability":"mutable","name":"buffer","nameLocation":"17359:6:26","nodeType":"VariableDeclaration","scope":4003,"src":"17346:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3846,"name":"bytes","nodeType":"ElementaryTypeName","src":"17346:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3852,"initialValue":{"arguments":[{"id":3850,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3841,"src":"17374:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3849,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17368:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3848,"name":"bytes","nodeType":"ElementaryTypeName","src":"17368:5:26","typeDescriptions":{}}},"id":3851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17368:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17346:34:26"},{"assignments":[3854],"declarations":[{"constant":false,"id":3854,"mutability":"mutable","name":"output","nameLocation":"17403:6:26","nodeType":"VariableDeclaration","scope":4003,"src":"17390:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3853,"name":"bytes","nodeType":"ElementaryTypeName","src":"17390:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3862,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17422:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":3858,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3847,"src":"17426:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17433:6:26","memberName":"length","nodeType":"MemberAccess","src":"17426:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17422:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3856,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17412:9:26","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3855,"name":"bytes","nodeType":"ElementaryTypeName","src":"17416:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17412:28:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17390:50:26"},{"assignments":[3864],"declarations":[{"constant":false,"id":3864,"mutability":"mutable","name":"outputLength","nameLocation":"17481:12:26","nodeType":"VariableDeclaration","scope":4003,"src":"17473:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3863,"name":"uint256","nodeType":"ElementaryTypeName","src":"17473:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3866,"initialValue":{"hexValue":"30","id":3865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17496:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17473:24:26"},{"body":{"id":3995,"nodeType":"Block","src":"17548:854:26","statements":[{"assignments":[3878],"declarations":[{"constant":false,"id":3878,"mutability":"mutable","name":"char","nameLocation":"17569:4:26","nodeType":"VariableDeclaration","scope":3995,"src":"17562:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3877,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17562:6:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":3886,"initialValue":{"arguments":[{"arguments":[{"id":3882,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3847,"src":"17606:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3883,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3868,"src":"17614:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3881,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"17583:22:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17583:33:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17576:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3879,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17576:6:26","typeDescriptions":{}}},"id":3885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17576:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"17562:55:26"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3887,"name":"SPECIAL_CHARS_LOOKUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"17637:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17661:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"arguments":[{"id":3891,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3878,"src":"17672:4:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17666:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3889,"name":"uint8","nodeType":"ElementaryTypeName","src":"17666:5:26","typeDescriptions":{}}},"id":3892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17666:11:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"17661:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3894,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17660:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17637:41:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3896,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17636:43:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17683:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17636:48:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3899,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17635:50:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3993,"nodeType":"Block","src":"18330:62:26","statements":[{"expression":{"id":3991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3986,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3854,"src":"18348:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3989,"indexExpression":{"id":3988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18355:14:26","subExpression":{"id":3987,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3864,"src":"18355:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18348:22:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3990,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3878,"src":"18373:4:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"18348:29:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3992,"nodeType":"ExpressionStatement","src":"18348:29:26"}]},"id":3994,"nodeType":"IfStatement","src":"17631:761:26","trueBody":{"id":3985,"nodeType":"Block","src":"17687:637:26","statements":[{"expression":{"id":3905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3900,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3854,"src":"17705:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3903,"indexExpression":{"id":3902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17712:14:26","subExpression":{"id":3901,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3864,"src":"17712:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17705:22:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":3904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17730:4:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"17705:29:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3906,"nodeType":"ExpressionStatement","src":"17705:29:26"},{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3907,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3878,"src":"17756:4:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783038","id":3908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17764:4:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"17756:12:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3917,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3878,"src":"17825:4:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783039","id":3918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17833:4:26","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"17825:12:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3927,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3878,"src":"17894:4:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783061","id":3928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17902:4:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"17894:12:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3937,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3878,"src":"17963:4:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783063","id":3938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17971:4:26","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"17963:12:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3947,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3878,"src":"18032:4:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783064","id":3948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18040:4:26","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"18032:12:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3957,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3878,"src":"18101:4:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783563","id":3958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18109:4:26","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"18101:12:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3967,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3878,"src":"18171:4:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783232","id":3968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18179:4:26","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"18171:12:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3978,"nodeType":"IfStatement","src":"18167:143:26","trueBody":{"id":3977,"nodeType":"Block","src":"18185:125:26","statements":[{"expression":{"id":3975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3970,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3854,"src":"18263:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3973,"indexExpression":{"id":3972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18270:14:26","subExpression":{"id":3971,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3864,"src":"18270:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18263:22:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"22","id":3974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18288:3:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},"src":"18263:28:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3976,"nodeType":"ExpressionStatement","src":"18263:28:26"}]}},"id":3979,"nodeType":"IfStatement","src":"18097:213:26","trueBody":{"expression":{"id":3965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3960,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3854,"src":"18115:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3963,"indexExpression":{"id":3962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18122:14:26","subExpression":{"id":3961,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3864,"src":"18122:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18115:22:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":3964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18140:4:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"18115:29:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3966,"nodeType":"ExpressionStatement","src":"18115:29:26"}},"id":3980,"nodeType":"IfStatement","src":"18028:282:26","trueBody":{"expression":{"id":3955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3950,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3854,"src":"18046:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3953,"indexExpression":{"id":3952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18053:14:26","subExpression":{"id":3951,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3864,"src":"18053:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18046:22:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"72","id":3954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18071:3:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_414f72a4d550cad29f17d9d99a4af64b3776ec5538cd440cef0f03fef2e9e010","typeString":"literal_string \"r\""},"value":"r"},"src":"18046:28:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3956,"nodeType":"ExpressionStatement","src":"18046:28:26"}},"id":3981,"nodeType":"IfStatement","src":"17959:351:26","trueBody":{"expression":{"id":3945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3940,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3854,"src":"17977:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3943,"indexExpression":{"id":3942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17984:14:26","subExpression":{"id":3941,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3864,"src":"17984:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17977:22:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66","id":3944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18002:3:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1e8aeb79500496ef3dc2e57ba746a8315d048b7a664a2bf948db4fa91960483","typeString":"literal_string \"f\""},"value":"f"},"src":"17977:28:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3946,"nodeType":"ExpressionStatement","src":"17977:28:26"}},"id":3982,"nodeType":"IfStatement","src":"17890:420:26","trueBody":{"expression":{"id":3935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3930,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3854,"src":"17908:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3933,"indexExpression":{"id":3932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17915:14:26","subExpression":{"id":3931,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3864,"src":"17915:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17908:22:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"6e","id":3934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17933:3:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b4ecedb4964a40fe416b16c7bd8b46092040ec42ef0aa69e59f09872f105cf3","typeString":"literal_string \"n\""},"value":"n"},"src":"17908:28:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3936,"nodeType":"ExpressionStatement","src":"17908:28:26"}},"id":3983,"nodeType":"IfStatement","src":"17821:489:26","trueBody":{"expression":{"id":3925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3920,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3854,"src":"17839:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3923,"indexExpression":{"id":3922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17846:14:26","subExpression":{"id":3921,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3864,"src":"17846:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17839:22:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74","id":3924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17864:3:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_cac1bb71f0a97c8ac94ca9546b43178a9ad254c7b757ac07433aa6df35cd8089","typeString":"literal_string \"t\""},"value":"t"},"src":"17839:28:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3926,"nodeType":"ExpressionStatement","src":"17839:28:26"}},"id":3984,"nodeType":"IfStatement","src":"17752:558:26","trueBody":{"expression":{"id":3915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3910,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3854,"src":"17770:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3913,"indexExpression":{"id":3912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17777:14:26","subExpression":{"id":3911,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3864,"src":"17777:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17770:22:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"62","id":3914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17795:3:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510","typeString":"literal_string \"b\""},"value":"b"},"src":"17770:28:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3916,"nodeType":"ExpressionStatement","src":"17770:28:26"}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3870,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3868,"src":"17524:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3871,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3847,"src":"17528:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17535:6:26","memberName":"length","nodeType":"MemberAccess","src":"17528:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17524:17:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3996,"initializationExpression":{"assignments":[3868],"declarations":[{"constant":false,"id":3868,"mutability":"mutable","name":"i","nameLocation":"17521:1:26","nodeType":"VariableDeclaration","scope":3996,"src":"17513:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3867,"name":"uint256","nodeType":"ElementaryTypeName","src":"17513:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3869,"nodeType":"VariableDeclarationStatement","src":"17513:9:26"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17543:3:26","subExpression":{"id":3874,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3868,"src":"17545:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3876,"nodeType":"ExpressionStatement","src":"17543:3:26"},"nodeType":"ForStatement","src":"17508:894:26"},{"AST":{"nativeSrc":"18500:129:26","nodeType":"YulBlock","src":"18500:129:26","statements":[{"expression":{"arguments":[{"name":"output","nativeSrc":"18521:6:26","nodeType":"YulIdentifier","src":"18521:6:26"},{"name":"outputLength","nativeSrc":"18529:12:26","nodeType":"YulIdentifier","src":"18529:12:26"}],"functionName":{"name":"mstore","nativeSrc":"18514:6:26","nodeType":"YulIdentifier","src":"18514:6:26"},"nativeSrc":"18514:28:26","nodeType":"YulFunctionCall","src":"18514:28:26"},"nativeSrc":"18514:28:26","nodeType":"YulExpressionStatement","src":"18514:28:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"18562:4:26","nodeType":"YulLiteral","src":"18562:4:26","type":"","value":"0x40"},{"arguments":[{"name":"output","nativeSrc":"18572:6:26","nodeType":"YulIdentifier","src":"18572:6:26"},{"arguments":[{"kind":"number","nativeSrc":"18584:1:26","nodeType":"YulLiteral","src":"18584:1:26","type":"","value":"5"},{"arguments":[{"kind":"number","nativeSrc":"18591:1:26","nodeType":"YulLiteral","src":"18591:1:26","type":"","value":"5"},{"arguments":[{"name":"outputLength","nativeSrc":"18598:12:26","nodeType":"YulIdentifier","src":"18598:12:26"},{"kind":"number","nativeSrc":"18612:2:26","nodeType":"YulLiteral","src":"18612:2:26","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"18594:3:26","nodeType":"YulIdentifier","src":"18594:3:26"},"nativeSrc":"18594:21:26","nodeType":"YulFunctionCall","src":"18594:21:26"}],"functionName":{"name":"shr","nativeSrc":"18587:3:26","nodeType":"YulIdentifier","src":"18587:3:26"},"nativeSrc":"18587:29:26","nodeType":"YulFunctionCall","src":"18587:29:26"}],"functionName":{"name":"shl","nativeSrc":"18580:3:26","nodeType":"YulIdentifier","src":"18580:3:26"},"nativeSrc":"18580:37:26","nodeType":"YulFunctionCall","src":"18580:37:26"}],"functionName":{"name":"add","nativeSrc":"18568:3:26","nodeType":"YulIdentifier","src":"18568:3:26"},"nativeSrc":"18568:50:26","nodeType":"YulFunctionCall","src":"18568:50:26"}],"functionName":{"name":"mstore","nativeSrc":"18555:6:26","nodeType":"YulIdentifier","src":"18555:6:26"},"nativeSrc":"18555:64:26","nodeType":"YulFunctionCall","src":"18555:64:26"},"nativeSrc":"18555:64:26","nodeType":"YulExpressionStatement","src":"18555:64:26"}]},"evmVersion":"paris","externalReferences":[{"declaration":3854,"isOffset":false,"isSlot":false,"src":"18521:6:26","valueSize":1},{"declaration":3854,"isOffset":false,"isSlot":false,"src":"18572:6:26","valueSize":1},{"declaration":3864,"isOffset":false,"isSlot":false,"src":"18529:12:26","valueSize":1},{"declaration":3864,"isOffset":false,"isSlot":false,"src":"18598:12:26","valueSize":1}],"flags":["memory-safe"],"id":3997,"nodeType":"InlineAssembly","src":"18475:154:26"},{"expression":{"arguments":[{"id":4000,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3854,"src":"18653:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3999,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18646:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3998,"name":"string","nodeType":"ElementaryTypeName","src":"18646:6:26","typeDescriptions":{}}},"id":4001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18646:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3845,"id":4002,"nodeType":"Return","src":"18639:21:26"}]},"documentation":{"id":3839,"nodeType":"StructuredDocumentation","src":"16676:576:26","text":" @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n characters that are not in this range, but other tooling may provide different results."},"id":4004,"implemented":true,"kind":"function","modifiers":[],"name":"escapeJSON","nameLocation":"17266:10:26","nodeType":"FunctionDefinition","parameters":{"id":3842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3841,"mutability":"mutable","name":"input","nameLocation":"17291:5:26","nodeType":"VariableDeclaration","scope":4004,"src":"17277:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3840,"name":"string","nodeType":"ElementaryTypeName","src":"17277:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17276:21:26"},"returnParameters":{"id":3845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3844,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4004,"src":"17321:13:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3843,"name":"string","nodeType":"ElementaryTypeName","src":"17321:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17320:15:26"},"scope":4017,"src":"17257:1410:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4015,"nodeType":"Block","src":"19052:225:26","statements":[{"AST":{"nativeSrc":"19201:70:26","nodeType":"YulBlock","src":"19201:70:26","statements":[{"nativeSrc":"19215:46:26","nodeType":"YulAssignment","src":"19215:46:26","value":{"arguments":[{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"19238:6:26","nodeType":"YulIdentifier","src":"19238:6:26"},{"kind":"number","nativeSrc":"19246:4:26","nodeType":"YulLiteral","src":"19246:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19234:3:26","nodeType":"YulIdentifier","src":"19234:3:26"},"nativeSrc":"19234:17:26","nodeType":"YulFunctionCall","src":"19234:17:26"},{"name":"offset","nativeSrc":"19253:6:26","nodeType":"YulIdentifier","src":"19253:6:26"}],"functionName":{"name":"add","nativeSrc":"19230:3:26","nodeType":"YulIdentifier","src":"19230:3:26"},"nativeSrc":"19230:30:26","nodeType":"YulFunctionCall","src":"19230:30:26"}],"functionName":{"name":"mload","nativeSrc":"19224:5:26","nodeType":"YulIdentifier","src":"19224:5:26"},"nativeSrc":"19224:37:26","nodeType":"YulFunctionCall","src":"19224:37:26"},"variableNames":[{"name":"value","nativeSrc":"19215:5:26","nodeType":"YulIdentifier","src":"19215:5:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4007,"isOffset":false,"isSlot":false,"src":"19238:6:26","valueSize":1},{"declaration":4009,"isOffset":false,"isSlot":false,"src":"19253:6:26","valueSize":1},{"declaration":4012,"isOffset":false,"isSlot":false,"src":"19215:5:26","valueSize":1}],"flags":["memory-safe"],"id":4014,"nodeType":"InlineAssembly","src":"19176:95:26"}]},"documentation":{"id":4005,"nodeType":"StructuredDocumentation","src":"18673:268:26","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":4016,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"18955:22:26","nodeType":"FunctionDefinition","parameters":{"id":4010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4007,"mutability":"mutable","name":"buffer","nameLocation":"18991:6:26","nodeType":"VariableDeclaration","scope":4016,"src":"18978:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4006,"name":"bytes","nodeType":"ElementaryTypeName","src":"18978:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4009,"mutability":"mutable","name":"offset","nameLocation":"19007:6:26","nodeType":"VariableDeclaration","scope":4016,"src":"18999:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4008,"name":"uint256","nodeType":"ElementaryTypeName","src":"18999:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18977:37:26"},"returnParameters":{"id":4013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4012,"mutability":"mutable","name":"value","nameLocation":"19045:5:26","nodeType":"VariableDeclaration","scope":4016,"src":"19037:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4011,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19037:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19036:15:26"},"scope":4017,"src":"18946:331:26","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":4018,"src":"297:18982:26","usedErrors":[2675,2678,2681],"usedEvents":[]}],"src":"101:19179:26"},"id":26},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[4365]},"id":4366,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4019,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:27"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":4020,"nodeType":"StructuredDocumentation","src":"138:205:27","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":4365,"linearizedBaseContracts":[4365],"name":"ECDSA","nameLocation":"352:5:27","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":4025,"members":[{"id":4021,"name":"NoError","nameLocation":"392:7:27","nodeType":"EnumValue","src":"392:7:27"},{"id":4022,"name":"InvalidSignature","nameLocation":"409:16:27","nodeType":"EnumValue","src":"409:16:27"},{"id":4023,"name":"InvalidSignatureLength","nameLocation":"435:22:27","nodeType":"EnumValue","src":"435:22:27"},{"id":4024,"name":"InvalidSignatureS","nameLocation":"467:17:27","nodeType":"EnumValue","src":"467:17:27"}],"name":"RecoverError","nameLocation":"369:12:27","nodeType":"EnumDefinition","src":"364:126:27"},{"documentation":{"id":4026,"nodeType":"StructuredDocumentation","src":"496:63:27","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":4028,"name":"ECDSAInvalidSignature","nameLocation":"570:21:27","nodeType":"ErrorDefinition","parameters":{"id":4027,"nodeType":"ParameterList","parameters":[],"src":"591:2:27"},"src":"564:30:27"},{"documentation":{"id":4029,"nodeType":"StructuredDocumentation","src":"600:60:27","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":4033,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:27","nodeType":"ErrorDefinition","parameters":{"id":4032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4031,"mutability":"mutable","name":"length","nameLocation":"707:6:27","nodeType":"VariableDeclaration","scope":4033,"src":"699:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4030,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:27"},"src":"665:50:27"},{"documentation":{"id":4034,"nodeType":"StructuredDocumentation","src":"721:85:27","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":4038,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:27","nodeType":"ErrorDefinition","parameters":{"id":4037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4036,"mutability":"mutable","name":"s","nameLocation":"848:1:27","nodeType":"VariableDeclaration","scope":4038,"src":"840:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4035,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:27"},"src":"811:40:27"},{"body":{"id":4090,"nodeType":"Block","src":"2285:622:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4053,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4043,"src":"2299:9:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2309:6:27","memberName":"length","nodeType":"MemberAccess","src":"2299:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":4055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2319:2:27","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2299:22:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4088,"nodeType":"Block","src":"2793:108:27","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":4077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2823:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4076,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2815:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4075,"name":"address","nodeType":"ElementaryTypeName","src":"2815:7:27","typeDescriptions":{}}},"id":4078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2815:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4079,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4025,"src":"2827:12:27","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4025_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4080,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2840:22:27","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":4023,"src":"2827:35:27","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4025","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":4083,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4043,"src":"2872:9:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2882:6:27","memberName":"length","nodeType":"MemberAccess","src":"2872:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2864:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4081,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2864:7:27","typeDescriptions":{}}},"id":4085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2864:25:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4086,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2814:76:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4025_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":4052,"id":4087,"nodeType":"Return","src":"2807:83:27"}]},"id":4089,"nodeType":"IfStatement","src":"2295:606:27","trueBody":{"id":4074,"nodeType":"Block","src":"2323:464:27","statements":[{"assignments":[4058],"declarations":[{"constant":false,"id":4058,"mutability":"mutable","name":"r","nameLocation":"2345:1:27","nodeType":"VariableDeclaration","scope":4074,"src":"2337:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4057,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2337:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4059,"nodeType":"VariableDeclarationStatement","src":"2337:9:27"},{"assignments":[4061],"declarations":[{"constant":false,"id":4061,"mutability":"mutable","name":"s","nameLocation":"2368:1:27","nodeType":"VariableDeclaration","scope":4074,"src":"2360:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4060,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2360:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4062,"nodeType":"VariableDeclarationStatement","src":"2360:9:27"},{"assignments":[4064],"declarations":[{"constant":false,"id":4064,"mutability":"mutable","name":"v","nameLocation":"2389:1:27","nodeType":"VariableDeclaration","scope":4074,"src":"2383:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4063,"name":"uint8","nodeType":"ElementaryTypeName","src":"2383:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4065,"nodeType":"VariableDeclarationStatement","src":"2383:7:27"},{"AST":{"nativeSrc":"2560:171:27","nodeType":"YulBlock","src":"2560:171:27","statements":[{"nativeSrc":"2578:32:27","nodeType":"YulAssignment","src":"2578:32:27","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2593:9:27","nodeType":"YulIdentifier","src":"2593:9:27"},{"kind":"number","nativeSrc":"2604:4:27","nodeType":"YulLiteral","src":"2604:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2589:3:27","nodeType":"YulIdentifier","src":"2589:3:27"},"nativeSrc":"2589:20:27","nodeType":"YulFunctionCall","src":"2589:20:27"}],"functionName":{"name":"mload","nativeSrc":"2583:5:27","nodeType":"YulIdentifier","src":"2583:5:27"},"nativeSrc":"2583:27:27","nodeType":"YulFunctionCall","src":"2583:27:27"},"variableNames":[{"name":"r","nativeSrc":"2578:1:27","nodeType":"YulIdentifier","src":"2578:1:27"}]},{"nativeSrc":"2627:32:27","nodeType":"YulAssignment","src":"2627:32:27","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2642:9:27","nodeType":"YulIdentifier","src":"2642:9:27"},{"kind":"number","nativeSrc":"2653:4:27","nodeType":"YulLiteral","src":"2653:4:27","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"2638:3:27","nodeType":"YulIdentifier","src":"2638:3:27"},"nativeSrc":"2638:20:27","nodeType":"YulFunctionCall","src":"2638:20:27"}],"functionName":{"name":"mload","nativeSrc":"2632:5:27","nodeType":"YulIdentifier","src":"2632:5:27"},"nativeSrc":"2632:27:27","nodeType":"YulFunctionCall","src":"2632:27:27"},"variableNames":[{"name":"s","nativeSrc":"2627:1:27","nodeType":"YulIdentifier","src":"2627:1:27"}]},{"nativeSrc":"2676:41:27","nodeType":"YulAssignment","src":"2676:41:27","value":{"arguments":[{"kind":"number","nativeSrc":"2686:1:27","nodeType":"YulLiteral","src":"2686:1:27","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2699:9:27","nodeType":"YulIdentifier","src":"2699:9:27"},{"kind":"number","nativeSrc":"2710:4:27","nodeType":"YulLiteral","src":"2710:4:27","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"2695:3:27","nodeType":"YulIdentifier","src":"2695:3:27"},"nativeSrc":"2695:20:27","nodeType":"YulFunctionCall","src":"2695:20:27"}],"functionName":{"name":"mload","nativeSrc":"2689:5:27","nodeType":"YulIdentifier","src":"2689:5:27"},"nativeSrc":"2689:27:27","nodeType":"YulFunctionCall","src":"2689:27:27"}],"functionName":{"name":"byte","nativeSrc":"2681:4:27","nodeType":"YulIdentifier","src":"2681:4:27"},"nativeSrc":"2681:36:27","nodeType":"YulFunctionCall","src":"2681:36:27"},"variableNames":[{"name":"v","nativeSrc":"2676:1:27","nodeType":"YulIdentifier","src":"2676:1:27"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4058,"isOffset":false,"isSlot":false,"src":"2578:1:27","valueSize":1},{"declaration":4061,"isOffset":false,"isSlot":false,"src":"2627:1:27","valueSize":1},{"declaration":4043,"isOffset":false,"isSlot":false,"src":"2593:9:27","valueSize":1},{"declaration":4043,"isOffset":false,"isSlot":false,"src":"2642:9:27","valueSize":1},{"declaration":4043,"isOffset":false,"isSlot":false,"src":"2699:9:27","valueSize":1},{"declaration":4064,"isOffset":false,"isSlot":false,"src":"2676:1:27","valueSize":1}],"flags":["memory-safe"],"id":4066,"nodeType":"InlineAssembly","src":"2535:196:27"},{"expression":{"arguments":[{"id":4068,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"2762:4:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4069,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4064,"src":"2768:1:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4070,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4058,"src":"2771:1:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4071,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4061,"src":"2774:1:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4067,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[4091,4171,4279],"referencedDeclaration":4279,"src":"2751:10:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$4025_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":4072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:25:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4025_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":4052,"id":4073,"nodeType":"Return","src":"2744:32:27"}]}}]},"documentation":{"id":4039,"nodeType":"StructuredDocumentation","src":"857:1267:27","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":4091,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:27","nodeType":"FunctionDefinition","parameters":{"id":4044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4041,"mutability":"mutable","name":"hash","nameLocation":"2166:4:27","nodeType":"VariableDeclaration","scope":4091,"src":"2158:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4040,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2158:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4043,"mutability":"mutable","name":"signature","nameLocation":"2193:9:27","nodeType":"VariableDeclaration","scope":4091,"src":"2180:22:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4042,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:60:27"},"returnParameters":{"id":4052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4046,"mutability":"mutable","name":"recovered","nameLocation":"2240:9:27","nodeType":"VariableDeclaration","scope":4091,"src":"2232:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4045,"name":"address","nodeType":"ElementaryTypeName","src":"2232:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4049,"mutability":"mutable","name":"err","nameLocation":"2264:3:27","nodeType":"VariableDeclaration","scope":4091,"src":"2251:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4025","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4048,"nodeType":"UserDefinedTypeName","pathNode":{"id":4047,"name":"RecoverError","nameLocations":["2251:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":4025,"src":"2251:12:27"},"referencedDeclaration":4025,"src":"2251:12:27","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4025","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":4051,"mutability":"mutable","name":"errArg","nameLocation":"2277:6:27","nodeType":"VariableDeclaration","scope":4091,"src":"2269:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4050,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2269:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2231:53:27"},"scope":4365,"src":"2129:778:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4120,"nodeType":"Block","src":"3801:168:27","statements":[{"assignments":[4102,4105,4107],"declarations":[{"constant":false,"id":4102,"mutability":"mutable","name":"recovered","nameLocation":"3820:9:27","nodeType":"VariableDeclaration","scope":4120,"src":"3812:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4101,"name":"address","nodeType":"ElementaryTypeName","src":"3812:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4105,"mutability":"mutable","name":"error","nameLocation":"3844:5:27","nodeType":"VariableDeclaration","scope":4120,"src":"3831:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4025","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4104,"nodeType":"UserDefinedTypeName","pathNode":{"id":4103,"name":"RecoverError","nameLocations":["3831:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":4025,"src":"3831:12:27"},"referencedDeclaration":4025,"src":"3831:12:27","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4025","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":4107,"mutability":"mutable","name":"errorArg","nameLocation":"3859:8:27","nodeType":"VariableDeclaration","scope":4120,"src":"3851:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4106,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3851:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4112,"initialValue":{"arguments":[{"id":4109,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4094,"src":"3882:4:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4110,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4096,"src":"3888:9:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4108,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[4091,4171,4279],"referencedDeclaration":4091,"src":"3871:10:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$4025_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":4111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3871:27:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4025_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3811:87:27"},{"expression":{"arguments":[{"id":4114,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4105,"src":"3920:5:27","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4025","typeString":"enum ECDSA.RecoverError"}},{"id":4115,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4107,"src":"3927:8:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$4025","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4113,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4364,"src":"3908:11:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$4025_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":4116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3908:28:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4117,"nodeType":"ExpressionStatement","src":"3908:28:27"},{"expression":{"id":4118,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4102,"src":"3953:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4100,"id":4119,"nodeType":"Return","src":"3946:16:27"}]},"documentation":{"id":4092,"nodeType":"StructuredDocumentation","src":"2913:796:27","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":4121,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3723:7:27","nodeType":"FunctionDefinition","parameters":{"id":4097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4094,"mutability":"mutable","name":"hash","nameLocation":"3739:4:27","nodeType":"VariableDeclaration","scope":4121,"src":"3731:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4093,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3731:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4096,"mutability":"mutable","name":"signature","nameLocation":"3758:9:27","nodeType":"VariableDeclaration","scope":4121,"src":"3745:22:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4095,"name":"bytes","nodeType":"ElementaryTypeName","src":"3745:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3730:38:27"},"returnParameters":{"id":4100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4099,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4121,"src":"3792:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4098,"name":"address","nodeType":"ElementaryTypeName","src":"3792:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3791:9:27"},"scope":4365,"src":"3714:255:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4170,"nodeType":"Block","src":"4348:342:27","statements":[{"id":4169,"nodeType":"UncheckedBlock","src":"4358:326:27","statements":[{"assignments":[4139],"declarations":[{"constant":false,"id":4139,"mutability":"mutable","name":"s","nameLocation":"4390:1:27","nodeType":"VariableDeclaration","scope":4169,"src":"4382:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4138,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4382:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4146,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4140,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4128,"src":"4394:2:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":4143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4407:66:27","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":4142,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4399:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4141,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4399:7:27","typeDescriptions":{}}},"id":4144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4399:75:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4394:80:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4382:92:27"},{"assignments":[4148],"declarations":[{"constant":false,"id":4148,"mutability":"mutable","name":"v","nameLocation":"4591:1:27","nodeType":"VariableDeclaration","scope":4169,"src":"4585:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4147,"name":"uint8","nodeType":"ElementaryTypeName","src":"4585:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4161,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4153,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4128,"src":"4610:2:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4151,"name":"uint256","nodeType":"ElementaryTypeName","src":"4602:7:27","typeDescriptions":{}}},"id":4154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4602:11:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":4155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4617:3:27","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4602:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4157,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:20:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":4158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4624:2:27","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4601:25:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4595:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4149,"name":"uint8","nodeType":"ElementaryTypeName","src":"4595:5:27","typeDescriptions":{}}},"id":4160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4595:32:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4585:42:27"},{"expression":{"arguments":[{"id":4163,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4124,"src":"4659:4:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4164,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"4665:1:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4165,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4126,"src":"4668:1:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4166,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4139,"src":"4671:1:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4162,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[4091,4171,4279],"referencedDeclaration":4279,"src":"4648:10:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$4025_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":4167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4648:25:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4025_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":4137,"id":4168,"nodeType":"Return","src":"4641:32:27"}]}]},"documentation":{"id":4122,"nodeType":"StructuredDocumentation","src":"3975:205:27","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]"},"id":4171,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4194:10:27","nodeType":"FunctionDefinition","parameters":{"id":4129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4124,"mutability":"mutable","name":"hash","nameLocation":"4222:4:27","nodeType":"VariableDeclaration","scope":4171,"src":"4214:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4123,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4214:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4126,"mutability":"mutable","name":"r","nameLocation":"4244:1:27","nodeType":"VariableDeclaration","scope":4171,"src":"4236:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4125,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4236:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4128,"mutability":"mutable","name":"vs","nameLocation":"4263:2:27","nodeType":"VariableDeclaration","scope":4171,"src":"4255:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4127,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4204:67:27"},"returnParameters":{"id":4137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4131,"mutability":"mutable","name":"recovered","nameLocation":"4303:9:27","nodeType":"VariableDeclaration","scope":4171,"src":"4295:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4130,"name":"address","nodeType":"ElementaryTypeName","src":"4295:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4134,"mutability":"mutable","name":"err","nameLocation":"4327:3:27","nodeType":"VariableDeclaration","scope":4171,"src":"4314:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4025","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4133,"nodeType":"UserDefinedTypeName","pathNode":{"id":4132,"name":"RecoverError","nameLocations":["4314:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":4025,"src":"4314:12:27"},"referencedDeclaration":4025,"src":"4314:12:27","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4025","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":4136,"mutability":"mutable","name":"errArg","nameLocation":"4340:6:27","nodeType":"VariableDeclaration","scope":4171,"src":"4332:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4135,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4332:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4294:53:27"},"scope":4365,"src":"4185:505:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4203,"nodeType":"Block","src":"4903:164:27","statements":[{"assignments":[4184,4187,4189],"declarations":[{"constant":false,"id":4184,"mutability":"mutable","name":"recovered","nameLocation":"4922:9:27","nodeType":"VariableDeclaration","scope":4203,"src":"4914:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4183,"name":"address","nodeType":"ElementaryTypeName","src":"4914:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4187,"mutability":"mutable","name":"error","nameLocation":"4946:5:27","nodeType":"VariableDeclaration","scope":4203,"src":"4933:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4025","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4186,"nodeType":"UserDefinedTypeName","pathNode":{"id":4185,"name":"RecoverError","nameLocations":["4933:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":4025,"src":"4933:12:27"},"referencedDeclaration":4025,"src":"4933:12:27","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4025","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":4189,"mutability":"mutable","name":"errorArg","nameLocation":"4961:8:27","nodeType":"VariableDeclaration","scope":4203,"src":"4953:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4188,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4953:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4195,"initialValue":{"arguments":[{"id":4191,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4174,"src":"4984:4:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4192,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4176,"src":"4990:1:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4193,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"4993:2:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4190,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[4091,4171,4279],"referencedDeclaration":4171,"src":"4973:10:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$4025_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":4194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4973:23:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4025_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4913:83:27"},{"expression":{"arguments":[{"id":4197,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4187,"src":"5018:5:27","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4025","typeString":"enum ECDSA.RecoverError"}},{"id":4198,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"5025:8:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$4025","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4196,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4364,"src":"5006:11:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$4025_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":4199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5006:28:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4200,"nodeType":"ExpressionStatement","src":"5006:28:27"},{"expression":{"id":4201,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4184,"src":"5051:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4182,"id":4202,"nodeType":"Return","src":"5044:16:27"}]},"documentation":{"id":4172,"nodeType":"StructuredDocumentation","src":"4696:116:27","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":4204,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4826:7:27","nodeType":"FunctionDefinition","parameters":{"id":4179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4174,"mutability":"mutable","name":"hash","nameLocation":"4842:4:27","nodeType":"VariableDeclaration","scope":4204,"src":"4834:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4173,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4834:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4176,"mutability":"mutable","name":"r","nameLocation":"4856:1:27","nodeType":"VariableDeclaration","scope":4204,"src":"4848:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4175,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4848:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4178,"mutability":"mutable","name":"vs","nameLocation":"4867:2:27","nodeType":"VariableDeclaration","scope":4204,"src":"4859:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4177,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4859:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4833:37:27"},"returnParameters":{"id":4182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4181,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4204,"src":"4894:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4180,"name":"address","nodeType":"ElementaryTypeName","src":"4894:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4893:9:27"},"scope":4365,"src":"4817:250:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4278,"nodeType":"Block","src":"5382:1372:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4225,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4213,"src":"6278:1:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6270:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4223,"name":"uint256","nodeType":"ElementaryTypeName","src":"6270:7:27","typeDescriptions":{}}},"id":4226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6270:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":4227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6283:66:27","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6270:79:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4239,"nodeType":"IfStatement","src":"6266:164:27","trueBody":{"id":4238,"nodeType":"Block","src":"6351:79:27","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":4231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6381:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4230,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6373:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4229,"name":"address","nodeType":"ElementaryTypeName","src":"6373:7:27","typeDescriptions":{}}},"id":4232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6373:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4233,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4025,"src":"6385:12:27","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4025_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4234,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6398:17:27","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":4024,"src":"6385:30:27","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4025","typeString":"enum ECDSA.RecoverError"}},{"id":4235,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4213,"src":"6417:1:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4236,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6372:47:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4025_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":4222,"id":4237,"nodeType":"Return","src":"6365:54:27"}]}},{"assignments":[4241],"declarations":[{"constant":false,"id":4241,"mutability":"mutable","name":"signer","nameLocation":"6532:6:27","nodeType":"VariableDeclaration","scope":4278,"src":"6524:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4240,"name":"address","nodeType":"ElementaryTypeName","src":"6524:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4248,"initialValue":{"arguments":[{"id":4243,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4207,"src":"6551:4:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4244,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4209,"src":"6557:1:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4245,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4211,"src":"6560:1:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4246,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4213,"src":"6563:1:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4242,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6541:9:27","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":4247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6541:24:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6524:41:27"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4249,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4241,"src":"6579:6:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6597:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4251,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6589:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4250,"name":"address","nodeType":"ElementaryTypeName","src":"6589:7:27","typeDescriptions":{}}},"id":4253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6589:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6579:20:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4268,"nodeType":"IfStatement","src":"6575:113:27","trueBody":{"id":4267,"nodeType":"Block","src":"6601:87:27","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":4257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6623:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4255,"name":"address","nodeType":"ElementaryTypeName","src":"6623:7:27","typeDescriptions":{}}},"id":4258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6623:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4259,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4025,"src":"6635:12:27","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4025_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6648:16:27","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":4022,"src":"6635:29:27","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4025","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":4263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6674:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6666:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4261,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6666:7:27","typeDescriptions":{}}},"id":4264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6666:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4265,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6622:55:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4025_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":4222,"id":4266,"nodeType":"Return","src":"6615:62:27"}]}},{"expression":{"components":[{"id":4269,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4241,"src":"6706:6:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4270,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4025,"src":"6714:12:27","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4025_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4271,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6727:7:27","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":4021,"src":"6714:20:27","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4025","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":4274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6744:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6736:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4272,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6736:7:27","typeDescriptions":{}}},"id":4275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6736:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4276,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6705:42:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4025_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":4222,"id":4277,"nodeType":"Return","src":"6698:49:27"}]},"documentation":{"id":4205,"nodeType":"StructuredDocumentation","src":"5073:125:27","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":4279,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5212:10:27","nodeType":"FunctionDefinition","parameters":{"id":4214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4207,"mutability":"mutable","name":"hash","nameLocation":"5240:4:27","nodeType":"VariableDeclaration","scope":4279,"src":"5232:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4206,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5232:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4209,"mutability":"mutable","name":"v","nameLocation":"5260:1:27","nodeType":"VariableDeclaration","scope":4279,"src":"5254:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4208,"name":"uint8","nodeType":"ElementaryTypeName","src":"5254:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4211,"mutability":"mutable","name":"r","nameLocation":"5279:1:27","nodeType":"VariableDeclaration","scope":4279,"src":"5271:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4210,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5271:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4213,"mutability":"mutable","name":"s","nameLocation":"5298:1:27","nodeType":"VariableDeclaration","scope":4279,"src":"5290:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4212,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5290:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5222:83:27"},"returnParameters":{"id":4222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4216,"mutability":"mutable","name":"recovered","nameLocation":"5337:9:27","nodeType":"VariableDeclaration","scope":4279,"src":"5329:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4215,"name":"address","nodeType":"ElementaryTypeName","src":"5329:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4219,"mutability":"mutable","name":"err","nameLocation":"5361:3:27","nodeType":"VariableDeclaration","scope":4279,"src":"5348:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4025","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4218,"nodeType":"UserDefinedTypeName","pathNode":{"id":4217,"name":"RecoverError","nameLocations":["5348:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":4025,"src":"5348:12:27"},"referencedDeclaration":4025,"src":"5348:12:27","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4025","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":4221,"mutability":"mutable","name":"errArg","nameLocation":"5374:6:27","nodeType":"VariableDeclaration","scope":4279,"src":"5366:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4220,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5366:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5328:53:27"},"scope":4365,"src":"5203:1551:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4314,"nodeType":"Block","src":"6981:166:27","statements":[{"assignments":[4294,4297,4299],"declarations":[{"constant":false,"id":4294,"mutability":"mutable","name":"recovered","nameLocation":"7000:9:27","nodeType":"VariableDeclaration","scope":4314,"src":"6992:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4293,"name":"address","nodeType":"ElementaryTypeName","src":"6992:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4297,"mutability":"mutable","name":"error","nameLocation":"7024:5:27","nodeType":"VariableDeclaration","scope":4314,"src":"7011:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4025","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4296,"nodeType":"UserDefinedTypeName","pathNode":{"id":4295,"name":"RecoverError","nameLocations":["7011:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":4025,"src":"7011:12:27"},"referencedDeclaration":4025,"src":"7011:12:27","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4025","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":4299,"mutability":"mutable","name":"errorArg","nameLocation":"7039:8:27","nodeType":"VariableDeclaration","scope":4314,"src":"7031:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4298,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7031:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4306,"initialValue":{"arguments":[{"id":4301,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4282,"src":"7062:4:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4302,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"7068:1:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4303,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4286,"src":"7071:1:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4304,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4288,"src":"7074:1:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4300,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[4091,4171,4279],"referencedDeclaration":4279,"src":"7051:10:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$4025_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":4305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7051:25:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4025_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6991:85:27"},{"expression":{"arguments":[{"id":4308,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4297,"src":"7098:5:27","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4025","typeString":"enum ECDSA.RecoverError"}},{"id":4309,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4299,"src":"7105:8:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$4025","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4307,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4364,"src":"7086:11:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$4025_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":4310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7086:28:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4311,"nodeType":"ExpressionStatement","src":"7086:28:27"},{"expression":{"id":4312,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294,"src":"7131:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4292,"id":4313,"nodeType":"Return","src":"7124:16:27"}]},"documentation":{"id":4280,"nodeType":"StructuredDocumentation","src":"6760:122:27","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":4315,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6896:7:27","nodeType":"FunctionDefinition","parameters":{"id":4289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4282,"mutability":"mutable","name":"hash","nameLocation":"6912:4:27","nodeType":"VariableDeclaration","scope":4315,"src":"6904:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4281,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6904:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4284,"mutability":"mutable","name":"v","nameLocation":"6924:1:27","nodeType":"VariableDeclaration","scope":4315,"src":"6918:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4283,"name":"uint8","nodeType":"ElementaryTypeName","src":"6918:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4286,"mutability":"mutable","name":"r","nameLocation":"6935:1:27","nodeType":"VariableDeclaration","scope":4315,"src":"6927:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4285,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6927:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4288,"mutability":"mutable","name":"s","nameLocation":"6946:1:27","nodeType":"VariableDeclaration","scope":4315,"src":"6938:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4287,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6938:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6903:45:27"},"returnParameters":{"id":4292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4291,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4315,"src":"6972:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4290,"name":"address","nodeType":"ElementaryTypeName","src":"6972:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6971:9:27"},"scope":4365,"src":"6887:260:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4363,"nodeType":"Block","src":"7352:460:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$4025","typeString":"enum ECDSA.RecoverError"},"id":4327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4324,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4319,"src":"7366:5:27","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4025","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4325,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4025,"src":"7375:12:27","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4025_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4326,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7388:7:27","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":4021,"src":"7375:20:27","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4025","typeString":"enum ECDSA.RecoverError"}},"src":"7366:29:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$4025","typeString":"enum ECDSA.RecoverError"},"id":4333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4330,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4319,"src":"7462:5:27","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4025","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4331,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4025,"src":"7471:12:27","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4025_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4332,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7484:16:27","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":4022,"src":"7471:29:27","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4025","typeString":"enum ECDSA.RecoverError"}},"src":"7462:38:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$4025","typeString":"enum ECDSA.RecoverError"},"id":4341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4338,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4319,"src":"7567:5:27","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4025","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4339,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4025,"src":"7576:12:27","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4025_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7589:22:27","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":4023,"src":"7576:35:27","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4025","typeString":"enum ECDSA.RecoverError"}},"src":"7567:44:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$4025","typeString":"enum ECDSA.RecoverError"},"id":4353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4350,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4319,"src":"7701:5:27","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4025","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4351,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4025,"src":"7710:12:27","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4025_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7723:17:27","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":4024,"src":"7710:30:27","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4025","typeString":"enum ECDSA.RecoverError"}},"src":"7701:39:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4359,"nodeType":"IfStatement","src":"7697:109:27","trueBody":{"id":4358,"nodeType":"Block","src":"7742:64:27","statements":[{"errorCall":{"arguments":[{"id":4355,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4321,"src":"7786:8:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4354,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4038,"src":"7763:22:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$_t_error_$","typeString":"function (bytes32) pure returns (error)"}},"id":4356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7763:32:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4357,"nodeType":"RevertStatement","src":"7756:39:27"}]}},"id":4360,"nodeType":"IfStatement","src":"7563:243:27","trueBody":{"id":4349,"nodeType":"Block","src":"7613:78:27","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":4345,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4321,"src":"7670:8:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4344,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7662:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4343,"name":"uint256","nodeType":"ElementaryTypeName","src":"7662:7:27","typeDescriptions":{}}},"id":4346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7662:17:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4342,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"7634:27:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":4347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7634:46:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4348,"nodeType":"RevertStatement","src":"7627:53:27"}]}},"id":4361,"nodeType":"IfStatement","src":"7458:348:27","trueBody":{"id":4337,"nodeType":"Block","src":"7502:55:27","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4334,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4028,"src":"7523:21:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":4335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7523:23:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4336,"nodeType":"RevertStatement","src":"7516:30:27"}]}},"id":4362,"nodeType":"IfStatement","src":"7362:444:27","trueBody":{"id":4329,"nodeType":"Block","src":"7397:55:27","statements":[{"functionReturnParameters":4323,"id":4328,"nodeType":"Return","src":"7411:7:27"}]}}]},"documentation":{"id":4316,"nodeType":"StructuredDocumentation","src":"7153:122:27","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":4364,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7289:11:27","nodeType":"FunctionDefinition","parameters":{"id":4322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4319,"mutability":"mutable","name":"error","nameLocation":"7314:5:27","nodeType":"VariableDeclaration","scope":4364,"src":"7301:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4025","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4318,"nodeType":"UserDefinedTypeName","pathNode":{"id":4317,"name":"RecoverError","nameLocations":["7301:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":4025,"src":"7301:12:27"},"referencedDeclaration":4025,"src":"7301:12:27","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4025","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":4321,"mutability":"mutable","name":"errorArg","nameLocation":"7329:8:27","nodeType":"VariableDeclaration","scope":4364,"src":"7321:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4320,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7321:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7300:38:27"},"returnParameters":{"id":4323,"nodeType":"ParameterList","parameters":[],"src":"7352:0:27"},"scope":4365,"src":"7280:532:27","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":4366,"src":"344:7470:27","usedErrors":[4028,4033,4038],"usedEvents":[]}],"src":"112:7703:27"},"id":27},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"EIP712":[4592],"IERC5267":[355],"MessageHashUtils":[4678],"ShortString":[2280],"ShortStrings":[2491]},"id":4593,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4367,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:28"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"./MessageHashUtils.sol","id":4369,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4593,"sourceUnit":4679,"src":"139:56:28","symbolAliases":[{"foreign":{"id":4368,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4678,"src":"147:16:28","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","file":"../ShortStrings.sol","id":4372,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4593,"sourceUnit":2492,"src":"196:62:28","symbolAliases":[{"foreign":{"id":4370,"name":"ShortStrings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2491,"src":"204:12:28","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":4371,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"218:11:28","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"../../interfaces/IERC5267.sol","id":4374,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4593,"sourceUnit":356,"src":"259:55:28","symbolAliases":[{"foreign":{"id":4373,"name":"IERC5267","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":355,"src":"267:8:28","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4376,"name":"IERC5267","nameLocations":["1988:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":355,"src":"1988:8:28"},"id":4377,"nodeType":"InheritanceSpecifier","src":"1988:8:28"}],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":4375,"nodeType":"StructuredDocumentation","src":"316:1643:28","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"},"fullyImplemented":true,"id":4592,"linearizedBaseContracts":[4592,355],"name":"EIP712","nameLocation":"1978:6:28","nodeType":"ContractDefinition","nodes":[{"global":false,"id":4379,"libraryName":{"id":4378,"name":"ShortStrings","nameLocations":["2009:12:28"],"nodeType":"IdentifierPath","referencedDeclaration":2491,"src":"2009:12:28"},"nodeType":"UsingForDirective","src":"2003:25:28"},{"constant":true,"id":4384,"mutability":"constant","name":"TYPE_HASH","nameLocation":"2059:9:28","nodeType":"VariableDeclaration","scope":4592,"src":"2034:140:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4380,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2034:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":4382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2089:84:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":4381,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2079:9:28","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2079:95:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":4386,"mutability":"immutable","name":"_cachedDomainSeparator","nameLocation":"2399:22:28","nodeType":"VariableDeclaration","scope":4592,"src":"2373:48:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4385,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2373:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":4388,"mutability":"immutable","name":"_cachedChainId","nameLocation":"2453:14:28","nodeType":"VariableDeclaration","scope":4592,"src":"2427:40:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4387,"name":"uint256","nodeType":"ElementaryTypeName","src":"2427:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":4390,"mutability":"immutable","name":"_cachedThis","nameLocation":"2499:11:28","nodeType":"VariableDeclaration","scope":4592,"src":"2473:37:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4389,"name":"address","nodeType":"ElementaryTypeName","src":"2473:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":4392,"mutability":"immutable","name":"_hashedName","nameLocation":"2543:11:28","nodeType":"VariableDeclaration","scope":4592,"src":"2517:37:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4391,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2517:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":4394,"mutability":"immutable","name":"_hashedVersion","nameLocation":"2586:14:28","nodeType":"VariableDeclaration","scope":4592,"src":"2560:40:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4393,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2560:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":4397,"mutability":"immutable","name":"_name","nameLocation":"2637:5:28","nodeType":"VariableDeclaration","scope":4592,"src":"2607:35:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2280","typeString":"ShortString"},"typeName":{"id":4396,"nodeType":"UserDefinedTypeName","pathNode":{"id":4395,"name":"ShortString","nameLocations":["2607:11:28"],"nodeType":"IdentifierPath","referencedDeclaration":2280,"src":"2607:11:28"},"referencedDeclaration":2280,"src":"2607:11:28","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2280","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":4400,"mutability":"immutable","name":"_version","nameLocation":"2678:8:28","nodeType":"VariableDeclaration","scope":4592,"src":"2648:38:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2280","typeString":"ShortString"},"typeName":{"id":4399,"nodeType":"UserDefinedTypeName","pathNode":{"id":4398,"name":"ShortString","nameLocations":["2648:11:28"],"nodeType":"IdentifierPath","referencedDeclaration":2280,"src":"2648:11:28"},"referencedDeclaration":2280,"src":"2648:11:28","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2280","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":4402,"mutability":"mutable","name":"_nameFallback","nameLocation":"2757:13:28","nodeType":"VariableDeclaration","scope":4592,"src":"2742:28:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":4401,"name":"string","nodeType":"ElementaryTypeName","src":"2742:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":4404,"mutability":"mutable","name":"_versionFallback","nameLocation":"2841:16:28","nodeType":"VariableDeclaration","scope":4592,"src":"2826:31:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":4403,"name":"string","nodeType":"ElementaryTypeName","src":"2826:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":4461,"nodeType":"Block","src":"3483:376:28","statements":[{"expression":{"id":4417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4412,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4397,"src":"3493:5:28","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2280","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4415,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4402,"src":"3532:13:28","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":4413,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4407,"src":"3501:4:28","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":4414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3506:25:28","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2432,"src":"3501:30:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$2280_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":4416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3501:45:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2280","typeString":"ShortString"}},"src":"3493:53:28","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2280","typeString":"ShortString"}},"id":4418,"nodeType":"ExpressionStatement","src":"3493:53:28"},{"expression":{"id":4424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4419,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4400,"src":"3556:8:28","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2280","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4422,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"3601:16:28","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":4420,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4409,"src":"3567:7:28","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":4421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3575:25:28","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2432,"src":"3567:33:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$2280_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":4423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3567:51:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2280","typeString":"ShortString"}},"src":"3556:62:28","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2280","typeString":"ShortString"}},"id":4425,"nodeType":"ExpressionStatement","src":"3556:62:28"},{"expression":{"id":4433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4426,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"3628:11:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":4430,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4407,"src":"3658:4:28","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4429,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3652:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4428,"name":"bytes","nodeType":"ElementaryTypeName","src":"3652:5:28","typeDescriptions":{}}},"id":4431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3652:11:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4427,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3642:9:28","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3642:22:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3628:36:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4434,"nodeType":"ExpressionStatement","src":"3628:36:28"},{"expression":{"id":4442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4435,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4394,"src":"3674:14:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":4439,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4409,"src":"3707:7:28","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3701:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4437,"name":"bytes","nodeType":"ElementaryTypeName","src":"3701:5:28","typeDescriptions":{}}},"id":4440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3701:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4436,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3691:9:28","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3691:25:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3674:42:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4443,"nodeType":"ExpressionStatement","src":"3674:42:28"},{"expression":{"id":4447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4444,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4388,"src":"3727:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4445,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3744:5:28","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3750:7:28","memberName":"chainid","nodeType":"MemberAccess","src":"3744:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3727:30:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4448,"nodeType":"ExpressionStatement","src":"3727:30:28"},{"expression":{"id":4452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4449,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4386,"src":"3767:22:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":4450,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4509,"src":"3792:21:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":4451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3792:23:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3767:48:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4453,"nodeType":"ExpressionStatement","src":"3767:48:28"},{"expression":{"id":4459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4454,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4390,"src":"3825:11:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4457,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3847:4:28","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$4592","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$4592","typeString":"contract EIP712"}],"id":4456,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3839:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4455,"name":"address","nodeType":"ElementaryTypeName","src":"3839:7:28","typeDescriptions":{}}},"id":4458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3839:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3825:27:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4460,"nodeType":"ExpressionStatement","src":"3825:27:28"}]},"documentation":{"id":4405,"nodeType":"StructuredDocumentation","src":"2864:559:28","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":4462,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4407,"mutability":"mutable","name":"name","nameLocation":"3454:4:28","nodeType":"VariableDeclaration","scope":4462,"src":"3440:18:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4406,"name":"string","nodeType":"ElementaryTypeName","src":"3440:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4409,"mutability":"mutable","name":"version","nameLocation":"3474:7:28","nodeType":"VariableDeclaration","scope":4462,"src":"3460:21:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4408,"name":"string","nodeType":"ElementaryTypeName","src":"3460:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3439:43:28"},"returnParameters":{"id":4411,"nodeType":"ParameterList","parameters":[],"src":"3483:0:28"},"scope":4592,"src":"3428:431:28","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4487,"nodeType":"Block","src":"4007:200:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4470,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4029:4:28","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$4592","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$4592","typeString":"contract EIP712"}],"id":4469,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4021:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4468,"name":"address","nodeType":"ElementaryTypeName","src":"4021:7:28","typeDescriptions":{}}},"id":4471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4021:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4472,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4390,"src":"4038:11:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4021:28:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4474,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4053:5:28","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4059:7:28","memberName":"chainid","nodeType":"MemberAccess","src":"4053:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4476,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4388,"src":"4070:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4053:31:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4021:63:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4485,"nodeType":"Block","src":"4146:55:28","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4482,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4509,"src":"4167:21:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":4483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4167:23:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4467,"id":4484,"nodeType":"Return","src":"4160:30:28"}]},"id":4486,"nodeType":"IfStatement","src":"4017:184:28","trueBody":{"id":4481,"nodeType":"Block","src":"4086:54:28","statements":[{"expression":{"id":4479,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4386,"src":"4107:22:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4467,"id":4480,"nodeType":"Return","src":"4100:29:28"}]}}]},"documentation":{"id":4463,"nodeType":"StructuredDocumentation","src":"3865:75:28","text":" @dev Returns the domain separator for the current chain."},"id":4488,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3954:18:28","nodeType":"FunctionDefinition","parameters":{"id":4464,"nodeType":"ParameterList","parameters":[],"src":"3972:2:28"},"returnParameters":{"id":4467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4466,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4488,"src":"3998:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4465,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3998:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3997:9:28"},"scope":4592,"src":"3945:262:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4508,"nodeType":"Block","src":"4277:115:28","statements":[{"expression":{"arguments":[{"arguments":[{"id":4496,"name":"TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4384,"src":"4315:9:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4497,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"4326:11:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4498,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4394,"src":"4339:14:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":4499,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4355:5:28","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4361:7:28","memberName":"chainid","nodeType":"MemberAccess","src":"4355:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4503,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4378:4:28","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$4592","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$4592","typeString":"contract EIP712"}],"id":4502,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4370:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4501,"name":"address","nodeType":"ElementaryTypeName","src":"4370:7:28","typeDescriptions":{}}},"id":4504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4370:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4494,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4304:3:28","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4495,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4308:6:28","memberName":"encode","nodeType":"MemberAccess","src":"4304:10:28","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4304:80:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4493,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4294:9:28","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4294:91:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4492,"id":4507,"nodeType":"Return","src":"4287:98:28"}]},"id":4509,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"4222:21:28","nodeType":"FunctionDefinition","parameters":{"id":4489,"nodeType":"ParameterList","parameters":[],"src":"4243:2:28"},"returnParameters":{"id":4492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4491,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4509,"src":"4268:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4490,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4268:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4267:9:28"},"scope":4592,"src":"4213:179:28","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":4524,"nodeType":"Block","src":"5103:90:28","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":4519,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4488,"src":"5153:18:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":4520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5153:20:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4521,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"5175:10:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4517,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4678,"src":"5120:16:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$4678_$","typeString":"type(library MessageHashUtils)"}},"id":4518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5137:15:28","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":4677,"src":"5120:32:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":4522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5120:66:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4516,"id":4523,"nodeType":"Return","src":"5113:73:28"}]},"documentation":{"id":4510,"nodeType":"StructuredDocumentation","src":"4398:614:28","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":4525,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"5026:16:28","nodeType":"FunctionDefinition","parameters":{"id":4513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4512,"mutability":"mutable","name":"structHash","nameLocation":"5051:10:28","nodeType":"VariableDeclaration","scope":4525,"src":"5043:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4511,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5043:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5042:20:28"},"returnParameters":{"id":4516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4515,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4525,"src":"5094:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4514,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5094:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5093:9:28"},"scope":4592,"src":"5017:176:28","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[354],"body":{"id":4566,"nodeType":"Block","src":"5556:229:28","statements":[{"expression":{"components":[{"hexValue":"0f","id":4544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5587:7:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[],"expression":{"argumentTypes":[],"id":4545,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4579,"src":"5617:11:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":4546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5617:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":4547,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4591,"src":"5644:14:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":4548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5644:16:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":4549,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5674:5:28","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5680:7:28","memberName":"chainid","nodeType":"MemberAccess","src":"5674:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4553,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5709:4:28","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$4592","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$4592","typeString":"contract EIP712"}],"id":4552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5701:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4551,"name":"address","nodeType":"ElementaryTypeName","src":"5701:7:28","typeDescriptions":{}}},"id":4554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":4557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5736:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5728:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4555,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5728:7:28","typeDescriptions":{}}},"id":4558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5728:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":4562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5766:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5752:13:28","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":4559,"name":"uint256","nodeType":"ElementaryTypeName","src":"5756:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4560,"nodeType":"ArrayTypeName","src":"5756:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":4563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5752:16:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":4564,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5573:205:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":4543,"id":4565,"nodeType":"Return","src":"5566:212:28"}]},"documentation":{"id":4526,"nodeType":"StructuredDocumentation","src":"5199:24:28","text":"@inheritdoc IERC5267"},"functionSelector":"84b0196e","id":4567,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5237:12:28","nodeType":"FunctionDefinition","parameters":{"id":4527,"nodeType":"ParameterList","parameters":[],"src":"5249:2:28"},"returnParameters":{"id":4543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4529,"mutability":"mutable","name":"fields","nameLocation":"5333:6:28","nodeType":"VariableDeclaration","scope":4567,"src":"5326:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":4528,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5326:6:28","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":4531,"mutability":"mutable","name":"name","nameLocation":"5367:4:28","nodeType":"VariableDeclaration","scope":4567,"src":"5353:18:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4530,"name":"string","nodeType":"ElementaryTypeName","src":"5353:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4533,"mutability":"mutable","name":"version","nameLocation":"5399:7:28","nodeType":"VariableDeclaration","scope":4567,"src":"5385:21:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4532,"name":"string","nodeType":"ElementaryTypeName","src":"5385:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4535,"mutability":"mutable","name":"chainId","nameLocation":"5428:7:28","nodeType":"VariableDeclaration","scope":4567,"src":"5420:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4534,"name":"uint256","nodeType":"ElementaryTypeName","src":"5420:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4537,"mutability":"mutable","name":"verifyingContract","nameLocation":"5457:17:28","nodeType":"VariableDeclaration","scope":4567,"src":"5449:25:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4536,"name":"address","nodeType":"ElementaryTypeName","src":"5449:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4539,"mutability":"mutable","name":"salt","nameLocation":"5496:4:28","nodeType":"VariableDeclaration","scope":4567,"src":"5488:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4538,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5488:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4542,"mutability":"mutable","name":"extensions","nameLocation":"5531:10:28","nodeType":"VariableDeclaration","scope":4567,"src":"5514:27:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4540,"name":"uint256","nodeType":"ElementaryTypeName","src":"5514:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4541,"nodeType":"ArrayTypeName","src":"5514:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5312:239:28"},"scope":4592,"src":"5228:557:28","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":4578,"nodeType":"Block","src":"6166:65:28","statements":[{"expression":{"arguments":[{"id":4575,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4402,"src":"6210:13:28","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":4573,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4397,"src":"6183:5:28","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2280","typeString":"ShortString"}},"id":4574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6189:20:28","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2459,"src":"6183:26:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2280_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$2280_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":4576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6183:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4572,"id":4577,"nodeType":"Return","src":"6176:48:28"}]},"documentation":{"id":4568,"nodeType":"StructuredDocumentation","src":"5791:256:28","text":" @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":4579,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Name","nameLocation":"6114:11:28","nodeType":"FunctionDefinition","parameters":{"id":4569,"nodeType":"ParameterList","parameters":[],"src":"6125:2:28"},"returnParameters":{"id":4572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4571,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4579,"src":"6151:13:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4570,"name":"string","nodeType":"ElementaryTypeName","src":"6151:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6150:15:28"},"scope":4592,"src":"6105:126:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4590,"nodeType":"Block","src":"6621:71:28","statements":[{"expression":{"arguments":[{"id":4587,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"6668:16:28","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":4585,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4400,"src":"6638:8:28","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2280","typeString":"ShortString"}},"id":4586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6647:20:28","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2459,"src":"6638:29:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2280_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$2280_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":4588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6638:47:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4584,"id":4589,"nodeType":"Return","src":"6631:54:28"}]},"documentation":{"id":4580,"nodeType":"StructuredDocumentation","src":"6237:262:28","text":" @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":4591,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Version","nameLocation":"6566:14:28","nodeType":"FunctionDefinition","parameters":{"id":4581,"nodeType":"ParameterList","parameters":[],"src":"6580:2:28"},"returnParameters":{"id":4584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4583,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4591,"src":"6606:13:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4582,"name":"string","nodeType":"ElementaryTypeName","src":"6606:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6605:15:28"},"scope":4592,"src":"6557:135:28","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":4593,"src":"1960:4734:28","usedErrors":[2288,2290],"usedEvents":[335]}],"src":"113:6582:28"},"id":28},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[4678],"Strings":[4017]},"id":4679,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4594,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:29"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":4596,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4679,"sourceUnit":4018,"src":"149:39:29","symbolAliases":[{"foreign":{"id":4595,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4017,"src":"157:7:29","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":4597,"nodeType":"StructuredDocumentation","src":"190:330:29","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":4678,"linearizedBaseContracts":[4678],"name":"MessageHashUtils","nameLocation":"529:16:29","nodeType":"ContractDefinition","nodes":[{"body":{"id":4606,"nodeType":"Block","src":"1339:341:29","statements":[{"AST":{"nativeSrc":"1374:300:29","nodeType":"YulBlock","src":"1374:300:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1395:4:29","nodeType":"YulLiteral","src":"1395:4:29","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nativeSrc":"1401:34:29","nodeType":"YulLiteral","src":"1401:34:29","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nativeSrc":"1388:6:29","nodeType":"YulIdentifier","src":"1388:6:29"},"nativeSrc":"1388:48:29","nodeType":"YulFunctionCall","src":"1388:48:29"},"nativeSrc":"1388:48:29","nodeType":"YulExpressionStatement","src":"1388:48:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1497:4:29","nodeType":"YulLiteral","src":"1497:4:29","type":"","value":"0x1c"},{"name":"messageHash","nativeSrc":"1503:11:29","nodeType":"YulIdentifier","src":"1503:11:29"}],"functionName":{"name":"mstore","nativeSrc":"1490:6:29","nodeType":"YulIdentifier","src":"1490:6:29"},"nativeSrc":"1490:25:29","nodeType":"YulFunctionCall","src":"1490:25:29"},"nativeSrc":"1490:25:29","nodeType":"YulExpressionStatement","src":"1490:25:29"},{"nativeSrc":"1569:31:29","nodeType":"YulAssignment","src":"1569:31:29","value":{"arguments":[{"kind":"number","nativeSrc":"1589:4:29","nodeType":"YulLiteral","src":"1589:4:29","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1595:4:29","nodeType":"YulLiteral","src":"1595:4:29","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nativeSrc":"1579:9:29","nodeType":"YulIdentifier","src":"1579:9:29"},"nativeSrc":"1579:21:29","nodeType":"YulFunctionCall","src":"1579:21:29"},"variableNames":[{"name":"digest","nativeSrc":"1569:6:29","nodeType":"YulIdentifier","src":"1569:6:29"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4603,"isOffset":false,"isSlot":false,"src":"1569:6:29","valueSize":1},{"declaration":4600,"isOffset":false,"isSlot":false,"src":"1503:11:29","valueSize":1}],"flags":["memory-safe"],"id":4605,"nodeType":"InlineAssembly","src":"1349:325:29"}]},"documentation":{"id":4598,"nodeType":"StructuredDocumentation","src":"552:690:29","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":4607,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1256:22:29","nodeType":"FunctionDefinition","parameters":{"id":4601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4600,"mutability":"mutable","name":"messageHash","nameLocation":"1287:11:29","nodeType":"VariableDeclaration","scope":4607,"src":"1279:19:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4599,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1279:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1278:21:29"},"returnParameters":{"id":4604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4603,"mutability":"mutable","name":"digest","nameLocation":"1331:6:29","nodeType":"VariableDeclaration","scope":4607,"src":"1323:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4602,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1323:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1322:16:29"},"scope":4678,"src":"1247:433:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4632,"nodeType":"Block","src":"2257:143:29","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":4619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2309:32:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":4624,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4610,"src":"2366:7:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2374:6:29","memberName":"length","nodeType":"MemberAccess","src":"2366:14:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4622,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4017,"src":"2349:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$4017_$","typeString":"type(library Strings)"}},"id":4623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2357:8:29","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2729,"src":"2349:16:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":4626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2349:32:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4621,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2343:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4620,"name":"bytes","nodeType":"ElementaryTypeName","src":"2343:5:29","typeDescriptions":{}}},"id":4627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2343:39:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4628,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4610,"src":"2384:7:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2296:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4616,"name":"bytes","nodeType":"ElementaryTypeName","src":"2296:5:29","typeDescriptions":{}}},"id":4618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2302:6:29","memberName":"concat","nodeType":"MemberAccess","src":"2296:12:29","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2296:96:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4615,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2286:9:29","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2286:107:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4614,"id":4631,"nodeType":"Return","src":"2267:126:29"}]},"documentation":{"id":4608,"nodeType":"StructuredDocumentation","src":"1686:480:29","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":4633,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2180:22:29","nodeType":"FunctionDefinition","parameters":{"id":4611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4610,"mutability":"mutable","name":"message","nameLocation":"2216:7:29","nodeType":"VariableDeclaration","scope":4633,"src":"2203:20:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4609,"name":"bytes","nodeType":"ElementaryTypeName","src":"2203:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2202:22:29"},"returnParameters":{"id":4614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4613,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4633,"src":"2248:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4612,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2248:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2247:9:29"},"scope":4678,"src":"2171:229:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4652,"nodeType":"Block","src":"2854:80:29","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":4646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2898:10:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":4647,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4636,"src":"2910:9:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4648,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4638,"src":"2921:4:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4644,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2881:3:29","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2885:12:29","memberName":"encodePacked","nodeType":"MemberAccess","src":"2881:16:29","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2881:45:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4643,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2871:9:29","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2871:56:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4642,"id":4651,"nodeType":"Return","src":"2864:63:29"}]},"documentation":{"id":4634,"nodeType":"StructuredDocumentation","src":"2406:332:29","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":4653,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2752:31:29","nodeType":"FunctionDefinition","parameters":{"id":4639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4636,"mutability":"mutable","name":"validator","nameLocation":"2792:9:29","nodeType":"VariableDeclaration","scope":4653,"src":"2784:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4635,"name":"address","nodeType":"ElementaryTypeName","src":"2784:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4638,"mutability":"mutable","name":"data","nameLocation":"2816:4:29","nodeType":"VariableDeclaration","scope":4653,"src":"2803:17:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4637,"name":"bytes","nodeType":"ElementaryTypeName","src":"2803:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2783:38:29"},"returnParameters":{"id":4642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4641,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4653,"src":"2845:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4640,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2845:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2844:9:29"},"scope":4678,"src":"2743:191:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4664,"nodeType":"Block","src":"3216:216:29","statements":[{"AST":{"nativeSrc":"3251:175:29","nodeType":"YulBlock","src":"3251:175:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3272:4:29","nodeType":"YulLiteral","src":"3272:4:29","type":"","value":"0x00"},{"hexValue":"1900","kind":"string","nativeSrc":"3278:10:29","nodeType":"YulLiteral","src":"3278:10:29","type":"","value":"\u0019\u0000"}],"functionName":{"name":"mstore","nativeSrc":"3265:6:29","nodeType":"YulIdentifier","src":"3265:6:29"},"nativeSrc":"3265:24:29","nodeType":"YulFunctionCall","src":"3265:24:29"},"nativeSrc":"3265:24:29","nodeType":"YulExpressionStatement","src":"3265:24:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3309:4:29","nodeType":"YulLiteral","src":"3309:4:29","type":"","value":"0x02"},{"arguments":[{"kind":"number","nativeSrc":"3319:2:29","nodeType":"YulLiteral","src":"3319:2:29","type":"","value":"96"},{"name":"validator","nativeSrc":"3323:9:29","nodeType":"YulIdentifier","src":"3323:9:29"}],"functionName":{"name":"shl","nativeSrc":"3315:3:29","nodeType":"YulIdentifier","src":"3315:3:29"},"nativeSrc":"3315:18:29","nodeType":"YulFunctionCall","src":"3315:18:29"}],"functionName":{"name":"mstore","nativeSrc":"3302:6:29","nodeType":"YulIdentifier","src":"3302:6:29"},"nativeSrc":"3302:32:29","nodeType":"YulFunctionCall","src":"3302:32:29"},"nativeSrc":"3302:32:29","nodeType":"YulExpressionStatement","src":"3302:32:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3354:4:29","nodeType":"YulLiteral","src":"3354:4:29","type":"","value":"0x16"},{"name":"messageHash","nativeSrc":"3360:11:29","nodeType":"YulIdentifier","src":"3360:11:29"}],"functionName":{"name":"mstore","nativeSrc":"3347:6:29","nodeType":"YulIdentifier","src":"3347:6:29"},"nativeSrc":"3347:25:29","nodeType":"YulFunctionCall","src":"3347:25:29"},"nativeSrc":"3347:25:29","nodeType":"YulExpressionStatement","src":"3347:25:29"},{"nativeSrc":"3385:31:29","nodeType":"YulAssignment","src":"3385:31:29","value":{"arguments":[{"kind":"number","nativeSrc":"3405:4:29","nodeType":"YulLiteral","src":"3405:4:29","type":"","value":"0x00"},{"kind":"number","nativeSrc":"3411:4:29","nodeType":"YulLiteral","src":"3411:4:29","type":"","value":"0x36"}],"functionName":{"name":"keccak256","nativeSrc":"3395:9:29","nodeType":"YulIdentifier","src":"3395:9:29"},"nativeSrc":"3395:21:29","nodeType":"YulFunctionCall","src":"3395:21:29"},"variableNames":[{"name":"digest","nativeSrc":"3385:6:29","nodeType":"YulIdentifier","src":"3385:6:29"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4661,"isOffset":false,"isSlot":false,"src":"3385:6:29","valueSize":1},{"declaration":4658,"isOffset":false,"isSlot":false,"src":"3360:11:29","valueSize":1},{"declaration":4656,"isOffset":false,"isSlot":false,"src":"3323:9:29","valueSize":1}],"flags":["memory-safe"],"id":4663,"nodeType":"InlineAssembly","src":"3226:200:29"}]},"documentation":{"id":4654,"nodeType":"StructuredDocumentation","src":"2940:129:29","text":" @dev Variant of {toDataWithIntendedValidatorHash-address-bytes} optimized for cases where `data` is a bytes32."},"id":4665,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"3083:31:29","nodeType":"FunctionDefinition","parameters":{"id":4659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4656,"mutability":"mutable","name":"validator","nameLocation":"3132:9:29","nodeType":"VariableDeclaration","scope":4665,"src":"3124:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4655,"name":"address","nodeType":"ElementaryTypeName","src":"3124:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4658,"mutability":"mutable","name":"messageHash","nameLocation":"3159:11:29","nodeType":"VariableDeclaration","scope":4665,"src":"3151:19:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4657,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3151:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3114:62:29"},"returnParameters":{"id":4662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4661,"mutability":"mutable","name":"digest","nameLocation":"3208:6:29","nodeType":"VariableDeclaration","scope":4665,"src":"3200:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4660,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3200:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3199:16:29"},"scope":4678,"src":"3074:358:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4676,"nodeType":"Block","src":"3983:265:29","statements":[{"AST":{"nativeSrc":"4018:224:29","nodeType":"YulBlock","src":"4018:224:29","statements":[{"nativeSrc":"4032:22:29","nodeType":"YulVariableDeclaration","src":"4032:22:29","value":{"arguments":[{"kind":"number","nativeSrc":"4049:4:29","nodeType":"YulLiteral","src":"4049:4:29","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"4043:5:29","nodeType":"YulIdentifier","src":"4043:5:29"},"nativeSrc":"4043:11:29","nodeType":"YulFunctionCall","src":"4043:11:29"},"variables":[{"name":"ptr","nativeSrc":"4036:3:29","nodeType":"YulTypedName","src":"4036:3:29","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"4074:3:29","nodeType":"YulIdentifier","src":"4074:3:29"},{"hexValue":"1901","kind":"string","nativeSrc":"4079:10:29","nodeType":"YulLiteral","src":"4079:10:29","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nativeSrc":"4067:6:29","nodeType":"YulIdentifier","src":"4067:6:29"},"nativeSrc":"4067:23:29","nodeType":"YulFunctionCall","src":"4067:23:29"},"nativeSrc":"4067:23:29","nodeType":"YulExpressionStatement","src":"4067:23:29"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"4114:3:29","nodeType":"YulIdentifier","src":"4114:3:29"},{"kind":"number","nativeSrc":"4119:4:29","nodeType":"YulLiteral","src":"4119:4:29","type":"","value":"0x02"}],"functionName":{"name":"add","nativeSrc":"4110:3:29","nodeType":"YulIdentifier","src":"4110:3:29"},"nativeSrc":"4110:14:29","nodeType":"YulFunctionCall","src":"4110:14:29"},{"name":"domainSeparator","nativeSrc":"4126:15:29","nodeType":"YulIdentifier","src":"4126:15:29"}],"functionName":{"name":"mstore","nativeSrc":"4103:6:29","nodeType":"YulIdentifier","src":"4103:6:29"},"nativeSrc":"4103:39:29","nodeType":"YulFunctionCall","src":"4103:39:29"},"nativeSrc":"4103:39:29","nodeType":"YulExpressionStatement","src":"4103:39:29"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"4166:3:29","nodeType":"YulIdentifier","src":"4166:3:29"},{"kind":"number","nativeSrc":"4171:4:29","nodeType":"YulLiteral","src":"4171:4:29","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"4162:3:29","nodeType":"YulIdentifier","src":"4162:3:29"},"nativeSrc":"4162:14:29","nodeType":"YulFunctionCall","src":"4162:14:29"},{"name":"structHash","nativeSrc":"4178:10:29","nodeType":"YulIdentifier","src":"4178:10:29"}],"functionName":{"name":"mstore","nativeSrc":"4155:6:29","nodeType":"YulIdentifier","src":"4155:6:29"},"nativeSrc":"4155:34:29","nodeType":"YulFunctionCall","src":"4155:34:29"},"nativeSrc":"4155:34:29","nodeType":"YulExpressionStatement","src":"4155:34:29"},{"nativeSrc":"4202:30:29","nodeType":"YulAssignment","src":"4202:30:29","value":{"arguments":[{"name":"ptr","nativeSrc":"4222:3:29","nodeType":"YulIdentifier","src":"4222:3:29"},{"kind":"number","nativeSrc":"4227:4:29","nodeType":"YulLiteral","src":"4227:4:29","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nativeSrc":"4212:9:29","nodeType":"YulIdentifier","src":"4212:9:29"},"nativeSrc":"4212:20:29","nodeType":"YulFunctionCall","src":"4212:20:29"},"variableNames":[{"name":"digest","nativeSrc":"4202:6:29","nodeType":"YulIdentifier","src":"4202:6:29"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4673,"isOffset":false,"isSlot":false,"src":"4202:6:29","valueSize":1},{"declaration":4668,"isOffset":false,"isSlot":false,"src":"4126:15:29","valueSize":1},{"declaration":4670,"isOffset":false,"isSlot":false,"src":"4178:10:29","valueSize":1}],"flags":["memory-safe"],"id":4675,"nodeType":"InlineAssembly","src":"3993:249:29"}]},"documentation":{"id":4666,"nodeType":"StructuredDocumentation","src":"3438:431:29","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":4677,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3883:15:29","nodeType":"FunctionDefinition","parameters":{"id":4671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4668,"mutability":"mutable","name":"domainSeparator","nameLocation":"3907:15:29","nodeType":"VariableDeclaration","scope":4677,"src":"3899:23:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4667,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3899:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4670,"mutability":"mutable","name":"structHash","nameLocation":"3932:10:29","nodeType":"VariableDeclaration","scope":4677,"src":"3924:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4669,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3924:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3898:45:29"},"returnParameters":{"id":4674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4673,"mutability":"mutable","name":"digest","nameLocation":"3975:6:29","nodeType":"VariableDeclaration","scope":4677,"src":"3967:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4672,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3967:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3966:16:29"},"scope":4678,"src":"3874:374:29","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4679,"src":"521:3729:29","usedErrors":[],"usedEvents":[]}],"src":"123:4128:29"},"id":29},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[4702],"IERC165":[4714]},"id":4703,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4680,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:30"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":4682,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4703,"sourceUnit":4715,"src":"140:38:30","symbolAliases":[{"foreign":{"id":4681,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4714,"src":"148:7:30","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4684,"name":"IERC165","nameLocations":["688:7:30"],"nodeType":"IdentifierPath","referencedDeclaration":4714,"src":"688:7:30"},"id":4685,"nodeType":"InheritanceSpecifier","src":"688:7:30"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":4683,"nodeType":"StructuredDocumentation","src":"180:479:30","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":4702,"linearizedBaseContracts":[4702,4714],"name":"ERC165","nameLocation":"678:6:30","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[4713],"body":{"id":4700,"nodeType":"Block","src":"812:64:30","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":4698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4693,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4688,"src":"829:11:30","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":4695,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4714,"src":"849:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$4714_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$4714_$","typeString":"type(contract IERC165)"}],"id":4694,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"844:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"844:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$4714","typeString":"type(contract IERC165)"}},"id":4697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"858:11:30","memberName":"interfaceId","nodeType":"MemberAccess","src":"844:25:30","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"829:40:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4692,"id":4699,"nodeType":"Return","src":"822:47:30"}]},"documentation":{"id":4686,"nodeType":"StructuredDocumentation","src":"702:23:30","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":4701,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"739:17:30","nodeType":"FunctionDefinition","parameters":{"id":4689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4688,"mutability":"mutable","name":"interfaceId","nameLocation":"764:11:30","nodeType":"VariableDeclaration","scope":4701,"src":"757:18:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4687,"name":"bytes4","nodeType":"ElementaryTypeName","src":"757:6:30","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"756:20:30"},"returnParameters":{"id":4692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4691,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4701,"src":"806:4:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4690,"name":"bool","nodeType":"ElementaryTypeName","src":"806:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"805:6:30"},"scope":4702,"src":"730:146:30","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":4703,"src":"660:218:30","usedErrors":[],"usedEvents":[]}],"src":"114:765:30"},"id":30},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[4714]},"id":4715,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4704,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"115:25:31"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":4705,"nodeType":"StructuredDocumentation","src":"142:280:31","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":4714,"linearizedBaseContracts":[4714],"name":"IERC165","nameLocation":"433:7:31","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4706,"nodeType":"StructuredDocumentation","src":"447:340:31","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":4713,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"801:17:31","nodeType":"FunctionDefinition","parameters":{"id":4709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4708,"mutability":"mutable","name":"interfaceId","nameLocation":"826:11:31","nodeType":"VariableDeclaration","scope":4713,"src":"819:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4707,"name":"bytes4","nodeType":"ElementaryTypeName","src":"819:6:31","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"818:20:31"},"returnParameters":{"id":4712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4711,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4713,"src":"862:4:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4710,"name":"bool","nodeType":"ElementaryTypeName","src":"862:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"861:6:31"},"scope":4714,"src":"792:76:31","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4715,"src":"423:447:31","usedErrors":[],"usedEvents":[]}],"src":"115:756:31"},"id":31},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[6335],"Panic":[2166],"SafeCast":[8100]},"id":6336,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4716,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:32"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":4718,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6336,"sourceUnit":2167,"src":"129:35:32","symbolAliases":[{"foreign":{"id":4717,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2166,"src":"137:5:32","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":4720,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6336,"sourceUnit":8101,"src":"165:40:32","symbolAliases":[{"foreign":{"id":4719,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8100,"src":"173:8:32","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":4721,"nodeType":"StructuredDocumentation","src":"207:73:32","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":6335,"linearizedBaseContracts":[6335],"name":"Math","nameLocation":"289:4:32","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":4726,"members":[{"id":4722,"name":"Floor","nameLocation":"324:5:32","nodeType":"EnumValue","src":"324:5:32"},{"id":4723,"name":"Ceil","nameLocation":"367:4:32","nodeType":"EnumValue","src":"367:4:32"},{"id":4724,"name":"Trunc","nameLocation":"409:5:32","nodeType":"EnumValue","src":"409:5:32"},{"id":4725,"name":"Expand","nameLocation":"439:6:32","nodeType":"EnumValue","src":"439:6:32"}],"name":"Rounding","nameLocation":"305:8:32","nodeType":"EnumDefinition","src":"300:169:32"},{"body":{"id":4739,"nodeType":"Block","src":"731:112:32","statements":[{"AST":{"nativeSrc":"766:71:32","nodeType":"YulBlock","src":"766:71:32","statements":[{"nativeSrc":"780:16:32","nodeType":"YulAssignment","src":"780:16:32","value":{"arguments":[{"name":"a","nativeSrc":"791:1:32","nodeType":"YulIdentifier","src":"791:1:32"},{"name":"b","nativeSrc":"794:1:32","nodeType":"YulIdentifier","src":"794:1:32"}],"functionName":{"name":"add","nativeSrc":"787:3:32","nodeType":"YulIdentifier","src":"787:3:32"},"nativeSrc":"787:9:32","nodeType":"YulFunctionCall","src":"787:9:32"},"variableNames":[{"name":"low","nativeSrc":"780:3:32","nodeType":"YulIdentifier","src":"780:3:32"}]},{"nativeSrc":"809:18:32","nodeType":"YulAssignment","src":"809:18:32","value":{"arguments":[{"name":"low","nativeSrc":"820:3:32","nodeType":"YulIdentifier","src":"820:3:32"},{"name":"a","nativeSrc":"825:1:32","nodeType":"YulIdentifier","src":"825:1:32"}],"functionName":{"name":"lt","nativeSrc":"817:2:32","nodeType":"YulIdentifier","src":"817:2:32"},"nativeSrc":"817:10:32","nodeType":"YulFunctionCall","src":"817:10:32"},"variableNames":[{"name":"high","nativeSrc":"809:4:32","nodeType":"YulIdentifier","src":"809:4:32"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4729,"isOffset":false,"isSlot":false,"src":"791:1:32","valueSize":1},{"declaration":4729,"isOffset":false,"isSlot":false,"src":"825:1:32","valueSize":1},{"declaration":4731,"isOffset":false,"isSlot":false,"src":"794:1:32","valueSize":1},{"declaration":4734,"isOffset":false,"isSlot":false,"src":"809:4:32","valueSize":1},{"declaration":4736,"isOffset":false,"isSlot":false,"src":"780:3:32","valueSize":1},{"declaration":4736,"isOffset":false,"isSlot":false,"src":"820:3:32","valueSize":1}],"flags":["memory-safe"],"id":4738,"nodeType":"InlineAssembly","src":"741:96:32"}]},"documentation":{"id":4727,"nodeType":"StructuredDocumentation","src":"475:163:32","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":4740,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:32","nodeType":"FunctionDefinition","parameters":{"id":4732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4729,"mutability":"mutable","name":"a","nameLocation":"667:1:32","nodeType":"VariableDeclaration","scope":4740,"src":"659:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4728,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4731,"mutability":"mutable","name":"b","nameLocation":"678:1:32","nodeType":"VariableDeclaration","scope":4740,"src":"670:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4730,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:32"},"returnParameters":{"id":4737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4734,"mutability":"mutable","name":"high","nameLocation":"712:4:32","nodeType":"VariableDeclaration","scope":4740,"src":"704:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4733,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4736,"mutability":"mutable","name":"low","nameLocation":"726:3:32","nodeType":"VariableDeclaration","scope":4740,"src":"718:11:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4735,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:32"},"scope":6335,"src":"643:200:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4753,"nodeType":"Block","src":"1115:462:32","statements":[{"AST":{"nativeSrc":"1437:134:32","nodeType":"YulBlock","src":"1437:134:32","statements":[{"nativeSrc":"1451:30:32","nodeType":"YulVariableDeclaration","src":"1451:30:32","value":{"arguments":[{"name":"a","nativeSrc":"1468:1:32","nodeType":"YulIdentifier","src":"1468:1:32"},{"name":"b","nativeSrc":"1471:1:32","nodeType":"YulIdentifier","src":"1471:1:32"},{"arguments":[{"kind":"number","nativeSrc":"1478:1:32","nodeType":"YulLiteral","src":"1478:1:32","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"1474:3:32","nodeType":"YulIdentifier","src":"1474:3:32"},"nativeSrc":"1474:6:32","nodeType":"YulFunctionCall","src":"1474:6:32"}],"functionName":{"name":"mulmod","nativeSrc":"1461:6:32","nodeType":"YulIdentifier","src":"1461:6:32"},"nativeSrc":"1461:20:32","nodeType":"YulFunctionCall","src":"1461:20:32"},"variables":[{"name":"mm","nativeSrc":"1455:2:32","nodeType":"YulTypedName","src":"1455:2:32","type":""}]},{"nativeSrc":"1494:16:32","nodeType":"YulAssignment","src":"1494:16:32","value":{"arguments":[{"name":"a","nativeSrc":"1505:1:32","nodeType":"YulIdentifier","src":"1505:1:32"},{"name":"b","nativeSrc":"1508:1:32","nodeType":"YulIdentifier","src":"1508:1:32"}],"functionName":{"name":"mul","nativeSrc":"1501:3:32","nodeType":"YulIdentifier","src":"1501:3:32"},"nativeSrc":"1501:9:32","nodeType":"YulFunctionCall","src":"1501:9:32"},"variableNames":[{"name":"low","nativeSrc":"1494:3:32","nodeType":"YulIdentifier","src":"1494:3:32"}]},{"nativeSrc":"1523:38:32","nodeType":"YulAssignment","src":"1523:38:32","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"1539:2:32","nodeType":"YulIdentifier","src":"1539:2:32"},{"name":"low","nativeSrc":"1543:3:32","nodeType":"YulIdentifier","src":"1543:3:32"}],"functionName":{"name":"sub","nativeSrc":"1535:3:32","nodeType":"YulIdentifier","src":"1535:3:32"},"nativeSrc":"1535:12:32","nodeType":"YulFunctionCall","src":"1535:12:32"},{"arguments":[{"name":"mm","nativeSrc":"1552:2:32","nodeType":"YulIdentifier","src":"1552:2:32"},{"name":"low","nativeSrc":"1556:3:32","nodeType":"YulIdentifier","src":"1556:3:32"}],"functionName":{"name":"lt","nativeSrc":"1549:2:32","nodeType":"YulIdentifier","src":"1549:2:32"},"nativeSrc":"1549:11:32","nodeType":"YulFunctionCall","src":"1549:11:32"}],"functionName":{"name":"sub","nativeSrc":"1531:3:32","nodeType":"YulIdentifier","src":"1531:3:32"},"nativeSrc":"1531:30:32","nodeType":"YulFunctionCall","src":"1531:30:32"},"variableNames":[{"name":"high","nativeSrc":"1523:4:32","nodeType":"YulIdentifier","src":"1523:4:32"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4743,"isOffset":false,"isSlot":false,"src":"1468:1:32","valueSize":1},{"declaration":4743,"isOffset":false,"isSlot":false,"src":"1505:1:32","valueSize":1},{"declaration":4745,"isOffset":false,"isSlot":false,"src":"1471:1:32","valueSize":1},{"declaration":4745,"isOffset":false,"isSlot":false,"src":"1508:1:32","valueSize":1},{"declaration":4748,"isOffset":false,"isSlot":false,"src":"1523:4:32","valueSize":1},{"declaration":4750,"isOffset":false,"isSlot":false,"src":"1494:3:32","valueSize":1},{"declaration":4750,"isOffset":false,"isSlot":false,"src":"1543:3:32","valueSize":1},{"declaration":4750,"isOffset":false,"isSlot":false,"src":"1556:3:32","valueSize":1}],"flags":["memory-safe"],"id":4752,"nodeType":"InlineAssembly","src":"1412:159:32"}]},"documentation":{"id":4741,"nodeType":"StructuredDocumentation","src":"849:173:32","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":4754,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:32","nodeType":"FunctionDefinition","parameters":{"id":4746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4743,"mutability":"mutable","name":"a","nameLocation":"1051:1:32","nodeType":"VariableDeclaration","scope":4754,"src":"1043:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4742,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4745,"mutability":"mutable","name":"b","nameLocation":"1062:1:32","nodeType":"VariableDeclaration","scope":4754,"src":"1054:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4744,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:32"},"returnParameters":{"id":4751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4748,"mutability":"mutable","name":"high","nameLocation":"1096:4:32","nodeType":"VariableDeclaration","scope":4754,"src":"1088:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4747,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4750,"mutability":"mutable","name":"low","nameLocation":"1110:3:32","nodeType":"VariableDeclaration","scope":4754,"src":"1102:11:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4749,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:32"},"scope":6335,"src":"1027:550:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4788,"nodeType":"Block","src":"1784:149:32","statements":[{"id":4787,"nodeType":"UncheckedBlock","src":"1794:133:32","statements":[{"assignments":[4767],"declarations":[{"constant":false,"id":4767,"mutability":"mutable","name":"c","nameLocation":"1826:1:32","nodeType":"VariableDeclaration","scope":4787,"src":"1818:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4766,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4771,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4768,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4757,"src":"1830:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4769,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4759,"src":"1834:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:32"},{"expression":{"id":4776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4772,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4762,"src":"1849:7:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4773,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4767,"src":"1859:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4774,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4757,"src":"1864:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4777,"nodeType":"ExpressionStatement","src":"1849:16:32"},{"expression":{"id":4785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4778,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4764,"src":"1879:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4779,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4767,"src":"1888:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4782,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4762,"src":"1908:7:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4780,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8100,"src":"1892:8:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8100_$","typeString":"type(library SafeCast)"}},"id":4781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:32","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8099,"src":"1892:15:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4786,"nodeType":"ExpressionStatement","src":"1879:37:32"}]}]},"documentation":{"id":4755,"nodeType":"StructuredDocumentation","src":"1583:105:32","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":4789,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:32","nodeType":"FunctionDefinition","parameters":{"id":4760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4757,"mutability":"mutable","name":"a","nameLocation":"1717:1:32","nodeType":"VariableDeclaration","scope":4789,"src":"1709:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4756,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4759,"mutability":"mutable","name":"b","nameLocation":"1728:1:32","nodeType":"VariableDeclaration","scope":4789,"src":"1720:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4758,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:32"},"returnParameters":{"id":4765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4762,"mutability":"mutable","name":"success","nameLocation":"1759:7:32","nodeType":"VariableDeclaration","scope":4789,"src":"1754:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4761,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4764,"mutability":"mutable","name":"result","nameLocation":"1776:6:32","nodeType":"VariableDeclaration","scope":4789,"src":"1768:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4763,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:32"},"scope":6335,"src":"1693:240:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4823,"nodeType":"Block","src":"2143:149:32","statements":[{"id":4822,"nodeType":"UncheckedBlock","src":"2153:133:32","statements":[{"assignments":[4802],"declarations":[{"constant":false,"id":4802,"mutability":"mutable","name":"c","nameLocation":"2185:1:32","nodeType":"VariableDeclaration","scope":4822,"src":"2177:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4801,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4806,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4803,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4792,"src":"2189:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4804,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4794,"src":"2193:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:32"},{"expression":{"id":4811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4807,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4797,"src":"2208:7:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4808,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4802,"src":"2218:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4809,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4792,"src":"2223:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4812,"nodeType":"ExpressionStatement","src":"2208:16:32"},{"expression":{"id":4820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4813,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4799,"src":"2238:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4814,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4802,"src":"2247:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4817,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4797,"src":"2267:7:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4815,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8100,"src":"2251:8:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8100_$","typeString":"type(library SafeCast)"}},"id":4816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:32","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8099,"src":"2251:15:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4821,"nodeType":"ExpressionStatement","src":"2238:37:32"}]}]},"documentation":{"id":4790,"nodeType":"StructuredDocumentation","src":"1939:108:32","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":4824,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:32","nodeType":"FunctionDefinition","parameters":{"id":4795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4792,"mutability":"mutable","name":"a","nameLocation":"2076:1:32","nodeType":"VariableDeclaration","scope":4824,"src":"2068:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4791,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4794,"mutability":"mutable","name":"b","nameLocation":"2087:1:32","nodeType":"VariableDeclaration","scope":4824,"src":"2079:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4793,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:32"},"returnParameters":{"id":4800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4797,"mutability":"mutable","name":"success","nameLocation":"2118:7:32","nodeType":"VariableDeclaration","scope":4824,"src":"2113:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4796,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4799,"mutability":"mutable","name":"result","nameLocation":"2135:6:32","nodeType":"VariableDeclaration","scope":4824,"src":"2127:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4798,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:32"},"scope":6335,"src":"2052:240:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4853,"nodeType":"Block","src":"2505:391:32","statements":[{"id":4852,"nodeType":"UncheckedBlock","src":"2515:375:32","statements":[{"assignments":[4837],"declarations":[{"constant":false,"id":4837,"mutability":"mutable","name":"c","nameLocation":"2547:1:32","nodeType":"VariableDeclaration","scope":4852,"src":"2539:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4836,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4841,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4838,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4827,"src":"2551:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4839,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4829,"src":"2555:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:32"},{"AST":{"nativeSrc":"2595:188:32","nodeType":"YulBlock","src":"2595:188:32","statements":[{"nativeSrc":"2727:42:32","nodeType":"YulAssignment","src":"2727:42:32","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nativeSrc":"2748:1:32","nodeType":"YulIdentifier","src":"2748:1:32"},{"name":"a","nativeSrc":"2751:1:32","nodeType":"YulIdentifier","src":"2751:1:32"}],"functionName":{"name":"div","nativeSrc":"2744:3:32","nodeType":"YulIdentifier","src":"2744:3:32"},"nativeSrc":"2744:9:32","nodeType":"YulFunctionCall","src":"2744:9:32"},{"name":"b","nativeSrc":"2755:1:32","nodeType":"YulIdentifier","src":"2755:1:32"}],"functionName":{"name":"eq","nativeSrc":"2741:2:32","nodeType":"YulIdentifier","src":"2741:2:32"},"nativeSrc":"2741:16:32","nodeType":"YulFunctionCall","src":"2741:16:32"},{"arguments":[{"name":"a","nativeSrc":"2766:1:32","nodeType":"YulIdentifier","src":"2766:1:32"}],"functionName":{"name":"iszero","nativeSrc":"2759:6:32","nodeType":"YulIdentifier","src":"2759:6:32"},"nativeSrc":"2759:9:32","nodeType":"YulFunctionCall","src":"2759:9:32"}],"functionName":{"name":"or","nativeSrc":"2738:2:32","nodeType":"YulIdentifier","src":"2738:2:32"},"nativeSrc":"2738:31:32","nodeType":"YulFunctionCall","src":"2738:31:32"},"variableNames":[{"name":"success","nativeSrc":"2727:7:32","nodeType":"YulIdentifier","src":"2727:7:32"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4827,"isOffset":false,"isSlot":false,"src":"2751:1:32","valueSize":1},{"declaration":4827,"isOffset":false,"isSlot":false,"src":"2766:1:32","valueSize":1},{"declaration":4829,"isOffset":false,"isSlot":false,"src":"2755:1:32","valueSize":1},{"declaration":4837,"isOffset":false,"isSlot":false,"src":"2748:1:32","valueSize":1},{"declaration":4832,"isOffset":false,"isSlot":false,"src":"2727:7:32","valueSize":1}],"flags":["memory-safe"],"id":4842,"nodeType":"InlineAssembly","src":"2570:213:32"},{"expression":{"id":4850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4843,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"2842:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4844,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4837,"src":"2851:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4847,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4832,"src":"2871:7:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4845,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8100,"src":"2855:8:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8100_$","typeString":"type(library SafeCast)"}},"id":4846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:32","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8099,"src":"2855:15:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4851,"nodeType":"ExpressionStatement","src":"2842:37:32"}]}]},"documentation":{"id":4825,"nodeType":"StructuredDocumentation","src":"2298:111:32","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":4854,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:32","nodeType":"FunctionDefinition","parameters":{"id":4830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4827,"mutability":"mutable","name":"a","nameLocation":"2438:1:32","nodeType":"VariableDeclaration","scope":4854,"src":"2430:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4826,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4829,"mutability":"mutable","name":"b","nameLocation":"2449:1:32","nodeType":"VariableDeclaration","scope":4854,"src":"2441:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4828,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:32"},"returnParameters":{"id":4835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4832,"mutability":"mutable","name":"success","nameLocation":"2480:7:32","nodeType":"VariableDeclaration","scope":4854,"src":"2475:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4831,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4834,"mutability":"mutable","name":"result","nameLocation":"2497:6:32","nodeType":"VariableDeclaration","scope":4854,"src":"2489:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4833,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:32"},"scope":6335,"src":"2414:482:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4874,"nodeType":"Block","src":"3111:231:32","statements":[{"id":4873,"nodeType":"UncheckedBlock","src":"3121:215:32","statements":[{"expression":{"id":4870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4866,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4862,"src":"3145:7:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4867,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4859,"src":"3155:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4871,"nodeType":"ExpressionStatement","src":"3145:15:32"},{"AST":{"nativeSrc":"3199:127:32","nodeType":"YulBlock","src":"3199:127:32","statements":[{"nativeSrc":"3293:19:32","nodeType":"YulAssignment","src":"3293:19:32","value":{"arguments":[{"name":"a","nativeSrc":"3307:1:32","nodeType":"YulIdentifier","src":"3307:1:32"},{"name":"b","nativeSrc":"3310:1:32","nodeType":"YulIdentifier","src":"3310:1:32"}],"functionName":{"name":"div","nativeSrc":"3303:3:32","nodeType":"YulIdentifier","src":"3303:3:32"},"nativeSrc":"3303:9:32","nodeType":"YulFunctionCall","src":"3303:9:32"},"variableNames":[{"name":"result","nativeSrc":"3293:6:32","nodeType":"YulIdentifier","src":"3293:6:32"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4857,"isOffset":false,"isSlot":false,"src":"3307:1:32","valueSize":1},{"declaration":4859,"isOffset":false,"isSlot":false,"src":"3310:1:32","valueSize":1},{"declaration":4864,"isOffset":false,"isSlot":false,"src":"3293:6:32","valueSize":1}],"flags":["memory-safe"],"id":4872,"nodeType":"InlineAssembly","src":"3174:152:32"}]}]},"documentation":{"id":4855,"nodeType":"StructuredDocumentation","src":"2902:113:32","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":4875,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:32","nodeType":"FunctionDefinition","parameters":{"id":4860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4857,"mutability":"mutable","name":"a","nameLocation":"3044:1:32","nodeType":"VariableDeclaration","scope":4875,"src":"3036:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4856,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4859,"mutability":"mutable","name":"b","nameLocation":"3055:1:32","nodeType":"VariableDeclaration","scope":4875,"src":"3047:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4858,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:32"},"returnParameters":{"id":4865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4862,"mutability":"mutable","name":"success","nameLocation":"3086:7:32","nodeType":"VariableDeclaration","scope":4875,"src":"3081:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4861,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4864,"mutability":"mutable","name":"result","nameLocation":"3103:6:32","nodeType":"VariableDeclaration","scope":4875,"src":"3095:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4863,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:32"},"scope":6335,"src":"3020:322:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4895,"nodeType":"Block","src":"3567:231:32","statements":[{"id":4894,"nodeType":"UncheckedBlock","src":"3577:215:32","statements":[{"expression":{"id":4891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4887,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4883,"src":"3601:7:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4888,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4880,"src":"3611:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4892,"nodeType":"ExpressionStatement","src":"3601:15:32"},{"AST":{"nativeSrc":"3655:127:32","nodeType":"YulBlock","src":"3655:127:32","statements":[{"nativeSrc":"3749:19:32","nodeType":"YulAssignment","src":"3749:19:32","value":{"arguments":[{"name":"a","nativeSrc":"3763:1:32","nodeType":"YulIdentifier","src":"3763:1:32"},{"name":"b","nativeSrc":"3766:1:32","nodeType":"YulIdentifier","src":"3766:1:32"}],"functionName":{"name":"mod","nativeSrc":"3759:3:32","nodeType":"YulIdentifier","src":"3759:3:32"},"nativeSrc":"3759:9:32","nodeType":"YulFunctionCall","src":"3759:9:32"},"variableNames":[{"name":"result","nativeSrc":"3749:6:32","nodeType":"YulIdentifier","src":"3749:6:32"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4878,"isOffset":false,"isSlot":false,"src":"3763:1:32","valueSize":1},{"declaration":4880,"isOffset":false,"isSlot":false,"src":"3766:1:32","valueSize":1},{"declaration":4885,"isOffset":false,"isSlot":false,"src":"3749:6:32","valueSize":1}],"flags":["memory-safe"],"id":4893,"nodeType":"InlineAssembly","src":"3630:152:32"}]}]},"documentation":{"id":4876,"nodeType":"StructuredDocumentation","src":"3348:123:32","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":4896,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:32","nodeType":"FunctionDefinition","parameters":{"id":4881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4878,"mutability":"mutable","name":"a","nameLocation":"3500:1:32","nodeType":"VariableDeclaration","scope":4896,"src":"3492:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4877,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4880,"mutability":"mutable","name":"b","nameLocation":"3511:1:32","nodeType":"VariableDeclaration","scope":4896,"src":"3503:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4879,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:32"},"returnParameters":{"id":4886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4883,"mutability":"mutable","name":"success","nameLocation":"3542:7:32","nodeType":"VariableDeclaration","scope":4896,"src":"3537:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4882,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4885,"mutability":"mutable","name":"result","nameLocation":"3559:6:32","nodeType":"VariableDeclaration","scope":4896,"src":"3551:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4884,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:32"},"scope":6335,"src":"3476:322:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4925,"nodeType":"Block","src":"3989:122:32","statements":[{"assignments":[4907,4909],"declarations":[{"constant":false,"id":4907,"mutability":"mutable","name":"success","nameLocation":"4005:7:32","nodeType":"VariableDeclaration","scope":4925,"src":"4000:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4906,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4909,"mutability":"mutable","name":"result","nameLocation":"4022:6:32","nodeType":"VariableDeclaration","scope":4925,"src":"4014:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4908,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4914,"initialValue":{"arguments":[{"id":4911,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4899,"src":"4039:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4912,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4901,"src":"4042:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4910,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"4032:6:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":4913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:32"},{"expression":{"arguments":[{"id":4916,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4907,"src":"4069:7:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4917,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4909,"src":"4078:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":4920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4919,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:32","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":4918,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:32","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":4922,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:32","memberName":"max","nodeType":"MemberAccess","src":"4086:17:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4915,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5003,"src":"4061:7:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4905,"id":4924,"nodeType":"Return","src":"4054:50:32"}]},"documentation":{"id":4897,"nodeType":"StructuredDocumentation","src":"3804:103:32","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":4926,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:32","nodeType":"FunctionDefinition","parameters":{"id":4902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4899,"mutability":"mutable","name":"a","nameLocation":"3943:1:32","nodeType":"VariableDeclaration","scope":4926,"src":"3935:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4898,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4901,"mutability":"mutable","name":"b","nameLocation":"3954:1:32","nodeType":"VariableDeclaration","scope":4926,"src":"3946:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4900,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:32"},"returnParameters":{"id":4905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4904,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4926,"src":"3980:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4903,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:32"},"scope":6335,"src":"3912:199:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4945,"nodeType":"Block","src":"4294:73:32","statements":[{"assignments":[null,4937],"declarations":[null,{"constant":false,"id":4937,"mutability":"mutable","name":"result","nameLocation":"4315:6:32","nodeType":"VariableDeclaration","scope":4945,"src":"4307:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4936,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4942,"initialValue":{"arguments":[{"id":4939,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4929,"src":"4332:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4940,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4931,"src":"4335:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4938,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4824,"src":"4325:6:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":4941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:32"},{"expression":{"id":4943,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"4354:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4935,"id":4944,"nodeType":"Return","src":"4347:13:32"}]},"documentation":{"id":4927,"nodeType":"StructuredDocumentation","src":"4117:95:32","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":4946,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:32","nodeType":"FunctionDefinition","parameters":{"id":4932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4929,"mutability":"mutable","name":"a","nameLocation":"4248:1:32","nodeType":"VariableDeclaration","scope":4946,"src":"4240:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4928,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4931,"mutability":"mutable","name":"b","nameLocation":"4259:1:32","nodeType":"VariableDeclaration","scope":4946,"src":"4251:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4930,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:32"},"returnParameters":{"id":4935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4934,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4946,"src":"4285:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4933,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:32"},"scope":6335,"src":"4217:150:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4975,"nodeType":"Block","src":"4564:122:32","statements":[{"assignments":[4957,4959],"declarations":[{"constant":false,"id":4957,"mutability":"mutable","name":"success","nameLocation":"4580:7:32","nodeType":"VariableDeclaration","scope":4975,"src":"4575:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4956,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4959,"mutability":"mutable","name":"result","nameLocation":"4597:6:32","nodeType":"VariableDeclaration","scope":4975,"src":"4589:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4958,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4964,"initialValue":{"arguments":[{"id":4961,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4949,"src":"4614:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4962,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"4617:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4960,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4854,"src":"4607:6:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":4963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:32"},{"expression":{"arguments":[{"id":4966,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4957,"src":"4644:7:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4967,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4959,"src":"4653:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":4970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4969,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:32","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":4968,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:32","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":4972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:32","memberName":"max","nodeType":"MemberAccess","src":"4661:17:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4965,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5003,"src":"4636:7:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4955,"id":4974,"nodeType":"Return","src":"4629:50:32"}]},"documentation":{"id":4947,"nodeType":"StructuredDocumentation","src":"4373:109:32","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":4976,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:32","nodeType":"FunctionDefinition","parameters":{"id":4952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4949,"mutability":"mutable","name":"a","nameLocation":"4518:1:32","nodeType":"VariableDeclaration","scope":4976,"src":"4510:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4948,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4951,"mutability":"mutable","name":"b","nameLocation":"4529:1:32","nodeType":"VariableDeclaration","scope":4976,"src":"4521:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4950,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:32"},"returnParameters":{"id":4955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4954,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4976,"src":"4555:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4953,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:32"},"scope":6335,"src":"4487:199:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5002,"nodeType":"Block","src":"5158:207:32","statements":[{"id":5001,"nodeType":"UncheckedBlock","src":"5168:191:32","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4988,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4983,"src":"5306:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4989,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4981,"src":"5312:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4990,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4983,"src":"5316:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4992,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4995,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4979,"src":"5337:9:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4993,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8100,"src":"5321:8:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8100_$","typeString":"type(library SafeCast)"}},"id":4994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:32","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8099,"src":"5321:15:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4998,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4987,"id":5000,"nodeType":"Return","src":"5299:49:32"}]}]},"documentation":{"id":4977,"nodeType":"StructuredDocumentation","src":"4692:374:32","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":5003,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:32","nodeType":"FunctionDefinition","parameters":{"id":4984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4979,"mutability":"mutable","name":"condition","nameLocation":"5093:9:32","nodeType":"VariableDeclaration","scope":5003,"src":"5088:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4978,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4981,"mutability":"mutable","name":"a","nameLocation":"5112:1:32","nodeType":"VariableDeclaration","scope":5003,"src":"5104:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4980,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4983,"mutability":"mutable","name":"b","nameLocation":"5123:1:32","nodeType":"VariableDeclaration","scope":5003,"src":"5115:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4982,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:32"},"returnParameters":{"id":4987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4986,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5003,"src":"5149:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4985,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:32"},"scope":6335,"src":"5071:294:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5021,"nodeType":"Block","src":"5502:44:32","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5014,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5006,"src":"5527:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5015,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5008,"src":"5531:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5017,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5006,"src":"5534:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5018,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5008,"src":"5537:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5013,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5003,"src":"5519:7:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5012,"id":5020,"nodeType":"Return","src":"5512:27:32"}]},"documentation":{"id":5004,"nodeType":"StructuredDocumentation","src":"5371:59:32","text":" @dev Returns the largest of two numbers."},"id":5022,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:32","nodeType":"FunctionDefinition","parameters":{"id":5009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5006,"mutability":"mutable","name":"a","nameLocation":"5456:1:32","nodeType":"VariableDeclaration","scope":5022,"src":"5448:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5005,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5008,"mutability":"mutable","name":"b","nameLocation":"5467:1:32","nodeType":"VariableDeclaration","scope":5022,"src":"5459:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5007,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:32"},"returnParameters":{"id":5012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5011,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5022,"src":"5493:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5010,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:32"},"scope":6335,"src":"5435:111:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5040,"nodeType":"Block","src":"5684:44:32","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5033,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5025,"src":"5709:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5034,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5027,"src":"5713:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5036,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5025,"src":"5716:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5037,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5027,"src":"5719:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5032,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5003,"src":"5701:7:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5031,"id":5039,"nodeType":"Return","src":"5694:27:32"}]},"documentation":{"id":5023,"nodeType":"StructuredDocumentation","src":"5552:60:32","text":" @dev Returns the smallest of two numbers."},"id":5041,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:32","nodeType":"FunctionDefinition","parameters":{"id":5028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5025,"mutability":"mutable","name":"a","nameLocation":"5638:1:32","nodeType":"VariableDeclaration","scope":5041,"src":"5630:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5024,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5027,"mutability":"mutable","name":"b","nameLocation":"5649:1:32","nodeType":"VariableDeclaration","scope":5041,"src":"5641:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5026,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:32"},"returnParameters":{"id":5031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5030,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5041,"src":"5675:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5029,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:32"},"scope":6335,"src":"5617:111:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5063,"nodeType":"Block","src":"5912:82:32","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5051,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5044,"src":"5967:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":5052,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5046,"src":"5971:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5054,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5055,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5044,"src":"5977:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5056,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5046,"src":"5981:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5058,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":5059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:32","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5050,"id":5062,"nodeType":"Return","src":"5959:28:32"}]},"documentation":{"id":5042,"nodeType":"StructuredDocumentation","src":"5734:102:32","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":5064,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:32","nodeType":"FunctionDefinition","parameters":{"id":5047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5044,"mutability":"mutable","name":"a","nameLocation":"5866:1:32","nodeType":"VariableDeclaration","scope":5064,"src":"5858:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5043,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5046,"mutability":"mutable","name":"b","nameLocation":"5877:1:32","nodeType":"VariableDeclaration","scope":5064,"src":"5869:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5045,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:32"},"returnParameters":{"id":5050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5049,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5064,"src":"5903:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5048,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:32"},"scope":6335,"src":"5841:153:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5104,"nodeType":"Block","src":"6286:633:32","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5074,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5069,"src":"6300:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5085,"nodeType":"IfStatement","src":"6296:150:32","trueBody":{"id":5084,"nodeType":"Block","src":"6308:138:32","statements":[{"expression":{"arguments":[{"expression":{"id":5080,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2166,"src":"6412:5:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2166_$","typeString":"type(library Panic)"}},"id":5081,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:32","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2133,"src":"6412:22:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5077,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2166,"src":"6400:5:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2166_$","typeString":"type(library Panic)"}},"id":5079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:32","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2165,"src":"6400:11:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5083,"nodeType":"ExpressionStatement","src":"6400:35:32"}]}},{"id":5103,"nodeType":"UncheckedBlock","src":"6829:84:32","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5088,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5067,"src":"6876:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5086,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8100,"src":"6860:8:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8100_$","typeString":"type(library SafeCast)"}},"id":5087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:32","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8099,"src":"6860:15:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5092,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5067,"src":"6887:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:32","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5095,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5096,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5069,"src":"6896:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:32","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5100,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5073,"id":5102,"nodeType":"Return","src":"6853:49:32"}]}]},"documentation":{"id":5065,"nodeType":"StructuredDocumentation","src":"6000:210:32","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":5105,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:32","nodeType":"FunctionDefinition","parameters":{"id":5070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5067,"mutability":"mutable","name":"a","nameLocation":"6240:1:32","nodeType":"VariableDeclaration","scope":5105,"src":"6232:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5066,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5069,"mutability":"mutable","name":"b","nameLocation":"6251:1:32","nodeType":"VariableDeclaration","scope":5105,"src":"6243:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5068,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:32"},"returnParameters":{"id":5073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5072,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5105,"src":"6277:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5071,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:32"},"scope":6335,"src":"6215:704:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5240,"nodeType":"Block","src":"7340:3585:32","statements":[{"id":5239,"nodeType":"UncheckedBlock","src":"7350:3569:32","statements":[{"assignments":[5118,5120],"declarations":[{"constant":false,"id":5118,"mutability":"mutable","name":"high","nameLocation":"7383:4:32","nodeType":"VariableDeclaration","scope":5239,"src":"7375:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5117,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5120,"mutability":"mutable","name":"low","nameLocation":"7397:3:32","nodeType":"VariableDeclaration","scope":5239,"src":"7389:11:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5119,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5125,"initialValue":{"arguments":[{"id":5122,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5108,"src":"7411:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5123,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5110,"src":"7414:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5121,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4754,"src":"7404:6:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":5124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:32"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5126,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5118,"src":"7498:4:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5134,"nodeType":"IfStatement","src":"7494:365:32","trueBody":{"id":5133,"nodeType":"Block","src":"7509:350:32","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5129,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5120,"src":"7827:3:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5130,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5112,"src":"7833:11:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5116,"id":5132,"nodeType":"Return","src":"7820:24:32"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5135,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5112,"src":"7969:11:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":5136,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5118,"src":"7984:4:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5153,"nodeType":"IfStatement","src":"7965:142:32","trueBody":{"id":5152,"nodeType":"Block","src":"7990:117:32","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5142,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5112,"src":"8028:11:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":5145,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2166,"src":"8046:5:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2166_$","typeString":"type(library Panic)"}},"id":5146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:32","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2133,"src":"8046:22:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5147,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2166,"src":"8070:5:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2166_$","typeString":"type(library Panic)"}},"id":5148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:32","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":2129,"src":"8070:20:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5141,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5003,"src":"8020:7:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5138,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2166,"src":"8008:5:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2166_$","typeString":"type(library Panic)"}},"id":5140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:32","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2165,"src":"8008:11:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5151,"nodeType":"ExpressionStatement","src":"8008:84:32"}]}},{"assignments":[5155],"declarations":[{"constant":false,"id":5155,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:32","nodeType":"VariableDeclaration","scope":5239,"src":"8359:17:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5154,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5156,"nodeType":"VariableDeclarationStatement","src":"8359:17:32"},{"AST":{"nativeSrc":"8415:283:32","nodeType":"YulBlock","src":"8415:283:32","statements":[{"nativeSrc":"8484:38:32","nodeType":"YulAssignment","src":"8484:38:32","value":{"arguments":[{"name":"x","nativeSrc":"8504:1:32","nodeType":"YulIdentifier","src":"8504:1:32"},{"name":"y","nativeSrc":"8507:1:32","nodeType":"YulIdentifier","src":"8507:1:32"},{"name":"denominator","nativeSrc":"8510:11:32","nodeType":"YulIdentifier","src":"8510:11:32"}],"functionName":{"name":"mulmod","nativeSrc":"8497:6:32","nodeType":"YulIdentifier","src":"8497:6:32"},"nativeSrc":"8497:25:32","nodeType":"YulFunctionCall","src":"8497:25:32"},"variableNames":[{"name":"remainder","nativeSrc":"8484:9:32","nodeType":"YulIdentifier","src":"8484:9:32"}]},{"nativeSrc":"8604:37:32","nodeType":"YulAssignment","src":"8604:37:32","value":{"arguments":[{"name":"high","nativeSrc":"8616:4:32","nodeType":"YulIdentifier","src":"8616:4:32"},{"arguments":[{"name":"remainder","nativeSrc":"8625:9:32","nodeType":"YulIdentifier","src":"8625:9:32"},{"name":"low","nativeSrc":"8636:3:32","nodeType":"YulIdentifier","src":"8636:3:32"}],"functionName":{"name":"gt","nativeSrc":"8622:2:32","nodeType":"YulIdentifier","src":"8622:2:32"},"nativeSrc":"8622:18:32","nodeType":"YulFunctionCall","src":"8622:18:32"}],"functionName":{"name":"sub","nativeSrc":"8612:3:32","nodeType":"YulIdentifier","src":"8612:3:32"},"nativeSrc":"8612:29:32","nodeType":"YulFunctionCall","src":"8612:29:32"},"variableNames":[{"name":"high","nativeSrc":"8604:4:32","nodeType":"YulIdentifier","src":"8604:4:32"}]},{"nativeSrc":"8658:26:32","nodeType":"YulAssignment","src":"8658:26:32","value":{"arguments":[{"name":"low","nativeSrc":"8669:3:32","nodeType":"YulIdentifier","src":"8669:3:32"},{"name":"remainder","nativeSrc":"8674:9:32","nodeType":"YulIdentifier","src":"8674:9:32"}],"functionName":{"name":"sub","nativeSrc":"8665:3:32","nodeType":"YulIdentifier","src":"8665:3:32"},"nativeSrc":"8665:19:32","nodeType":"YulFunctionCall","src":"8665:19:32"},"variableNames":[{"name":"low","nativeSrc":"8658:3:32","nodeType":"YulIdentifier","src":"8658:3:32"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5112,"isOffset":false,"isSlot":false,"src":"8510:11:32","valueSize":1},{"declaration":5118,"isOffset":false,"isSlot":false,"src":"8604:4:32","valueSize":1},{"declaration":5118,"isOffset":false,"isSlot":false,"src":"8616:4:32","valueSize":1},{"declaration":5120,"isOffset":false,"isSlot":false,"src":"8636:3:32","valueSize":1},{"declaration":5120,"isOffset":false,"isSlot":false,"src":"8658:3:32","valueSize":1},{"declaration":5120,"isOffset":false,"isSlot":false,"src":"8669:3:32","valueSize":1},{"declaration":5155,"isOffset":false,"isSlot":false,"src":"8484:9:32","valueSize":1},{"declaration":5155,"isOffset":false,"isSlot":false,"src":"8625:9:32","valueSize":1},{"declaration":5155,"isOffset":false,"isSlot":false,"src":"8674:9:32","valueSize":1},{"declaration":5108,"isOffset":false,"isSlot":false,"src":"8504:1:32","valueSize":1},{"declaration":5110,"isOffset":false,"isSlot":false,"src":"8507:1:32","valueSize":1}],"flags":["memory-safe"],"id":5157,"nodeType":"InlineAssembly","src":"8390:308:32"},{"assignments":[5159],"declarations":[{"constant":false,"id":5159,"mutability":"mutable","name":"twos","nameLocation":"8910:4:32","nodeType":"VariableDeclaration","scope":5239,"src":"8902:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5158,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5166,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5160,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5112,"src":"8917:11:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":5161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5162,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5112,"src":"8936:11:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5164,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:32"},{"AST":{"nativeSrc":"8987:359:32","nodeType":"YulBlock","src":"8987:359:32","statements":[{"nativeSrc":"9052:37:32","nodeType":"YulAssignment","src":"9052:37:32","value":{"arguments":[{"name":"denominator","nativeSrc":"9071:11:32","nodeType":"YulIdentifier","src":"9071:11:32"},{"name":"twos","nativeSrc":"9084:4:32","nodeType":"YulIdentifier","src":"9084:4:32"}],"functionName":{"name":"div","nativeSrc":"9067:3:32","nodeType":"YulIdentifier","src":"9067:3:32"},"nativeSrc":"9067:22:32","nodeType":"YulFunctionCall","src":"9067:22:32"},"variableNames":[{"name":"denominator","nativeSrc":"9052:11:32","nodeType":"YulIdentifier","src":"9052:11:32"}]},{"nativeSrc":"9153:21:32","nodeType":"YulAssignment","src":"9153:21:32","value":{"arguments":[{"name":"low","nativeSrc":"9164:3:32","nodeType":"YulIdentifier","src":"9164:3:32"},{"name":"twos","nativeSrc":"9169:4:32","nodeType":"YulIdentifier","src":"9169:4:32"}],"functionName":{"name":"div","nativeSrc":"9160:3:32","nodeType":"YulIdentifier","src":"9160:3:32"},"nativeSrc":"9160:14:32","nodeType":"YulFunctionCall","src":"9160:14:32"},"variableNames":[{"name":"low","nativeSrc":"9153:3:32","nodeType":"YulIdentifier","src":"9153:3:32"}]},{"nativeSrc":"9293:39:32","nodeType":"YulAssignment","src":"9293:39:32","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9313:1:32","nodeType":"YulLiteral","src":"9313:1:32","type":"","value":"0"},{"name":"twos","nativeSrc":"9316:4:32","nodeType":"YulIdentifier","src":"9316:4:32"}],"functionName":{"name":"sub","nativeSrc":"9309:3:32","nodeType":"YulIdentifier","src":"9309:3:32"},"nativeSrc":"9309:12:32","nodeType":"YulFunctionCall","src":"9309:12:32"},{"name":"twos","nativeSrc":"9323:4:32","nodeType":"YulIdentifier","src":"9323:4:32"}],"functionName":{"name":"div","nativeSrc":"9305:3:32","nodeType":"YulIdentifier","src":"9305:3:32"},"nativeSrc":"9305:23:32","nodeType":"YulFunctionCall","src":"9305:23:32"},{"kind":"number","nativeSrc":"9330:1:32","nodeType":"YulLiteral","src":"9330:1:32","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"9301:3:32","nodeType":"YulIdentifier","src":"9301:3:32"},"nativeSrc":"9301:31:32","nodeType":"YulFunctionCall","src":"9301:31:32"},"variableNames":[{"name":"twos","nativeSrc":"9293:4:32","nodeType":"YulIdentifier","src":"9293:4:32"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5112,"isOffset":false,"isSlot":false,"src":"9052:11:32","valueSize":1},{"declaration":5112,"isOffset":false,"isSlot":false,"src":"9071:11:32","valueSize":1},{"declaration":5120,"isOffset":false,"isSlot":false,"src":"9153:3:32","valueSize":1},{"declaration":5120,"isOffset":false,"isSlot":false,"src":"9164:3:32","valueSize":1},{"declaration":5159,"isOffset":false,"isSlot":false,"src":"9084:4:32","valueSize":1},{"declaration":5159,"isOffset":false,"isSlot":false,"src":"9169:4:32","valueSize":1},{"declaration":5159,"isOffset":false,"isSlot":false,"src":"9293:4:32","valueSize":1},{"declaration":5159,"isOffset":false,"isSlot":false,"src":"9316:4:32","valueSize":1},{"declaration":5159,"isOffset":false,"isSlot":false,"src":"9323:4:32","valueSize":1}],"flags":["memory-safe"],"id":5167,"nodeType":"InlineAssembly","src":"8962:384:32"},{"expression":{"id":5172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5168,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5120,"src":"9409:3:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5169,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5118,"src":"9416:4:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5170,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5159,"src":"9423:4:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5173,"nodeType":"ExpressionStatement","src":"9409:18:32"},{"assignments":[5175],"declarations":[{"constant":false,"id":5175,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:32","nodeType":"VariableDeclaration","scope":5239,"src":"9762:15:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5174,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5182,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":5176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:32","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5177,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5112,"src":"9785:11:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5179,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":5180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:32","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:32"},{"expression":{"id":5189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5183,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5175,"src":"10018:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:32","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5185,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5112,"src":"10033:11:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5186,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5175,"src":"10047:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5190,"nodeType":"ExpressionStatement","src":"10018:36:32"},{"expression":{"id":5197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5191,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5175,"src":"10088:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:32","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5193,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5112,"src":"10103:11:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5194,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5175,"src":"10117:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5198,"nodeType":"ExpressionStatement","src":"10088:36:32"},{"expression":{"id":5205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5199,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5175,"src":"10160:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:32","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5201,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5112,"src":"10175:11:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5202,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5175,"src":"10189:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5206,"nodeType":"ExpressionStatement","src":"10160:36:32"},{"expression":{"id":5213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5207,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5175,"src":"10231:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:32","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5209,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5112,"src":"10246:11:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5210,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5175,"src":"10260:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5214,"nodeType":"ExpressionStatement","src":"10231:36:32"},{"expression":{"id":5221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5215,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5175,"src":"10304:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:32","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5217,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5112,"src":"10319:11:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5218,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5175,"src":"10333:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5222,"nodeType":"ExpressionStatement","src":"10304:36:32"},{"expression":{"id":5229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5223,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5175,"src":"10378:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:32","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5225,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5112,"src":"10393:11:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5226,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5175,"src":"10407:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5230,"nodeType":"ExpressionStatement","src":"10378:36:32"},{"expression":{"id":5235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5231,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5115,"src":"10859:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5232,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5120,"src":"10868:3:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5233,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5175,"src":"10874:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5236,"nodeType":"ExpressionStatement","src":"10859:22:32"},{"expression":{"id":5237,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5115,"src":"10902:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5116,"id":5238,"nodeType":"Return","src":"10895:13:32"}]}]},"documentation":{"id":5106,"nodeType":"StructuredDocumentation","src":"6925:312:32","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":5241,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:32","nodeType":"FunctionDefinition","parameters":{"id":5113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5108,"mutability":"mutable","name":"x","nameLocation":"7266:1:32","nodeType":"VariableDeclaration","scope":5241,"src":"7258:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5107,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5110,"mutability":"mutable","name":"y","nameLocation":"7277:1:32","nodeType":"VariableDeclaration","scope":5241,"src":"7269:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5109,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5112,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:32","nodeType":"VariableDeclaration","scope":5241,"src":"7280:19:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5111,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:32"},"returnParameters":{"id":5116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5115,"mutability":"mutable","name":"result","nameLocation":"7332:6:32","nodeType":"VariableDeclaration","scope":5241,"src":"7324:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5114,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:32"},"scope":6335,"src":"7242:3683:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5277,"nodeType":"Block","src":"11164:128:32","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5257,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"11188:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5258,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5246,"src":"11191:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5259,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5248,"src":"11194:11:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5256,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[5241,5278],"referencedDeclaration":5241,"src":"11181:6:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5264,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5251,"src":"11242:8:32","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4726","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4726","typeString":"enum Math.Rounding"}],"id":5263,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6334,"src":"11225:16:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4726_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5267,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"11262:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5268,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5246,"src":"11265:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5269,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5248,"src":"11268:11:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5266,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:32","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5261,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8100,"src":"11209:8:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8100_$","typeString":"type(library SafeCast)"}},"id":5262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:32","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8099,"src":"11209:15:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5255,"id":5276,"nodeType":"Return","src":"11174:111:32"}]},"documentation":{"id":5242,"nodeType":"StructuredDocumentation","src":"10931:118:32","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":5278,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:32","nodeType":"FunctionDefinition","parameters":{"id":5252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5244,"mutability":"mutable","name":"x","nameLocation":"11078:1:32","nodeType":"VariableDeclaration","scope":5278,"src":"11070:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5243,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5246,"mutability":"mutable","name":"y","nameLocation":"11089:1:32","nodeType":"VariableDeclaration","scope":5278,"src":"11081:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5245,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5248,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:32","nodeType":"VariableDeclaration","scope":5278,"src":"11092:19:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5247,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5251,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:32","nodeType":"VariableDeclaration","scope":5278,"src":"11113:17:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4726","typeString":"enum Math.Rounding"},"typeName":{"id":5250,"nodeType":"UserDefinedTypeName","pathNode":{"id":5249,"name":"Rounding","nameLocations":["11113:8:32"],"nodeType":"IdentifierPath","referencedDeclaration":4726,"src":"11113:8:32"},"referencedDeclaration":4726,"src":"11113:8:32","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4726","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:32"},"returnParameters":{"id":5255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5254,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5278,"src":"11155:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5253,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:32"},"scope":6335,"src":"11054:238:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5327,"nodeType":"Block","src":"11500:245:32","statements":[{"id":5326,"nodeType":"UncheckedBlock","src":"11510:229:32","statements":[{"assignments":[5291,5293],"declarations":[{"constant":false,"id":5291,"mutability":"mutable","name":"high","nameLocation":"11543:4:32","nodeType":"VariableDeclaration","scope":5326,"src":"11535:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5290,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5293,"mutability":"mutable","name":"low","nameLocation":"11557:3:32","nodeType":"VariableDeclaration","scope":5326,"src":"11549:11:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5292,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5298,"initialValue":{"arguments":[{"id":5295,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5281,"src":"11571:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5296,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5283,"src":"11574:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5294,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4754,"src":"11564:6:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":5297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:32"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5299,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5291,"src":"11594:4:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:32","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":5301,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5285,"src":"11607:1:32","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5312,"nodeType":"IfStatement","src":"11590:86:32","trueBody":{"id":5311,"nodeType":"Block","src":"11610:66:32","statements":[{"expression":{"arguments":[{"expression":{"id":5307,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2166,"src":"11640:5:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2166_$","typeString":"type(library Panic)"}},"id":5308,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:32","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":2129,"src":"11640:20:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5304,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2166,"src":"11628:5:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2166_$","typeString":"type(library Panic)"}},"id":5306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:32","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2165,"src":"11628:11:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5310,"nodeType":"ExpressionStatement","src":"11628:33:32"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5313,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5291,"src":"11697:4:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":5316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":5314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:32","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5315,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5285,"src":"11712:1:32","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:32","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":5317,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:32","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5319,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5320,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5293,"src":"11719:3:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5321,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5285,"src":"11726:1:32","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5323,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5289,"id":5325,"nodeType":"Return","src":"11689:39:32"}]}]},"documentation":{"id":5279,"nodeType":"StructuredDocumentation","src":"11298:111:32","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":5328,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:32","nodeType":"FunctionDefinition","parameters":{"id":5286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5281,"mutability":"mutable","name":"x","nameLocation":"11438:1:32","nodeType":"VariableDeclaration","scope":5328,"src":"11430:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5280,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5283,"mutability":"mutable","name":"y","nameLocation":"11449:1:32","nodeType":"VariableDeclaration","scope":5328,"src":"11441:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5282,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5285,"mutability":"mutable","name":"n","nameLocation":"11458:1:32","nodeType":"VariableDeclaration","scope":5328,"src":"11452:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5284,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:32","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:32"},"returnParameters":{"id":5289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5288,"mutability":"mutable","name":"result","nameLocation":"11492:6:32","nodeType":"VariableDeclaration","scope":5328,"src":"11484:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5287,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:32"},"scope":6335,"src":"11414:331:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5366,"nodeType":"Block","src":"11963:113:32","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5344,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5331,"src":"11987:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5345,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5333,"src":"11990:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5346,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5335,"src":"11993:1:32","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":5343,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[5328,5367],"referencedDeclaration":5328,"src":"11980:6:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":5347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5351,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5338,"src":"12031:8:32","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4726","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4726","typeString":"enum Math.Rounding"}],"id":5350,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6334,"src":"12014:16:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4726_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5354,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5331,"src":"12051:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5355,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5333,"src":"12054:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:32","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":5357,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5335,"src":"12062:1:32","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5353,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:32","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5348,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8100,"src":"11998:8:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8100_$","typeString":"type(library SafeCast)"}},"id":5349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:32","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8099,"src":"11998:15:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5342,"id":5365,"nodeType":"Return","src":"11973:96:32"}]},"documentation":{"id":5329,"nodeType":"StructuredDocumentation","src":"11751:109:32","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":5367,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:32","nodeType":"FunctionDefinition","parameters":{"id":5339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5331,"mutability":"mutable","name":"x","nameLocation":"11889:1:32","nodeType":"VariableDeclaration","scope":5367,"src":"11881:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5330,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5333,"mutability":"mutable","name":"y","nameLocation":"11900:1:32","nodeType":"VariableDeclaration","scope":5367,"src":"11892:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5332,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5335,"mutability":"mutable","name":"n","nameLocation":"11909:1:32","nodeType":"VariableDeclaration","scope":5367,"src":"11903:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5334,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:32","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5338,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:32","nodeType":"VariableDeclaration","scope":5367,"src":"11912:17:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4726","typeString":"enum Math.Rounding"},"typeName":{"id":5337,"nodeType":"UserDefinedTypeName","pathNode":{"id":5336,"name":"Rounding","nameLocations":["11912:8:32"],"nodeType":"IdentifierPath","referencedDeclaration":4726,"src":"11912:8:32"},"referencedDeclaration":4726,"src":"11912:8:32","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4726","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:32"},"returnParameters":{"id":5342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5341,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5367,"src":"11954:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5340,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:32"},"scope":6335,"src":"11865:211:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5463,"nodeType":"Block","src":"12710:1849:32","statements":[{"id":5462,"nodeType":"UncheckedBlock","src":"12720:1833:32","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5377,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5372,"src":"12748:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5382,"nodeType":"IfStatement","src":"12744:20:32","trueBody":{"expression":{"hexValue":"30","id":5380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":5376,"id":5381,"nodeType":"Return","src":"12756:8:32"}},{"assignments":[5384],"declarations":[{"constant":false,"id":5384,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:32","nodeType":"VariableDeclaration","scope":5462,"src":"13235:17:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5383,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5388,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5385,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5370,"src":"13255:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":5386,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5372,"src":"13259:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:32"},{"assignments":[5390],"declarations":[{"constant":false,"id":5390,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:32","nodeType":"VariableDeclaration","scope":5462,"src":"13274:11:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5389,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5392,"initialValue":{"id":5391,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5372,"src":"13288:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:32"},{"assignments":[5394],"declarations":[{"constant":false,"id":5394,"mutability":"mutable","name":"x","nameLocation":"13432:1:32","nodeType":"VariableDeclaration","scope":5462,"src":"13425:8:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5393,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5396,"initialValue":{"hexValue":"30","id":5395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:32"},{"assignments":[5398],"declarations":[{"constant":false,"id":5398,"mutability":"mutable","name":"y","nameLocation":"13458:1:32","nodeType":"VariableDeclaration","scope":5462,"src":"13451:8:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5397,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5400,"initialValue":{"hexValue":"31","id":5399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:32","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:32"},{"body":{"id":5437,"nodeType":"Block","src":"13501:882:32","statements":[{"assignments":[5405],"declarations":[{"constant":false,"id":5405,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:32","nodeType":"VariableDeclaration","scope":5437,"src":"13519:16:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5404,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5409,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5406,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5390,"src":"13538:3:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5407,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5384,"src":"13544:9:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:32"},{"expression":{"id":5420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":5410,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5390,"src":"13573:3:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5411,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5384,"src":"13578:9:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5412,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:32","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":5413,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5384,"src":"13678:9:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5414,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5390,"src":"13923:3:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5415,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5384,"src":"13929:9:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5416,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"13941:8:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5419,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:32","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:32","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5421,"nodeType":"ExpressionStatement","src":"13572:395:32"},{"expression":{"id":5435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":5422,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5394,"src":"13987:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":5423,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5398,"src":"13990:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5424,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:32","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":5425,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5398,"src":"14072:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5426,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5394,"src":"14326:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5427,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5398,"src":"14330:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":5430,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"14341:8:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5429,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:32","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5428,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:32","typeDescriptions":{}}},"id":5431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5434,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:32","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:32","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5436,"nodeType":"ExpressionStatement","src":"13986:382:32"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5401,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5384,"src":"13485:9:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5438,"nodeType":"WhileStatement","src":"13478:905:32"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5439,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5390,"src":"14401:3:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":5440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:32","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5444,"nodeType":"IfStatement","src":"14397:22:32","trueBody":{"expression":{"hexValue":"30","id":5442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":5376,"id":5443,"nodeType":"Return","src":"14411:8:32"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5446,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5394,"src":"14470:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":5447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5449,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5372,"src":"14477:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":5453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:32","subExpression":{"id":5452,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5394,"src":"14490:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5451,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5450,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:32","typeDescriptions":{}}},"id":5454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":5458,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5394,"src":"14502:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5456,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:32","typeDescriptions":{}}},"id":5459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5445,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5003,"src":"14462:7:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5376,"id":5461,"nodeType":"Return","src":"14455:50:32"}]}]},"documentation":{"id":5368,"nodeType":"StructuredDocumentation","src":"12082:553:32","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":5464,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:32","nodeType":"FunctionDefinition","parameters":{"id":5373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5370,"mutability":"mutable","name":"a","nameLocation":"12664:1:32","nodeType":"VariableDeclaration","scope":5464,"src":"12656:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5369,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5372,"mutability":"mutable","name":"n","nameLocation":"12675:1:32","nodeType":"VariableDeclaration","scope":5464,"src":"12667:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5371,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:32"},"returnParameters":{"id":5376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5375,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5464,"src":"12701:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5374,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:32"},"scope":6335,"src":"12640:1919:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5484,"nodeType":"Block","src":"15159:82:32","statements":[{"id":5483,"nodeType":"UncheckedBlock","src":"15169:66:32","statements":[{"expression":{"arguments":[{"id":5476,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5467,"src":"15212:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5477,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5469,"src":"15215:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":5478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:32","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5480,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5469,"src":"15222:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5474,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6335,"src":"15200:4:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6335_$","typeString":"type(library Math)"}},"id":5475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:32","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":5521,"src":"15200:11:32","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":5481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5473,"id":5482,"nodeType":"Return","src":"15193:31:32"}]}]},"documentation":{"id":5465,"nodeType":"StructuredDocumentation","src":"14565:514:32","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":5485,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:32","nodeType":"FunctionDefinition","parameters":{"id":5470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5467,"mutability":"mutable","name":"a","nameLocation":"15113:1:32","nodeType":"VariableDeclaration","scope":5485,"src":"15105:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5466,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5469,"mutability":"mutable","name":"p","nameLocation":"15124:1:32","nodeType":"VariableDeclaration","scope":5485,"src":"15116:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5468,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:32"},"returnParameters":{"id":5473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5472,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5485,"src":"15150:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5471,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:32"},"scope":6335,"src":"15084:157:32","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5520,"nodeType":"Block","src":"16011:174:32","statements":[{"assignments":[5498,5500],"declarations":[{"constant":false,"id":5498,"mutability":"mutable","name":"success","nameLocation":"16027:7:32","nodeType":"VariableDeclaration","scope":5520,"src":"16022:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5497,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5500,"mutability":"mutable","name":"result","nameLocation":"16044:6:32","nodeType":"VariableDeclaration","scope":5520,"src":"16036:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5499,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5506,"initialValue":{"arguments":[{"id":5502,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5488,"src":"16064:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5503,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5490,"src":"16067:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5504,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5492,"src":"16070:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5501,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[5545,5627],"referencedDeclaration":5545,"src":"16054:9:32","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":5505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:32"},{"condition":{"id":5508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:32","subExpression":{"id":5507,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5498,"src":"16087:7:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5517,"nodeType":"IfStatement","src":"16082:74:32","trueBody":{"id":5516,"nodeType":"Block","src":"16096:60:32","statements":[{"expression":{"arguments":[{"expression":{"id":5512,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2166,"src":"16122:5:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2166_$","typeString":"type(library Panic)"}},"id":5513,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:32","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2133,"src":"16122:22:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5509,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2166,"src":"16110:5:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2166_$","typeString":"type(library Panic)"}},"id":5511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:32","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2165,"src":"16110:11:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5515,"nodeType":"ExpressionStatement","src":"16110:35:32"}]}},{"expression":{"id":5518,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5500,"src":"16172:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5496,"id":5519,"nodeType":"Return","src":"16165:13:32"}]},"documentation":{"id":5486,"nodeType":"StructuredDocumentation","src":"15247:678:32","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":5521,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:32","nodeType":"FunctionDefinition","parameters":{"id":5493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5488,"mutability":"mutable","name":"b","nameLocation":"15954:1:32","nodeType":"VariableDeclaration","scope":5521,"src":"15946:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5487,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5490,"mutability":"mutable","name":"e","nameLocation":"15965:1:32","nodeType":"VariableDeclaration","scope":5521,"src":"15957:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5489,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5492,"mutability":"mutable","name":"m","nameLocation":"15976:1:32","nodeType":"VariableDeclaration","scope":5521,"src":"15968:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5491,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:32"},"returnParameters":{"id":5496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5495,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5521,"src":"16002:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5494,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:32"},"scope":6335,"src":"15930:255:32","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5544,"nodeType":"Block","src":"17039:1493:32","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5535,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5528,"src":"17053:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5542,"nodeType":"IfStatement","src":"17049:29:32","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5540,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:32","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5534,"id":5541,"nodeType":"Return","src":"17061:17:32"}},{"AST":{"nativeSrc":"17113:1413:32","nodeType":"YulBlock","src":"17113:1413:32","statements":[{"nativeSrc":"17127:22:32","nodeType":"YulVariableDeclaration","src":"17127:22:32","value":{"arguments":[{"kind":"number","nativeSrc":"17144:4:32","nodeType":"YulLiteral","src":"17144:4:32","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"17138:5:32","nodeType":"YulIdentifier","src":"17138:5:32"},"nativeSrc":"17138:11:32","nodeType":"YulFunctionCall","src":"17138:11:32"},"variables":[{"name":"ptr","nativeSrc":"17131:3:32","nodeType":"YulTypedName","src":"17131:3:32","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"18057:3:32","nodeType":"YulIdentifier","src":"18057:3:32"},{"kind":"number","nativeSrc":"18062:4:32","nodeType":"YulLiteral","src":"18062:4:32","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18050:6:32","nodeType":"YulIdentifier","src":"18050:6:32"},"nativeSrc":"18050:17:32","nodeType":"YulFunctionCall","src":"18050:17:32"},"nativeSrc":"18050:17:32","nodeType":"YulExpressionStatement","src":"18050:17:32"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18091:3:32","nodeType":"YulIdentifier","src":"18091:3:32"},{"kind":"number","nativeSrc":"18096:4:32","nodeType":"YulLiteral","src":"18096:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18087:3:32","nodeType":"YulIdentifier","src":"18087:3:32"},"nativeSrc":"18087:14:32","nodeType":"YulFunctionCall","src":"18087:14:32"},{"kind":"number","nativeSrc":"18103:4:32","nodeType":"YulLiteral","src":"18103:4:32","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18080:6:32","nodeType":"YulIdentifier","src":"18080:6:32"},"nativeSrc":"18080:28:32","nodeType":"YulFunctionCall","src":"18080:28:32"},"nativeSrc":"18080:28:32","nodeType":"YulExpressionStatement","src":"18080:28:32"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18132:3:32","nodeType":"YulIdentifier","src":"18132:3:32"},{"kind":"number","nativeSrc":"18137:4:32","nodeType":"YulLiteral","src":"18137:4:32","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"18128:3:32","nodeType":"YulIdentifier","src":"18128:3:32"},"nativeSrc":"18128:14:32","nodeType":"YulFunctionCall","src":"18128:14:32"},{"kind":"number","nativeSrc":"18144:4:32","nodeType":"YulLiteral","src":"18144:4:32","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18121:6:32","nodeType":"YulIdentifier","src":"18121:6:32"},"nativeSrc":"18121:28:32","nodeType":"YulFunctionCall","src":"18121:28:32"},"nativeSrc":"18121:28:32","nodeType":"YulExpressionStatement","src":"18121:28:32"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18173:3:32","nodeType":"YulIdentifier","src":"18173:3:32"},{"kind":"number","nativeSrc":"18178:4:32","nodeType":"YulLiteral","src":"18178:4:32","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"18169:3:32","nodeType":"YulIdentifier","src":"18169:3:32"},"nativeSrc":"18169:14:32","nodeType":"YulFunctionCall","src":"18169:14:32"},{"name":"b","nativeSrc":"18185:1:32","nodeType":"YulIdentifier","src":"18185:1:32"}],"functionName":{"name":"mstore","nativeSrc":"18162:6:32","nodeType":"YulIdentifier","src":"18162:6:32"},"nativeSrc":"18162:25:32","nodeType":"YulFunctionCall","src":"18162:25:32"},"nativeSrc":"18162:25:32","nodeType":"YulExpressionStatement","src":"18162:25:32"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18211:3:32","nodeType":"YulIdentifier","src":"18211:3:32"},{"kind":"number","nativeSrc":"18216:4:32","nodeType":"YulLiteral","src":"18216:4:32","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"18207:3:32","nodeType":"YulIdentifier","src":"18207:3:32"},"nativeSrc":"18207:14:32","nodeType":"YulFunctionCall","src":"18207:14:32"},{"name":"e","nativeSrc":"18223:1:32","nodeType":"YulIdentifier","src":"18223:1:32"}],"functionName":{"name":"mstore","nativeSrc":"18200:6:32","nodeType":"YulIdentifier","src":"18200:6:32"},"nativeSrc":"18200:25:32","nodeType":"YulFunctionCall","src":"18200:25:32"},"nativeSrc":"18200:25:32","nodeType":"YulExpressionStatement","src":"18200:25:32"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18249:3:32","nodeType":"YulIdentifier","src":"18249:3:32"},{"kind":"number","nativeSrc":"18254:4:32","nodeType":"YulLiteral","src":"18254:4:32","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"18245:3:32","nodeType":"YulIdentifier","src":"18245:3:32"},"nativeSrc":"18245:14:32","nodeType":"YulFunctionCall","src":"18245:14:32"},{"name":"m","nativeSrc":"18261:1:32","nodeType":"YulIdentifier","src":"18261:1:32"}],"functionName":{"name":"mstore","nativeSrc":"18238:6:32","nodeType":"YulIdentifier","src":"18238:6:32"},"nativeSrc":"18238:25:32","nodeType":"YulFunctionCall","src":"18238:25:32"},"nativeSrc":"18238:25:32","nodeType":"YulExpressionStatement","src":"18238:25:32"},{"nativeSrc":"18425:57:32","nodeType":"YulAssignment","src":"18425:57:32","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"18447:3:32","nodeType":"YulIdentifier","src":"18447:3:32"},"nativeSrc":"18447:5:32","nodeType":"YulFunctionCall","src":"18447:5:32"},{"kind":"number","nativeSrc":"18454:4:32","nodeType":"YulLiteral","src":"18454:4:32","type":"","value":"0x05"},{"name":"ptr","nativeSrc":"18460:3:32","nodeType":"YulIdentifier","src":"18460:3:32"},{"kind":"number","nativeSrc":"18465:4:32","nodeType":"YulLiteral","src":"18465:4:32","type":"","value":"0xc0"},{"kind":"number","nativeSrc":"18471:4:32","nodeType":"YulLiteral","src":"18471:4:32","type":"","value":"0x00"},{"kind":"number","nativeSrc":"18477:4:32","nodeType":"YulLiteral","src":"18477:4:32","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"18436:10:32","nodeType":"YulIdentifier","src":"18436:10:32"},"nativeSrc":"18436:46:32","nodeType":"YulFunctionCall","src":"18436:46:32"},"variableNames":[{"name":"success","nativeSrc":"18425:7:32","nodeType":"YulIdentifier","src":"18425:7:32"}]},{"nativeSrc":"18495:21:32","nodeType":"YulAssignment","src":"18495:21:32","value":{"arguments":[{"kind":"number","nativeSrc":"18511:4:32","nodeType":"YulLiteral","src":"18511:4:32","type":"","value":"0x00"}],"functionName":{"name":"mload","nativeSrc":"18505:5:32","nodeType":"YulIdentifier","src":"18505:5:32"},"nativeSrc":"18505:11:32","nodeType":"YulFunctionCall","src":"18505:11:32"},"variableNames":[{"name":"result","nativeSrc":"18495:6:32","nodeType":"YulIdentifier","src":"18495:6:32"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5524,"isOffset":false,"isSlot":false,"src":"18185:1:32","valueSize":1},{"declaration":5526,"isOffset":false,"isSlot":false,"src":"18223:1:32","valueSize":1},{"declaration":5528,"isOffset":false,"isSlot":false,"src":"18261:1:32","valueSize":1},{"declaration":5533,"isOffset":false,"isSlot":false,"src":"18495:6:32","valueSize":1},{"declaration":5531,"isOffset":false,"isSlot":false,"src":"18425:7:32","valueSize":1}],"flags":["memory-safe"],"id":5543,"nodeType":"InlineAssembly","src":"17088:1438:32"}]},"documentation":{"id":5522,"nodeType":"StructuredDocumentation","src":"16191:738:32","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":5545,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:32","nodeType":"FunctionDefinition","parameters":{"id":5529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5524,"mutability":"mutable","name":"b","nameLocation":"16961:1:32","nodeType":"VariableDeclaration","scope":5545,"src":"16953:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5523,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5526,"mutability":"mutable","name":"e","nameLocation":"16972:1:32","nodeType":"VariableDeclaration","scope":5545,"src":"16964:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5525,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5528,"mutability":"mutable","name":"m","nameLocation":"16983:1:32","nodeType":"VariableDeclaration","scope":5545,"src":"16975:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5527,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:32"},"returnParameters":{"id":5534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5531,"mutability":"mutable","name":"success","nameLocation":"17014:7:32","nodeType":"VariableDeclaration","scope":5545,"src":"17009:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5530,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5533,"mutability":"mutable","name":"result","nameLocation":"17031:6:32","nodeType":"VariableDeclaration","scope":5545,"src":"17023:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5532,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:32"},"scope":6335,"src":"16934:1598:32","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5580,"nodeType":"Block","src":"18729:179:32","statements":[{"assignments":[5558,5560],"declarations":[{"constant":false,"id":5558,"mutability":"mutable","name":"success","nameLocation":"18745:7:32","nodeType":"VariableDeclaration","scope":5580,"src":"18740:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5557,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5560,"mutability":"mutable","name":"result","nameLocation":"18767:6:32","nodeType":"VariableDeclaration","scope":5580,"src":"18754:19:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5559,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5566,"initialValue":{"arguments":[{"id":5562,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5548,"src":"18787:1:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5563,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5550,"src":"18790:1:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5564,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5552,"src":"18793:1:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5561,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[5545,5627],"referencedDeclaration":5627,"src":"18777:9:32","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":5565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:32"},{"condition":{"id":5568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:32","subExpression":{"id":5567,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5558,"src":"18810:7:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5577,"nodeType":"IfStatement","src":"18805:74:32","trueBody":{"id":5576,"nodeType":"Block","src":"18819:60:32","statements":[{"expression":{"arguments":[{"expression":{"id":5572,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2166,"src":"18845:5:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2166_$","typeString":"type(library Panic)"}},"id":5573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:32","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2133,"src":"18845:22:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5569,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2166,"src":"18833:5:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2166_$","typeString":"type(library Panic)"}},"id":5571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:32","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2165,"src":"18833:11:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5575,"nodeType":"ExpressionStatement","src":"18833:35:32"}]}},{"expression":{"id":5578,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5560,"src":"18895:6:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":5556,"id":5579,"nodeType":"Return","src":"18888:13:32"}]},"documentation":{"id":5546,"nodeType":"StructuredDocumentation","src":"18538:85:32","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":5581,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:32","nodeType":"FunctionDefinition","parameters":{"id":5553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5548,"mutability":"mutable","name":"b","nameLocation":"18657:1:32","nodeType":"VariableDeclaration","scope":5581,"src":"18644:14:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5547,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5550,"mutability":"mutable","name":"e","nameLocation":"18673:1:32","nodeType":"VariableDeclaration","scope":5581,"src":"18660:14:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5549,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5552,"mutability":"mutable","name":"m","nameLocation":"18689:1:32","nodeType":"VariableDeclaration","scope":5581,"src":"18676:14:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5551,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:32"},"returnParameters":{"id":5556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5555,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5581,"src":"18715:12:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5554,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:32"},"scope":6335,"src":"18628:280:32","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5626,"nodeType":"Block","src":"19162:771:32","statements":[{"condition":{"arguments":[{"id":5596,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5588,"src":"19187:1:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5595,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5660,"src":"19176:10:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":5597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5605,"nodeType":"IfStatement","src":"19172:47:32","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":5601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5600,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:32","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":5599,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":5602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":5603,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:32","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":5594,"id":5604,"nodeType":"Return","src":"19191:28:32"}},{"assignments":[5607],"declarations":[{"constant":false,"id":5607,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:32","nodeType":"VariableDeclaration","scope":5626,"src":"19230:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5606,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5610,"initialValue":{"expression":{"id":5608,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5588,"src":"19245:1:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:32","memberName":"length","nodeType":"MemberAccess","src":"19245:8:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:32"},{"expression":{"id":5623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5611,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5593,"src":"19335:6:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":5614,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5584,"src":"19361:1:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:32","memberName":"length","nodeType":"MemberAccess","src":"19361:8:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5616,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5586,"src":"19371:1:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:32","memberName":"length","nodeType":"MemberAccess","src":"19371:8:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5618,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5607,"src":"19381:4:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5619,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5584,"src":"19387:1:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5620,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5586,"src":"19390:1:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5621,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5588,"src":"19393:1:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":5612,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:32","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5613,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:32","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:32","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5624,"nodeType":"ExpressionStatement","src":"19335:60:32"},{"AST":{"nativeSrc":"19431:496:32","nodeType":"YulBlock","src":"19431:496:32","statements":[{"nativeSrc":"19445:32:32","nodeType":"YulVariableDeclaration","src":"19445:32:32","value":{"arguments":[{"name":"result","nativeSrc":"19464:6:32","nodeType":"YulIdentifier","src":"19464:6:32"},{"kind":"number","nativeSrc":"19472:4:32","nodeType":"YulLiteral","src":"19472:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19460:3:32","nodeType":"YulIdentifier","src":"19460:3:32"},"nativeSrc":"19460:17:32","nodeType":"YulFunctionCall","src":"19460:17:32"},"variables":[{"name":"dataPtr","nativeSrc":"19449:7:32","nodeType":"YulTypedName","src":"19449:7:32","type":""}]},{"nativeSrc":"19567:73:32","nodeType":"YulAssignment","src":"19567:73:32","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"19589:3:32","nodeType":"YulIdentifier","src":"19589:3:32"},"nativeSrc":"19589:5:32","nodeType":"YulFunctionCall","src":"19589:5:32"},{"kind":"number","nativeSrc":"19596:4:32","nodeType":"YulLiteral","src":"19596:4:32","type":"","value":"0x05"},{"name":"dataPtr","nativeSrc":"19602:7:32","nodeType":"YulIdentifier","src":"19602:7:32"},{"arguments":[{"name":"result","nativeSrc":"19617:6:32","nodeType":"YulIdentifier","src":"19617:6:32"}],"functionName":{"name":"mload","nativeSrc":"19611:5:32","nodeType":"YulIdentifier","src":"19611:5:32"},"nativeSrc":"19611:13:32","nodeType":"YulFunctionCall","src":"19611:13:32"},{"name":"dataPtr","nativeSrc":"19626:7:32","nodeType":"YulIdentifier","src":"19626:7:32"},{"name":"mLen","nativeSrc":"19635:4:32","nodeType":"YulIdentifier","src":"19635:4:32"}],"functionName":{"name":"staticcall","nativeSrc":"19578:10:32","nodeType":"YulIdentifier","src":"19578:10:32"},"nativeSrc":"19578:62:32","nodeType":"YulFunctionCall","src":"19578:62:32"},"variableNames":[{"name":"success","nativeSrc":"19567:7:32","nodeType":"YulIdentifier","src":"19567:7:32"}]},{"expression":{"arguments":[{"name":"result","nativeSrc":"19796:6:32","nodeType":"YulIdentifier","src":"19796:6:32"},{"name":"mLen","nativeSrc":"19804:4:32","nodeType":"YulIdentifier","src":"19804:4:32"}],"functionName":{"name":"mstore","nativeSrc":"19789:6:32","nodeType":"YulIdentifier","src":"19789:6:32"},"nativeSrc":"19789:20:32","nodeType":"YulFunctionCall","src":"19789:20:32"},"nativeSrc":"19789:20:32","nodeType":"YulExpressionStatement","src":"19789:20:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"19892:4:32","nodeType":"YulLiteral","src":"19892:4:32","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nativeSrc":"19902:7:32","nodeType":"YulIdentifier","src":"19902:7:32"},{"name":"mLen","nativeSrc":"19911:4:32","nodeType":"YulIdentifier","src":"19911:4:32"}],"functionName":{"name":"add","nativeSrc":"19898:3:32","nodeType":"YulIdentifier","src":"19898:3:32"},"nativeSrc":"19898:18:32","nodeType":"YulFunctionCall","src":"19898:18:32"}],"functionName":{"name":"mstore","nativeSrc":"19885:6:32","nodeType":"YulIdentifier","src":"19885:6:32"},"nativeSrc":"19885:32:32","nodeType":"YulFunctionCall","src":"19885:32:32"},"nativeSrc":"19885:32:32","nodeType":"YulExpressionStatement","src":"19885:32:32"}]},"evmVersion":"paris","externalReferences":[{"declaration":5607,"isOffset":false,"isSlot":false,"src":"19635:4:32","valueSize":1},{"declaration":5607,"isOffset":false,"isSlot":false,"src":"19804:4:32","valueSize":1},{"declaration":5607,"isOffset":false,"isSlot":false,"src":"19911:4:32","valueSize":1},{"declaration":5593,"isOffset":false,"isSlot":false,"src":"19464:6:32","valueSize":1},{"declaration":5593,"isOffset":false,"isSlot":false,"src":"19617:6:32","valueSize":1},{"declaration":5593,"isOffset":false,"isSlot":false,"src":"19796:6:32","valueSize":1},{"declaration":5591,"isOffset":false,"isSlot":false,"src":"19567:7:32","valueSize":1}],"flags":["memory-safe"],"id":5625,"nodeType":"InlineAssembly","src":"19406:521:32"}]},"documentation":{"id":5582,"nodeType":"StructuredDocumentation","src":"18914:88:32","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":5627,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:32","nodeType":"FunctionDefinition","parameters":{"id":5589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5584,"mutability":"mutable","name":"b","nameLocation":"19048:1:32","nodeType":"VariableDeclaration","scope":5627,"src":"19035:14:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5583,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5586,"mutability":"mutable","name":"e","nameLocation":"19072:1:32","nodeType":"VariableDeclaration","scope":5627,"src":"19059:14:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5585,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5588,"mutability":"mutable","name":"m","nameLocation":"19096:1:32","nodeType":"VariableDeclaration","scope":5627,"src":"19083:14:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5587,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:32"},"returnParameters":{"id":5594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5591,"mutability":"mutable","name":"success","nameLocation":"19132:7:32","nodeType":"VariableDeclaration","scope":5627,"src":"19127:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5590,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5593,"mutability":"mutable","name":"result","nameLocation":"19154:6:32","nodeType":"VariableDeclaration","scope":5627,"src":"19141:19:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5592,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:32"},"scope":6335,"src":"19007:926:32","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5659,"nodeType":"Block","src":"20088:176:32","statements":[{"body":{"id":5655,"nodeType":"Block","src":"20145:92:32","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5646,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5630,"src":"20163:9:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5648,"indexExpression":{"id":5647,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5636,"src":"20173:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:32","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5654,"nodeType":"IfStatement","src":"20159:68:32","trueBody":{"id":5653,"nodeType":"Block","src":"20182:45:32","statements":[{"expression":{"hexValue":"66616c7365","id":5651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":5634,"id":5652,"nodeType":"Return","src":"20200:12:32"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5639,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5636,"src":"20118:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5640,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5630,"src":"20122:9:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:32","memberName":"length","nodeType":"MemberAccess","src":"20122:16:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5656,"initializationExpression":{"assignments":[5636],"declarations":[{"constant":false,"id":5636,"mutability":"mutable","name":"i","nameLocation":"20111:1:32","nodeType":"VariableDeclaration","scope":5656,"src":"20103:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5635,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5638,"initialValue":{"hexValue":"30","id":5637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:32"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:32","subExpression":{"id":5643,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5636,"src":"20142:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5645,"nodeType":"ExpressionStatement","src":"20140:3:32"},"nodeType":"ForStatement","src":"20098:139:32"},{"expression":{"hexValue":"74727565","id":5657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":5634,"id":5658,"nodeType":"Return","src":"20246:11:32"}]},"documentation":{"id":5628,"nodeType":"StructuredDocumentation","src":"19939:72:32","text":" @dev Returns whether the provided byte array is zero."},"id":5660,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:32","nodeType":"FunctionDefinition","parameters":{"id":5631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5630,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:32","nodeType":"VariableDeclaration","scope":5660,"src":"20036:22:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5629,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:32"},"returnParameters":{"id":5634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5633,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5660,"src":"20082:4:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5632,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:32"},"scope":6335,"src":"20016:248:32","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5878,"nodeType":"Block","src":"20624:5124:32","statements":[{"id":5877,"nodeType":"UncheckedBlock","src":"20634:5108:32","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5668,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5663,"src":"20728:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":5669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:32","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5674,"nodeType":"IfStatement","src":"20724:53:32","trueBody":{"id":5673,"nodeType":"Block","src":"20736:41:32","statements":[{"expression":{"id":5671,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5663,"src":"20761:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5667,"id":5672,"nodeType":"Return","src":"20754:8:32"}]}},{"assignments":[5676],"declarations":[{"constant":false,"id":5676,"mutability":"mutable","name":"aa","nameLocation":"21712:2:32","nodeType":"VariableDeclaration","scope":5877,"src":"21704:10:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5675,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5678,"initialValue":{"id":5677,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5663,"src":"21717:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:32"},{"assignments":[5680],"declarations":[{"constant":false,"id":5680,"mutability":"mutable","name":"xn","nameLocation":"21740:2:32","nodeType":"VariableDeclaration","scope":5877,"src":"21732:10:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5679,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5682,"initialValue":{"hexValue":"31","id":5681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:32","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:32"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5683,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5676,"src":"21765:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":5686,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:32","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":5685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:32","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:32","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":5687,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:32","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5698,"nodeType":"IfStatement","src":"21761:92:32","trueBody":{"id":5697,"nodeType":"Block","src":"21783:70:32","statements":[{"expression":{"id":5691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5689,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5676,"src":"21801:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":5690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:32","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5692,"nodeType":"ExpressionStatement","src":"21801:10:32"},{"expression":{"id":5695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5693,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5680,"src":"21829:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":5694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:32","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5696,"nodeType":"ExpressionStatement","src":"21829:9:32"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5699,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5676,"src":"21870:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":5702,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:32","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":5701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:32","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:32","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":5703,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:32","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5714,"nodeType":"IfStatement","src":"21866:90:32","trueBody":{"id":5713,"nodeType":"Block","src":"21887:69:32","statements":[{"expression":{"id":5707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5705,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5676,"src":"21905:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":5706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:32","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5708,"nodeType":"ExpressionStatement","src":"21905:9:32"},{"expression":{"id":5711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5709,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5680,"src":"21932:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":5710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:32","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5712,"nodeType":"ExpressionStatement","src":"21932:9:32"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5715,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5676,"src":"21973:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":5718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:32","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":5717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:32","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:32","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":5719,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:32","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5730,"nodeType":"IfStatement","src":"21969:90:32","trueBody":{"id":5729,"nodeType":"Block","src":"21990:69:32","statements":[{"expression":{"id":5723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5721,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5676,"src":"22008:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":5722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:32","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5724,"nodeType":"ExpressionStatement","src":"22008:9:32"},{"expression":{"id":5727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5725,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5680,"src":"22035:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":5726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:32","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5728,"nodeType":"ExpressionStatement","src":"22035:9:32"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5731,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5676,"src":"22076:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":5734,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:32","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":5733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:32","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:32","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":5735,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:32","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5746,"nodeType":"IfStatement","src":"22072:89:32","trueBody":{"id":5745,"nodeType":"Block","src":"22093:68:32","statements":[{"expression":{"id":5739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5737,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5676,"src":"22111:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":5738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:32","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5740,"nodeType":"ExpressionStatement","src":"22111:9:32"},{"expression":{"id":5743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5741,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5680,"src":"22138:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":5742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:32","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5744,"nodeType":"ExpressionStatement","src":"22138:8:32"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5747,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5676,"src":"22178:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":5750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:32","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":5749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:32","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:32","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":5751,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:32","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5762,"nodeType":"IfStatement","src":"22174:87:32","trueBody":{"id":5761,"nodeType":"Block","src":"22194:67:32","statements":[{"expression":{"id":5755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5753,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5676,"src":"22212:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":5754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:32","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5756,"nodeType":"ExpressionStatement","src":"22212:8:32"},{"expression":{"id":5759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5757,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5680,"src":"22238:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":5758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:32","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5760,"nodeType":"ExpressionStatement","src":"22238:8:32"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5763,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5676,"src":"22278:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":5766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:32","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:32","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:32","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":5767,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:32","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5778,"nodeType":"IfStatement","src":"22274:87:32","trueBody":{"id":5777,"nodeType":"Block","src":"22294:67:32","statements":[{"expression":{"id":5771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5769,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5676,"src":"22312:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":5770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:32","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5772,"nodeType":"ExpressionStatement","src":"22312:8:32"},{"expression":{"id":5775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5773,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5680,"src":"22338:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":5774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:32","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5776,"nodeType":"ExpressionStatement","src":"22338:8:32"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5779,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5676,"src":"22378:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":5782,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:32","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":5781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:32","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:32","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":5783,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:32","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5790,"nodeType":"IfStatement","src":"22374:61:32","trueBody":{"id":5789,"nodeType":"Block","src":"22394:41:32","statements":[{"expression":{"id":5787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5785,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5680,"src":"22412:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":5786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:32","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5788,"nodeType":"ExpressionStatement","src":"22412:8:32"}]}},{"expression":{"id":5798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5791,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5680,"src":"22855:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":5792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:32","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5793,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5680,"src":"22865:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5795,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:32","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5799,"nodeType":"ExpressionStatement","src":"22855:18:32"},{"expression":{"id":5809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5800,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5680,"src":"24760:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5801,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5680,"src":"24766:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5802,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5663,"src":"24771:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5803,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5680,"src":"24775:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5806,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:32","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5810,"nodeType":"ExpressionStatement","src":"24760:23:32"},{"expression":{"id":5820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5811,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5680,"src":"24869:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5812,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5680,"src":"24875:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5813,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5663,"src":"24880:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5814,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5680,"src":"24884:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5817,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:32","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5821,"nodeType":"ExpressionStatement","src":"24869:23:32"},{"expression":{"id":5831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5822,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5680,"src":"24980:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5823,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5680,"src":"24986:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5824,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5663,"src":"24991:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5825,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5680,"src":"24995:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5828,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:32","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5832,"nodeType":"ExpressionStatement","src":"24980:23:32"},{"expression":{"id":5842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5833,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5680,"src":"25089:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5834,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5680,"src":"25095:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5835,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5663,"src":"25100:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5836,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5680,"src":"25104:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5839,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:32","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5843,"nodeType":"ExpressionStatement","src":"25089:23:32"},{"expression":{"id":5853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5844,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5680,"src":"25199:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5845,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5680,"src":"25205:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5846,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5663,"src":"25210:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5847,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5680,"src":"25214:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5850,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:32","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5854,"nodeType":"ExpressionStatement","src":"25199:23:32"},{"expression":{"id":5864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5855,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5680,"src":"25309:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5856,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5680,"src":"25315:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5857,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5663,"src":"25320:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5858,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5680,"src":"25324:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5861,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:32","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5865,"nodeType":"ExpressionStatement","src":"25309:23:32"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5866,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5680,"src":"25698:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5869,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5680,"src":"25719:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5870,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5663,"src":"25724:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5871,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5680,"src":"25728:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5867,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8100,"src":"25703:8:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8100_$","typeString":"type(library SafeCast)"}},"id":5868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:32","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8099,"src":"25703:15:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5667,"id":5876,"nodeType":"Return","src":"25691:40:32"}]}]},"documentation":{"id":5661,"nodeType":"StructuredDocumentation","src":"20270:292:32","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":5879,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:32","nodeType":"FunctionDefinition","parameters":{"id":5664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5663,"mutability":"mutable","name":"a","nameLocation":"20589:1:32","nodeType":"VariableDeclaration","scope":5879,"src":"20581:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5662,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:32"},"returnParameters":{"id":5667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5666,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5879,"src":"20615:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5665,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:32"},"scope":6335,"src":"20567:5181:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5912,"nodeType":"Block","src":"25921:171:32","statements":[{"id":5911,"nodeType":"UncheckedBlock","src":"25931:155:32","statements":[{"assignments":[5891],"declarations":[{"constant":false,"id":5891,"mutability":"mutable","name":"result","nameLocation":"25963:6:32","nodeType":"VariableDeclaration","scope":5911,"src":"25955:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5890,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5895,"initialValue":{"arguments":[{"id":5893,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5882,"src":"25977:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5892,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[5879,5913],"referencedDeclaration":5879,"src":"25972:4:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:32"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5896,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5891,"src":"26000:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5900,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5885,"src":"26042:8:32","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4726","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4726","typeString":"enum Math.Rounding"}],"id":5899,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6334,"src":"26025:16:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4726_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5902,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5891,"src":"26055:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5903,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5891,"src":"26064:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5905,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5882,"src":"26073:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5897,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8100,"src":"26009:8:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8100_$","typeString":"type(library SafeCast)"}},"id":5898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:32","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8099,"src":"26009:15:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5889,"id":5910,"nodeType":"Return","src":"25993:82:32"}]}]},"documentation":{"id":5880,"nodeType":"StructuredDocumentation","src":"25754:86:32","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":5913,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:32","nodeType":"FunctionDefinition","parameters":{"id":5886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5882,"mutability":"mutable","name":"a","nameLocation":"25867:1:32","nodeType":"VariableDeclaration","scope":5913,"src":"25859:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5881,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5885,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:32","nodeType":"VariableDeclaration","scope":5913,"src":"25870:17:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4726","typeString":"enum Math.Rounding"},"typeName":{"id":5884,"nodeType":"UserDefinedTypeName","pathNode":{"id":5883,"name":"Rounding","nameLocations":["25870:8:32"],"nodeType":"IdentifierPath","referencedDeclaration":4726,"src":"25870:8:32"},"referencedDeclaration":4726,"src":"25870:8:32","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4726","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:32"},"returnParameters":{"id":5889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5888,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5913,"src":"25912:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5887,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:32"},"scope":6335,"src":"25845:247:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6003,"nodeType":"Block","src":"26281:2334:32","statements":[{"expression":{"id":5930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5921,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5919,"src":"26363:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5924,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5916,"src":"26383:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":5925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:32","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5922,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8100,"src":"26367:8:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8100_$","typeString":"type(library SafeCast)"}},"id":5923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:32","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8099,"src":"26367:15:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":5928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:32","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5931,"nodeType":"ExpressionStatement","src":"26363:64:32"},{"expression":{"id":5944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5932,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5919,"src":"26503:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5935,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5916,"src":"26525:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5936,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5919,"src":"26530:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5938,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":5939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:32","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5933,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8100,"src":"26508:8:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8100_$","typeString":"type(library SafeCast)"}},"id":5934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:32","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8099,"src":"26508:15:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":5942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:32","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5945,"nodeType":"ExpressionStatement","src":"26503:56:32"},{"expression":{"id":5958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5946,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5919,"src":"26634:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5949,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5916,"src":"26656:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5950,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5919,"src":"26661:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5952,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":5953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:32","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5947,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8100,"src":"26639:8:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8100_$","typeString":"type(library SafeCast)"}},"id":5948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:32","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8099,"src":"26639:15:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":5956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:32","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5959,"nodeType":"ExpressionStatement","src":"26634:48:32"},{"expression":{"id":5972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5960,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5919,"src":"26757:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5963,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5916,"src":"26779:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5964,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5919,"src":"26784:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5966,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":5967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:32","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5961,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8100,"src":"26762:8:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8100_$","typeString":"type(library SafeCast)"}},"id":5962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:32","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8099,"src":"26762:15:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:32","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5973,"nodeType":"ExpressionStatement","src":"26757:44:32"},{"expression":{"id":5986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5974,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5919,"src":"26874:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5977,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5916,"src":"26896:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5978,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5919,"src":"26901:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5980,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":5981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:32","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5975,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8100,"src":"26879:8:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8100_$","typeString":"type(library SafeCast)"}},"id":5976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:32","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8099,"src":"26879:15:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":5984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:32","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5987,"nodeType":"ExpressionStatement","src":"26874:42:32"},{"expression":{"id":6000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5988,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5919,"src":"26988:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5991,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5916,"src":"27010:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5992,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5919,"src":"27015:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5994,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":5995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:32","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5989,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8100,"src":"26993:8:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8100_$","typeString":"type(library SafeCast)"}},"id":5990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:32","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8099,"src":"26993:15:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":5998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:32","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6001,"nodeType":"ExpressionStatement","src":"26988:41:32"},{"AST":{"nativeSrc":"28490:119:32","nodeType":"YulBlock","src":"28490:119:32","statements":[{"nativeSrc":"28504:95:32","nodeType":"YulAssignment","src":"28504:95:32","value":{"arguments":[{"name":"r","nativeSrc":"28512:1:32","nodeType":"YulIdentifier","src":"28512:1:32"},{"arguments":[{"arguments":[{"name":"r","nativeSrc":"28524:1:32","nodeType":"YulIdentifier","src":"28524:1:32"},{"name":"x","nativeSrc":"28527:1:32","nodeType":"YulIdentifier","src":"28527:1:32"}],"functionName":{"name":"shr","nativeSrc":"28520:3:32","nodeType":"YulIdentifier","src":"28520:3:32"},"nativeSrc":"28520:9:32","nodeType":"YulFunctionCall","src":"28520:9:32"},{"kind":"number","nativeSrc":"28531:66:32","nodeType":"YulLiteral","src":"28531:66:32","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nativeSrc":"28515:4:32","nodeType":"YulIdentifier","src":"28515:4:32"},"nativeSrc":"28515:83:32","nodeType":"YulFunctionCall","src":"28515:83:32"}],"functionName":{"name":"or","nativeSrc":"28509:2:32","nodeType":"YulIdentifier","src":"28509:2:32"},"nativeSrc":"28509:90:32","nodeType":"YulFunctionCall","src":"28509:90:32"},"variableNames":[{"name":"r","nativeSrc":"28504:1:32","nodeType":"YulIdentifier","src":"28504:1:32"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5919,"isOffset":false,"isSlot":false,"src":"28504:1:32","valueSize":1},{"declaration":5919,"isOffset":false,"isSlot":false,"src":"28512:1:32","valueSize":1},{"declaration":5919,"isOffset":false,"isSlot":false,"src":"28524:1:32","valueSize":1},{"declaration":5916,"isOffset":false,"isSlot":false,"src":"28527:1:32","valueSize":1}],"flags":["memory-safe"],"id":6002,"nodeType":"InlineAssembly","src":"28465:144:32"}]},"documentation":{"id":5914,"nodeType":"StructuredDocumentation","src":"26098:119:32","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":6004,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:32","nodeType":"FunctionDefinition","parameters":{"id":5917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5916,"mutability":"mutable","name":"x","nameLocation":"26244:1:32","nodeType":"VariableDeclaration","scope":6004,"src":"26236:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5915,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:32"},"returnParameters":{"id":5920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5919,"mutability":"mutable","name":"r","nameLocation":"26278:1:32","nodeType":"VariableDeclaration","scope":6004,"src":"26270:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5918,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:32"},"scope":6335,"src":"26222:2393:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6037,"nodeType":"Block","src":"28848:175:32","statements":[{"id":6036,"nodeType":"UncheckedBlock","src":"28858:159:32","statements":[{"assignments":[6016],"declarations":[{"constant":false,"id":6016,"mutability":"mutable","name":"result","nameLocation":"28890:6:32","nodeType":"VariableDeclaration","scope":6036,"src":"28882:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6015,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6020,"initialValue":{"arguments":[{"id":6018,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6007,"src":"28904:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6017,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[6004,6038],"referencedDeclaration":6004,"src":"28899:4:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:32"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6021,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6016,"src":"28931:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6025,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6010,"src":"28973:8:32","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4726","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4726","typeString":"enum Math.Rounding"}],"id":6024,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6334,"src":"28956:16:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4726_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:32","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":6028,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6016,"src":"28991:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6030,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6007,"src":"29000:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6022,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8100,"src":"28940:8:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8100_$","typeString":"type(library SafeCast)"}},"id":6023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:32","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8099,"src":"28940:15:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6014,"id":6035,"nodeType":"Return","src":"28924:82:32"}]}]},"documentation":{"id":6005,"nodeType":"StructuredDocumentation","src":"28621:142:32","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":6038,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:32","nodeType":"FunctionDefinition","parameters":{"id":6011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6007,"mutability":"mutable","name":"value","nameLocation":"28790:5:32","nodeType":"VariableDeclaration","scope":6038,"src":"28782:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6006,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6010,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:32","nodeType":"VariableDeclaration","scope":6038,"src":"28797:17:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4726","typeString":"enum Math.Rounding"},"typeName":{"id":6009,"nodeType":"UserDefinedTypeName","pathNode":{"id":6008,"name":"Rounding","nameLocations":["28797:8:32"],"nodeType":"IdentifierPath","referencedDeclaration":4726,"src":"28797:8:32"},"referencedDeclaration":4726,"src":"28797:8:32","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4726","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:32"},"returnParameters":{"id":6014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6013,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6038,"src":"28839:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6012,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:32"},"scope":6335,"src":"28768:255:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6166,"nodeType":"Block","src":"29216:854:32","statements":[{"assignments":[6047],"declarations":[{"constant":false,"id":6047,"mutability":"mutable","name":"result","nameLocation":"29234:6:32","nodeType":"VariableDeclaration","scope":6166,"src":"29226:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6046,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6049,"initialValue":{"hexValue":"30","id":6048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:32"},{"id":6163,"nodeType":"UncheckedBlock","src":"29254:787:32","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6050,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6041,"src":"29282:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":6053,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:32","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":6052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:32","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:32","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6066,"nodeType":"IfStatement","src":"29278:103:32","trueBody":{"id":6065,"nodeType":"Block","src":"29301:80:32","statements":[{"expression":{"id":6059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6055,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6041,"src":"29319:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":6058,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:32","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":6057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:32","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:32","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6060,"nodeType":"ExpressionStatement","src":"29319:17:32"},{"expression":{"id":6063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6061,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6047,"src":"29354:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":6062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:32","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6064,"nodeType":"ExpressionStatement","src":"29354:12:32"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6067,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6041,"src":"29398:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":6070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:32","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":6069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:32","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:32","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6083,"nodeType":"IfStatement","src":"29394:103:32","trueBody":{"id":6082,"nodeType":"Block","src":"29417:80:32","statements":[{"expression":{"id":6076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6072,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6041,"src":"29435:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":6075,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:32","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":6074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:32","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:32","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6077,"nodeType":"ExpressionStatement","src":"29435:17:32"},{"expression":{"id":6080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6078,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6047,"src":"29470:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":6079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:32","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6081,"nodeType":"ExpressionStatement","src":"29470:12:32"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6084,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6041,"src":"29514:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":6087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:32","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":6086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:32","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:32","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6100,"nodeType":"IfStatement","src":"29510:103:32","trueBody":{"id":6099,"nodeType":"Block","src":"29533:80:32","statements":[{"expression":{"id":6093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6089,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6041,"src":"29551:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":6092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:32","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":6091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:32","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:32","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6094,"nodeType":"ExpressionStatement","src":"29551:17:32"},{"expression":{"id":6097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6095,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6047,"src":"29586:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":6096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:32","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6098,"nodeType":"ExpressionStatement","src":"29586:12:32"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6101,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6041,"src":"29630:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":6104,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:32","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":6103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:32","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:32","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6117,"nodeType":"IfStatement","src":"29626:100:32","trueBody":{"id":6116,"nodeType":"Block","src":"29648:78:32","statements":[{"expression":{"id":6110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6106,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6041,"src":"29666:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":6109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:32","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":6108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:32","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:32","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6111,"nodeType":"ExpressionStatement","src":"29666:16:32"},{"expression":{"id":6114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6112,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6047,"src":"29700:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":6113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:32","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6115,"nodeType":"ExpressionStatement","src":"29700:11:32"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6118,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6041,"src":"29743:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":6121,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:32","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":6120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:32","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:32","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6134,"nodeType":"IfStatement","src":"29739:100:32","trueBody":{"id":6133,"nodeType":"Block","src":"29761:78:32","statements":[{"expression":{"id":6127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6123,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6041,"src":"29779:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":6126,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:32","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":6125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:32","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:32","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6128,"nodeType":"ExpressionStatement","src":"29779:16:32"},{"expression":{"id":6131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6129,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6047,"src":"29813:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":6130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:32","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6132,"nodeType":"ExpressionStatement","src":"29813:11:32"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6135,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6041,"src":"29856:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":6138,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:32","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":6137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:32","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:32","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6151,"nodeType":"IfStatement","src":"29852:100:32","trueBody":{"id":6150,"nodeType":"Block","src":"29874:78:32","statements":[{"expression":{"id":6144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6140,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6041,"src":"29892:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":6143,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:32","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":6142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:32","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:32","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6145,"nodeType":"ExpressionStatement","src":"29892:16:32"},{"expression":{"id":6148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6146,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6047,"src":"29926:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":6147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:32","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6149,"nodeType":"ExpressionStatement","src":"29926:11:32"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6152,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6041,"src":"29969:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":6155,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:32","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":6154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:32","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:32","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6162,"nodeType":"IfStatement","src":"29965:66:32","trueBody":{"id":6161,"nodeType":"Block","src":"29987:44:32","statements":[{"expression":{"id":6159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6157,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6047,"src":"30005:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":6158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:32","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6160,"nodeType":"ExpressionStatement","src":"30005:11:32"}]}}]},{"expression":{"id":6164,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6047,"src":"30057:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6045,"id":6165,"nodeType":"Return","src":"30050:13:32"}]},"documentation":{"id":6039,"nodeType":"StructuredDocumentation","src":"29029:120:32","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":6167,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:32","nodeType":"FunctionDefinition","parameters":{"id":6042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6041,"mutability":"mutable","name":"value","nameLocation":"29177:5:32","nodeType":"VariableDeclaration","scope":6167,"src":"29169:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6040,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:32"},"returnParameters":{"id":6045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6044,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6167,"src":"29207:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6043,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:32"},"scope":6335,"src":"29154:916:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6200,"nodeType":"Block","src":"30305:177:32","statements":[{"id":6199,"nodeType":"UncheckedBlock","src":"30315:161:32","statements":[{"assignments":[6179],"declarations":[{"constant":false,"id":6179,"mutability":"mutable","name":"result","nameLocation":"30347:6:32","nodeType":"VariableDeclaration","scope":6199,"src":"30339:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6178,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6183,"initialValue":{"arguments":[{"id":6181,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"30362:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6180,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[6167,6201],"referencedDeclaration":6167,"src":"30356:5:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:32"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6184,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6179,"src":"30389:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6188,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6173,"src":"30431:8:32","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4726","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4726","typeString":"enum Math.Rounding"}],"id":6187,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6334,"src":"30414:16:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4726_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:32","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":6191,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6179,"src":"30450:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6193,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"30459:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6185,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8100,"src":"30398:8:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8100_$","typeString":"type(library SafeCast)"}},"id":6186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:32","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8099,"src":"30398:15:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6177,"id":6198,"nodeType":"Return","src":"30382:83:32"}]}]},"documentation":{"id":6168,"nodeType":"StructuredDocumentation","src":"30076:143:32","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":6201,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:32","nodeType":"FunctionDefinition","parameters":{"id":6174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6170,"mutability":"mutable","name":"value","nameLocation":"30247:5:32","nodeType":"VariableDeclaration","scope":6201,"src":"30239:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6169,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6173,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:32","nodeType":"VariableDeclaration","scope":6201,"src":"30254:17:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4726","typeString":"enum Math.Rounding"},"typeName":{"id":6172,"nodeType":"UserDefinedTypeName","pathNode":{"id":6171,"name":"Rounding","nameLocations":["30254:8:32"],"nodeType":"IdentifierPath","referencedDeclaration":4726,"src":"30254:8:32"},"referencedDeclaration":4726,"src":"30254:8:32","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4726","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:32"},"returnParameters":{"id":6177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6176,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6201,"src":"30296:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6175,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:32"},"scope":6335,"src":"30224:258:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6277,"nodeType":"Block","src":"30800:675:32","statements":[{"expression":{"id":6218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6209,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6207,"src":"30882:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6212,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"30902:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":6213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:32","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6210,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8100,"src":"30886:8:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8100_$","typeString":"type(library SafeCast)"}},"id":6211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:32","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8099,"src":"30886:15:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":6216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:32","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6219,"nodeType":"ExpressionStatement","src":"30882:64:32"},{"expression":{"id":6232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6220,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6207,"src":"31022:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6223,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"31044:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6224,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6207,"src":"31049:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6226,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":6227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:32","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6221,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8100,"src":"31027:8:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8100_$","typeString":"type(library SafeCast)"}},"id":6222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:32","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8099,"src":"31027:15:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":6230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:32","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6233,"nodeType":"ExpressionStatement","src":"31022:56:32"},{"expression":{"id":6246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6234,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6207,"src":"31153:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6237,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"31175:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6238,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6207,"src":"31180:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6240,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":6241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:32","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6235,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8100,"src":"31158:8:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8100_$","typeString":"type(library SafeCast)"}},"id":6236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:32","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8099,"src":"31158:15:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":6244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:32","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6247,"nodeType":"ExpressionStatement","src":"31153:48:32"},{"expression":{"id":6260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6248,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6207,"src":"31276:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6251,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"31298:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6252,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6207,"src":"31303:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6254,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":6255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:32","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6249,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8100,"src":"31281:8:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8100_$","typeString":"type(library SafeCast)"}},"id":6250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:32","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8099,"src":"31281:15:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":6258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:32","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6261,"nodeType":"ExpressionStatement","src":"31276:44:32"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6262,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6207,"src":"31426:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":6263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:32","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6265,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6268,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"31453:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6269,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6207,"src":"31458:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6271,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":6272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:32","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6266,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8100,"src":"31436:8:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8100_$","typeString":"type(library SafeCast)"}},"id":6267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:32","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8099,"src":"31436:15:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6208,"id":6276,"nodeType":"Return","src":"31418:50:32"}]},"documentation":{"id":6202,"nodeType":"StructuredDocumentation","src":"30488:246:32","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":6278,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:32","nodeType":"FunctionDefinition","parameters":{"id":6205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6204,"mutability":"mutable","name":"x","nameLocation":"30763:1:32","nodeType":"VariableDeclaration","scope":6278,"src":"30755:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6203,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:32"},"returnParameters":{"id":6208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6207,"mutability":"mutable","name":"r","nameLocation":"30797:1:32","nodeType":"VariableDeclaration","scope":6278,"src":"30789:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6206,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:32"},"scope":6335,"src":"30739:736:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6314,"nodeType":"Block","src":"31712:184:32","statements":[{"id":6313,"nodeType":"UncheckedBlock","src":"31722:168:32","statements":[{"assignments":[6290],"declarations":[{"constant":false,"id":6290,"mutability":"mutable","name":"result","nameLocation":"31754:6:32","nodeType":"VariableDeclaration","scope":6313,"src":"31746:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6289,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6294,"initialValue":{"arguments":[{"id":6292,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6281,"src":"31770:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6291,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[6278,6315],"referencedDeclaration":6278,"src":"31763:6:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:32"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6295,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6290,"src":"31797:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6299,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6284,"src":"31839:8:32","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4726","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4726","typeString":"enum Math.Rounding"}],"id":6298,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6334,"src":"31822:16:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4726_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:32","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6302,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6290,"src":"31858:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":6303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:32","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6305,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6307,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6281,"src":"31873:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6296,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8100,"src":"31806:8:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8100_$","typeString":"type(library SafeCast)"}},"id":6297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:32","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8099,"src":"31806:15:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6288,"id":6312,"nodeType":"Return","src":"31790:89:32"}]}]},"documentation":{"id":6279,"nodeType":"StructuredDocumentation","src":"31481:144:32","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":6315,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:32","nodeType":"FunctionDefinition","parameters":{"id":6285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6281,"mutability":"mutable","name":"value","nameLocation":"31654:5:32","nodeType":"VariableDeclaration","scope":6315,"src":"31646:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6280,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6284,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:32","nodeType":"VariableDeclaration","scope":6315,"src":"31661:17:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4726","typeString":"enum Math.Rounding"},"typeName":{"id":6283,"nodeType":"UserDefinedTypeName","pathNode":{"id":6282,"name":"Rounding","nameLocations":["31661:8:32"],"nodeType":"IdentifierPath","referencedDeclaration":4726,"src":"31661:8:32"},"referencedDeclaration":4726,"src":"31661:8:32","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4726","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:32"},"returnParameters":{"id":6288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6287,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6315,"src":"31703:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6286,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:32"},"scope":6335,"src":"31630:266:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6333,"nodeType":"Block","src":"32094:48:32","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6326,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6319,"src":"32117:8:32","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4726","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4726","typeString":"enum Math.Rounding"}],"id":6325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6324,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:32","typeDescriptions":{}}},"id":6327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":6328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:32","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:32","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":6330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:32","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6323,"id":6332,"nodeType":"Return","src":"32104:31:32"}]},"documentation":{"id":6316,"nodeType":"StructuredDocumentation","src":"31902:113:32","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":6334,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:32","nodeType":"FunctionDefinition","parameters":{"id":6320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6319,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:32","nodeType":"VariableDeclaration","scope":6334,"src":"32046:17:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4726","typeString":"enum Math.Rounding"},"typeName":{"id":6318,"nodeType":"UserDefinedTypeName","pathNode":{"id":6317,"name":"Rounding","nameLocations":["32046:8:32"],"nodeType":"IdentifierPath","referencedDeclaration":4726,"src":"32046:8:32"},"referencedDeclaration":4726,"src":"32046:8:32","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4726","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:32"},"returnParameters":{"id":6323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6322,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6334,"src":"32088:4:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6321,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:32"},"scope":6335,"src":"32020:122:32","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6336,"src":"281:31863:32","usedErrors":[],"usedEvents":[]}],"src":"103:32042:32"},"id":32},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[8100]},"id":8101,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6337,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:33"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":6338,"nodeType":"StructuredDocumentation","src":"218:550:33","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":8100,"linearizedBaseContracts":[8100],"name":"SafeCast","nameLocation":"777:8:33","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":6339,"nodeType":"StructuredDocumentation","src":"792:68:33","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":6345,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:33","nodeType":"ErrorDefinition","parameters":{"id":6344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6341,"mutability":"mutable","name":"bits","nameLocation":"908:4:33","nodeType":"VariableDeclaration","scope":6345,"src":"902:10:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6340,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:33","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6343,"mutability":"mutable","name":"value","nameLocation":"922:5:33","nodeType":"VariableDeclaration","scope":6345,"src":"914:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6342,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:33"},"src":"865:64:33"},{"documentation":{"id":6346,"nodeType":"StructuredDocumentation","src":"935:75:33","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":6350,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:33","nodeType":"ErrorDefinition","parameters":{"id":6349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6348,"mutability":"mutable","name":"value","nameLocation":"1056:5:33","nodeType":"VariableDeclaration","scope":6350,"src":"1049:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6347,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:33"},"src":"1015:48:33"},{"documentation":{"id":6351,"nodeType":"StructuredDocumentation","src":"1069:67:33","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":6357,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:33","nodeType":"ErrorDefinition","parameters":{"id":6356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6353,"mutability":"mutable","name":"bits","nameLocation":"1183:4:33","nodeType":"VariableDeclaration","scope":6357,"src":"1177:10:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6352,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:33","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6355,"mutability":"mutable","name":"value","nameLocation":"1196:5:33","nodeType":"VariableDeclaration","scope":6357,"src":"1189:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6354,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:33"},"src":"1141:62:33"},{"documentation":{"id":6358,"nodeType":"StructuredDocumentation","src":"1209:75:33","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":6362,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:33","nodeType":"ErrorDefinition","parameters":{"id":6361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6360,"mutability":"mutable","name":"value","nameLocation":"1331:5:33","nodeType":"VariableDeclaration","scope":6362,"src":"1323:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6359,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:33"},"src":"1289:49:33"},{"body":{"id":6389,"nodeType":"Block","src":"1695:152:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6370,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6365,"src":"1709:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":6372,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:33","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":6371,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:33","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":6375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:33","memberName":"max","nodeType":"MemberAccess","src":"1717:17:33","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6383,"nodeType":"IfStatement","src":"1705:105:33","trueBody":{"id":6382,"nodeType":"Block","src":"1736:74:33","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":6378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:33","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":6379,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6365,"src":"1793:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6377,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6345,"src":"1757:30:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6381,"nodeType":"RevertStatement","src":"1750:49:33"}]}},{"expression":{"arguments":[{"id":6386,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6365,"src":"1834:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":6384,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:33","typeDescriptions":{}}},"id":6387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":6369,"id":6388,"nodeType":"Return","src":"1819:21:33"}]},"documentation":{"id":6363,"nodeType":"StructuredDocumentation","src":"1344:280:33","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":6390,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:33","nodeType":"FunctionDefinition","parameters":{"id":6366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6365,"mutability":"mutable","name":"value","nameLocation":"1656:5:33","nodeType":"VariableDeclaration","scope":6390,"src":"1648:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6364,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:33"},"returnParameters":{"id":6369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6368,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6390,"src":"1686:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":6367,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:33","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:33"},"scope":8100,"src":"1629:218:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6417,"nodeType":"Block","src":"2204:152:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6398,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6393,"src":"2218:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":6400,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:33","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":6399,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:33","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":6403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:33","memberName":"max","nodeType":"MemberAccess","src":"2226:17:33","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6411,"nodeType":"IfStatement","src":"2214:105:33","trueBody":{"id":6410,"nodeType":"Block","src":"2245:74:33","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":6406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:33","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":6407,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6393,"src":"2302:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6405,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6345,"src":"2266:30:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6409,"nodeType":"RevertStatement","src":"2259:49:33"}]}},{"expression":{"arguments":[{"id":6414,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6393,"src":"2343:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":6412,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:33","typeDescriptions":{}}},"id":6415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":6397,"id":6416,"nodeType":"Return","src":"2328:21:33"}]},"documentation":{"id":6391,"nodeType":"StructuredDocumentation","src":"1853:280:33","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":6418,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:33","nodeType":"FunctionDefinition","parameters":{"id":6394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6393,"mutability":"mutable","name":"value","nameLocation":"2165:5:33","nodeType":"VariableDeclaration","scope":6418,"src":"2157:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6392,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:33"},"returnParameters":{"id":6397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6396,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6418,"src":"2195:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":6395,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:33","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:33"},"scope":8100,"src":"2138:218:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6445,"nodeType":"Block","src":"2713:152:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6426,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6421,"src":"2727:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6429,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":6428,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:33","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":6427,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:33","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":6431,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:33","memberName":"max","nodeType":"MemberAccess","src":"2735:17:33","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6439,"nodeType":"IfStatement","src":"2723:105:33","trueBody":{"id":6438,"nodeType":"Block","src":"2754:74:33","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":6434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:33","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":6435,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6421,"src":"2811:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6433,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6345,"src":"2775:30:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6437,"nodeType":"RevertStatement","src":"2768:49:33"}]}},{"expression":{"arguments":[{"id":6442,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6421,"src":"2852:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":6440,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:33","typeDescriptions":{}}},"id":6443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":6425,"id":6444,"nodeType":"Return","src":"2837:21:33"}]},"documentation":{"id":6419,"nodeType":"StructuredDocumentation","src":"2362:280:33","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":6446,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:33","nodeType":"FunctionDefinition","parameters":{"id":6422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6421,"mutability":"mutable","name":"value","nameLocation":"2674:5:33","nodeType":"VariableDeclaration","scope":6446,"src":"2666:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6420,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:33"},"returnParameters":{"id":6425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6424,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6446,"src":"2704:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":6423,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:33","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:33"},"scope":8100,"src":"2647:218:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6473,"nodeType":"Block","src":"3222:152:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6454,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6449,"src":"3236:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":6456,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:33","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":6455,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:33","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":6459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:33","memberName":"max","nodeType":"MemberAccess","src":"3244:17:33","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6467,"nodeType":"IfStatement","src":"3232:105:33","trueBody":{"id":6466,"nodeType":"Block","src":"3263:74:33","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":6462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:33","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":6463,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6449,"src":"3320:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6461,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6345,"src":"3284:30:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6465,"nodeType":"RevertStatement","src":"3277:49:33"}]}},{"expression":{"arguments":[{"id":6470,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6449,"src":"3361:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6469,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":6468,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:33","typeDescriptions":{}}},"id":6471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":6453,"id":6472,"nodeType":"Return","src":"3346:21:33"}]},"documentation":{"id":6447,"nodeType":"StructuredDocumentation","src":"2871:280:33","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":6474,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:33","nodeType":"FunctionDefinition","parameters":{"id":6450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6449,"mutability":"mutable","name":"value","nameLocation":"3183:5:33","nodeType":"VariableDeclaration","scope":6474,"src":"3175:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6448,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:33"},"returnParameters":{"id":6453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6452,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6474,"src":"3213:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":6451,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:33","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:33"},"scope":8100,"src":"3156:218:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6501,"nodeType":"Block","src":"3731:152:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6482,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6477,"src":"3745:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6485,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":6484,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:33","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":6483,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:33","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":6487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:33","memberName":"max","nodeType":"MemberAccess","src":"3753:17:33","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6495,"nodeType":"IfStatement","src":"3741:105:33","trueBody":{"id":6494,"nodeType":"Block","src":"3772:74:33","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":6490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:33","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":6491,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6477,"src":"3829:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6489,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6345,"src":"3793:30:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6493,"nodeType":"RevertStatement","src":"3786:49:33"}]}},{"expression":{"arguments":[{"id":6498,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6477,"src":"3870:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":6496,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:33","typeDescriptions":{}}},"id":6499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":6481,"id":6500,"nodeType":"Return","src":"3855:21:33"}]},"documentation":{"id":6475,"nodeType":"StructuredDocumentation","src":"3380:280:33","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":6502,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:33","nodeType":"FunctionDefinition","parameters":{"id":6478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6477,"mutability":"mutable","name":"value","nameLocation":"3692:5:33","nodeType":"VariableDeclaration","scope":6502,"src":"3684:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6476,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:33"},"returnParameters":{"id":6481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6480,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6502,"src":"3722:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":6479,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:33","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:33"},"scope":8100,"src":"3665:218:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6529,"nodeType":"Block","src":"4240:152:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6510,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6505,"src":"4254:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6513,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":6512,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:33","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":6511,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:33","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":6515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:33","memberName":"max","nodeType":"MemberAccess","src":"4262:17:33","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6523,"nodeType":"IfStatement","src":"4250:105:33","trueBody":{"id":6522,"nodeType":"Block","src":"4281:74:33","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:33","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6519,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6505,"src":"4338:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6517,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6345,"src":"4302:30:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6521,"nodeType":"RevertStatement","src":"4295:49:33"}]}},{"expression":{"arguments":[{"id":6526,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6505,"src":"4379:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":6524,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:33","typeDescriptions":{}}},"id":6527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":6509,"id":6528,"nodeType":"Return","src":"4364:21:33"}]},"documentation":{"id":6503,"nodeType":"StructuredDocumentation","src":"3889:280:33","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6530,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:33","nodeType":"FunctionDefinition","parameters":{"id":6506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6505,"mutability":"mutable","name":"value","nameLocation":"4201:5:33","nodeType":"VariableDeclaration","scope":6530,"src":"4193:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6504,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:33"},"returnParameters":{"id":6509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6508,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6530,"src":"4231:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":6507,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:33","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:33"},"scope":8100,"src":"4174:218:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6557,"nodeType":"Block","src":"4749:152:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6538,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6533,"src":"4763:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6541,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":6540,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:33","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":6539,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:33","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":6543,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:33","memberName":"max","nodeType":"MemberAccess","src":"4771:17:33","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6551,"nodeType":"IfStatement","src":"4759:105:33","trueBody":{"id":6550,"nodeType":"Block","src":"4790:74:33","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:33","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6547,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6533,"src":"4847:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6545,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6345,"src":"4811:30:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6549,"nodeType":"RevertStatement","src":"4804:49:33"}]}},{"expression":{"arguments":[{"id":6554,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6533,"src":"4888:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":6552,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:33","typeDescriptions":{}}},"id":6555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":6537,"id":6556,"nodeType":"Return","src":"4873:21:33"}]},"documentation":{"id":6531,"nodeType":"StructuredDocumentation","src":"4398:280:33","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6558,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:33","nodeType":"FunctionDefinition","parameters":{"id":6534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6533,"mutability":"mutable","name":"value","nameLocation":"4710:5:33","nodeType":"VariableDeclaration","scope":6558,"src":"4702:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6532,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:33"},"returnParameters":{"id":6537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6536,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6558,"src":"4740:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":6535,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:33","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:33"},"scope":8100,"src":"4683:218:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6585,"nodeType":"Block","src":"5258:152:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6566,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6561,"src":"5272:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6569,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":6568,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:33","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":6567,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:33","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":6571,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:33","memberName":"max","nodeType":"MemberAccess","src":"5280:17:33","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6579,"nodeType":"IfStatement","src":"5268:105:33","trueBody":{"id":6578,"nodeType":"Block","src":"5299:74:33","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:33","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6575,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6561,"src":"5356:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6573,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6345,"src":"5320:30:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6577,"nodeType":"RevertStatement","src":"5313:49:33"}]}},{"expression":{"arguments":[{"id":6582,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6561,"src":"5397:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":6580,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:33","typeDescriptions":{}}},"id":6583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":6565,"id":6584,"nodeType":"Return","src":"5382:21:33"}]},"documentation":{"id":6559,"nodeType":"StructuredDocumentation","src":"4907:280:33","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6586,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:33","nodeType":"FunctionDefinition","parameters":{"id":6562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6561,"mutability":"mutable","name":"value","nameLocation":"5219:5:33","nodeType":"VariableDeclaration","scope":6586,"src":"5211:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6560,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:33"},"returnParameters":{"id":6565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6564,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6586,"src":"5249:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":6563,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:33","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:33"},"scope":8100,"src":"5192:218:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6613,"nodeType":"Block","src":"5767:152:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6594,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6589,"src":"5781:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6597,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":6596,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:33","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":6595,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:33","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":6599,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:33","memberName":"max","nodeType":"MemberAccess","src":"5789:17:33","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6607,"nodeType":"IfStatement","src":"5777:105:33","trueBody":{"id":6606,"nodeType":"Block","src":"5808:74:33","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:33","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6603,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6589,"src":"5865:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6601,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6345,"src":"5829:30:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6605,"nodeType":"RevertStatement","src":"5822:49:33"}]}},{"expression":{"arguments":[{"id":6610,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6589,"src":"5906:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6609,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":6608,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:33","typeDescriptions":{}}},"id":6611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":6593,"id":6612,"nodeType":"Return","src":"5891:21:33"}]},"documentation":{"id":6587,"nodeType":"StructuredDocumentation","src":"5416:280:33","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6614,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:33","nodeType":"FunctionDefinition","parameters":{"id":6590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6589,"mutability":"mutable","name":"value","nameLocation":"5728:5:33","nodeType":"VariableDeclaration","scope":6614,"src":"5720:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6588,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:33"},"returnParameters":{"id":6593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6592,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6614,"src":"5758:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":6591,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:33","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:33"},"scope":8100,"src":"5701:218:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6641,"nodeType":"Block","src":"6276:152:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6622,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6617,"src":"6290:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6625,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":6624,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:33","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":6623,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:33","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":6627,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:33","memberName":"max","nodeType":"MemberAccess","src":"6298:17:33","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6635,"nodeType":"IfStatement","src":"6286:105:33","trueBody":{"id":6634,"nodeType":"Block","src":"6317:74:33","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:33","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6631,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6617,"src":"6374:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6629,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6345,"src":"6338:30:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6633,"nodeType":"RevertStatement","src":"6331:49:33"}]}},{"expression":{"arguments":[{"id":6638,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6617,"src":"6415:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6637,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":6636,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:33","typeDescriptions":{}}},"id":6639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":6621,"id":6640,"nodeType":"Return","src":"6400:21:33"}]},"documentation":{"id":6615,"nodeType":"StructuredDocumentation","src":"5925:280:33","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6642,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:33","nodeType":"FunctionDefinition","parameters":{"id":6618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6617,"mutability":"mutable","name":"value","nameLocation":"6237:5:33","nodeType":"VariableDeclaration","scope":6642,"src":"6229:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6616,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:33"},"returnParameters":{"id":6621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6620,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6642,"src":"6267:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":6619,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:33","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:33"},"scope":8100,"src":"6210:218:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6669,"nodeType":"Block","src":"6785:152:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6650,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6645,"src":"6799:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":6652,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:33","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":6651,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:33","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":6655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:33","memberName":"max","nodeType":"MemberAccess","src":"6807:17:33","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6663,"nodeType":"IfStatement","src":"6795:105:33","trueBody":{"id":6662,"nodeType":"Block","src":"6826:74:33","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:33","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6659,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6645,"src":"6883:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6657,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6345,"src":"6847:30:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6661,"nodeType":"RevertStatement","src":"6840:49:33"}]}},{"expression":{"arguments":[{"id":6666,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6645,"src":"6924:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":6664,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:33","typeDescriptions":{}}},"id":6667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":6649,"id":6668,"nodeType":"Return","src":"6909:21:33"}]},"documentation":{"id":6643,"nodeType":"StructuredDocumentation","src":"6434:280:33","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6670,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:33","nodeType":"FunctionDefinition","parameters":{"id":6646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6645,"mutability":"mutable","name":"value","nameLocation":"6746:5:33","nodeType":"VariableDeclaration","scope":6670,"src":"6738:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6644,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:33"},"returnParameters":{"id":6649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6648,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6670,"src":"6776:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":6647,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:33","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:33"},"scope":8100,"src":"6719:218:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6697,"nodeType":"Block","src":"7294:152:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6678,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6673,"src":"7308:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6681,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6680,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:33","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":6679,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:33","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":6683,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:33","memberName":"max","nodeType":"MemberAccess","src":"7316:17:33","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6691,"nodeType":"IfStatement","src":"7304:105:33","trueBody":{"id":6690,"nodeType":"Block","src":"7335:74:33","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:33","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6687,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6673,"src":"7392:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6685,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6345,"src":"7356:30:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6689,"nodeType":"RevertStatement","src":"7349:49:33"}]}},{"expression":{"arguments":[{"id":6694,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6673,"src":"7433:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6693,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6692,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:33","typeDescriptions":{}}},"id":6695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":6677,"id":6696,"nodeType":"Return","src":"7418:21:33"}]},"documentation":{"id":6671,"nodeType":"StructuredDocumentation","src":"6943:280:33","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6698,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:33","nodeType":"FunctionDefinition","parameters":{"id":6674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6673,"mutability":"mutable","name":"value","nameLocation":"7255:5:33","nodeType":"VariableDeclaration","scope":6698,"src":"7247:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6672,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:33"},"returnParameters":{"id":6677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6676,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6698,"src":"7285:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":6675,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:33","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:33"},"scope":8100,"src":"7228:218:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6725,"nodeType":"Block","src":"7803:152:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6706,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6701,"src":"7817:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6709,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":6708,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:33","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":6707,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:33","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":6711,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:33","memberName":"max","nodeType":"MemberAccess","src":"7825:17:33","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6719,"nodeType":"IfStatement","src":"7813:105:33","trueBody":{"id":6718,"nodeType":"Block","src":"7844:74:33","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:33","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6715,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6701,"src":"7901:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6713,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6345,"src":"7865:30:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6717,"nodeType":"RevertStatement","src":"7858:49:33"}]}},{"expression":{"arguments":[{"id":6722,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6701,"src":"7942:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6721,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":6720,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:33","typeDescriptions":{}}},"id":6723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":6705,"id":6724,"nodeType":"Return","src":"7927:21:33"}]},"documentation":{"id":6699,"nodeType":"StructuredDocumentation","src":"7452:280:33","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6726,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:33","nodeType":"FunctionDefinition","parameters":{"id":6702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6701,"mutability":"mutable","name":"value","nameLocation":"7764:5:33","nodeType":"VariableDeclaration","scope":6726,"src":"7756:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6700,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:33"},"returnParameters":{"id":6705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6704,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6726,"src":"7794:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":6703,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:33","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:33"},"scope":8100,"src":"7737:218:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6753,"nodeType":"Block","src":"8312:152:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6734,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6729,"src":"8326:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6736,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:33","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":6735,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:33","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":6739,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:33","memberName":"max","nodeType":"MemberAccess","src":"8334:17:33","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6747,"nodeType":"IfStatement","src":"8322:105:33","trueBody":{"id":6746,"nodeType":"Block","src":"8353:74:33","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:33","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6743,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6729,"src":"8410:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6741,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6345,"src":"8374:30:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6745,"nodeType":"RevertStatement","src":"8367:49:33"}]}},{"expression":{"arguments":[{"id":6750,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6729,"src":"8451:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6749,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6748,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:33","typeDescriptions":{}}},"id":6751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":6733,"id":6752,"nodeType":"Return","src":"8436:21:33"}]},"documentation":{"id":6727,"nodeType":"StructuredDocumentation","src":"7961:280:33","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6754,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:33","nodeType":"FunctionDefinition","parameters":{"id":6730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6729,"mutability":"mutable","name":"value","nameLocation":"8273:5:33","nodeType":"VariableDeclaration","scope":6754,"src":"8265:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6728,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:33"},"returnParameters":{"id":6733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6732,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6754,"src":"8303:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":6731,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:33","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:33"},"scope":8100,"src":"8246:218:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6781,"nodeType":"Block","src":"8821:152:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6762,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6757,"src":"8835:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6765,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6764,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:33","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":6763,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:33","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":6767,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:33","memberName":"max","nodeType":"MemberAccess","src":"8843:17:33","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6775,"nodeType":"IfStatement","src":"8831:105:33","trueBody":{"id":6774,"nodeType":"Block","src":"8862:74:33","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:33","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6771,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6757,"src":"8919:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6769,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6345,"src":"8883:30:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6773,"nodeType":"RevertStatement","src":"8876:49:33"}]}},{"expression":{"arguments":[{"id":6778,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6757,"src":"8960:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6777,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6776,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:33","typeDescriptions":{}}},"id":6779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":6761,"id":6780,"nodeType":"Return","src":"8945:21:33"}]},"documentation":{"id":6755,"nodeType":"StructuredDocumentation","src":"8470:280:33","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6782,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:33","nodeType":"FunctionDefinition","parameters":{"id":6758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6757,"mutability":"mutable","name":"value","nameLocation":"8782:5:33","nodeType":"VariableDeclaration","scope":6782,"src":"8774:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6756,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:33"},"returnParameters":{"id":6761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6760,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6782,"src":"8812:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":6759,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:33","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:33"},"scope":8100,"src":"8755:218:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6809,"nodeType":"Block","src":"9330:152:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6790,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6785,"src":"9344:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6792,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:33","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":6791,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:33","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":6795,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:33","memberName":"max","nodeType":"MemberAccess","src":"9352:17:33","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6803,"nodeType":"IfStatement","src":"9340:105:33","trueBody":{"id":6802,"nodeType":"Block","src":"9371:74:33","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:33","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6799,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6785,"src":"9428:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6797,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6345,"src":"9392:30:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6801,"nodeType":"RevertStatement","src":"9385:49:33"}]}},{"expression":{"arguments":[{"id":6806,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6785,"src":"9469:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6805,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6804,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:33","typeDescriptions":{}}},"id":6807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":6789,"id":6808,"nodeType":"Return","src":"9454:21:33"}]},"documentation":{"id":6783,"nodeType":"StructuredDocumentation","src":"8979:280:33","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6810,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:33","nodeType":"FunctionDefinition","parameters":{"id":6786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6785,"mutability":"mutable","name":"value","nameLocation":"9291:5:33","nodeType":"VariableDeclaration","scope":6810,"src":"9283:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6784,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:33"},"returnParameters":{"id":6789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6788,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6810,"src":"9321:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":6787,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:33","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:33"},"scope":8100,"src":"9264:218:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6837,"nodeType":"Block","src":"9839:152:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6818,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6813,"src":"9853:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6821,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6820,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:33","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":6819,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:33","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":6823,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:33","memberName":"max","nodeType":"MemberAccess","src":"9861:17:33","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6831,"nodeType":"IfStatement","src":"9849:105:33","trueBody":{"id":6830,"nodeType":"Block","src":"9880:74:33","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:33","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6827,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6813,"src":"9937:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6825,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6345,"src":"9901:30:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6829,"nodeType":"RevertStatement","src":"9894:49:33"}]}},{"expression":{"arguments":[{"id":6834,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6813,"src":"9978:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6833,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6832,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:33","typeDescriptions":{}}},"id":6835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":6817,"id":6836,"nodeType":"Return","src":"9963:21:33"}]},"documentation":{"id":6811,"nodeType":"StructuredDocumentation","src":"9488:280:33","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6838,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:33","nodeType":"FunctionDefinition","parameters":{"id":6814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6813,"mutability":"mutable","name":"value","nameLocation":"9800:5:33","nodeType":"VariableDeclaration","scope":6838,"src":"9792:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6812,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:33"},"returnParameters":{"id":6817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6816,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6838,"src":"9830:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":6815,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:33","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:33"},"scope":8100,"src":"9773:218:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6865,"nodeType":"Block","src":"10348:152:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6846,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6841,"src":"10362:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6849,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6848,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:33","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":6847,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:33","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":6851,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:33","memberName":"max","nodeType":"MemberAccess","src":"10370:17:33","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6859,"nodeType":"IfStatement","src":"10358:105:33","trueBody":{"id":6858,"nodeType":"Block","src":"10389:74:33","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:33","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6855,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6841,"src":"10446:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6853,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6345,"src":"10410:30:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6857,"nodeType":"RevertStatement","src":"10403:49:33"}]}},{"expression":{"arguments":[{"id":6862,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6841,"src":"10487:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6860,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:33","typeDescriptions":{}}},"id":6863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":6845,"id":6864,"nodeType":"Return","src":"10472:21:33"}]},"documentation":{"id":6839,"nodeType":"StructuredDocumentation","src":"9997:280:33","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6866,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:33","nodeType":"FunctionDefinition","parameters":{"id":6842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6841,"mutability":"mutable","name":"value","nameLocation":"10309:5:33","nodeType":"VariableDeclaration","scope":6866,"src":"10301:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6840,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:33"},"returnParameters":{"id":6845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6844,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6866,"src":"10339:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":6843,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:33","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:33"},"scope":8100,"src":"10282:218:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6893,"nodeType":"Block","src":"10857:152:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6874,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6869,"src":"10871:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6877,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6876,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:33","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":6875,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:33","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":6879,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:33","memberName":"max","nodeType":"MemberAccess","src":"10879:17:33","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6887,"nodeType":"IfStatement","src":"10867:105:33","trueBody":{"id":6886,"nodeType":"Block","src":"10898:74:33","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:33","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6883,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6869,"src":"10955:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6881,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6345,"src":"10919:30:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6885,"nodeType":"RevertStatement","src":"10912:49:33"}]}},{"expression":{"arguments":[{"id":6890,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6869,"src":"10996:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6889,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6888,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:33","typeDescriptions":{}}},"id":6891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":6873,"id":6892,"nodeType":"Return","src":"10981:21:33"}]},"documentation":{"id":6867,"nodeType":"StructuredDocumentation","src":"10506:280:33","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6894,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:33","nodeType":"FunctionDefinition","parameters":{"id":6870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6869,"mutability":"mutable","name":"value","nameLocation":"10818:5:33","nodeType":"VariableDeclaration","scope":6894,"src":"10810:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6868,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:33"},"returnParameters":{"id":6873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6872,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6894,"src":"10848:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":6871,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:33","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:33"},"scope":8100,"src":"10791:218:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6921,"nodeType":"Block","src":"11360:149:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6902,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6897,"src":"11374:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6905,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6904,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:33","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":6903,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:33","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":6907,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:33","memberName":"max","nodeType":"MemberAccess","src":"11382:16:33","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6915,"nodeType":"IfStatement","src":"11370:103:33","trueBody":{"id":6914,"nodeType":"Block","src":"11400:73:33","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:33","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6911,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6897,"src":"11456:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6909,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6345,"src":"11421:30:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6913,"nodeType":"RevertStatement","src":"11414:48:33"}]}},{"expression":{"arguments":[{"id":6918,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6897,"src":"11496:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6917,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6916,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:33","typeDescriptions":{}}},"id":6919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":6901,"id":6920,"nodeType":"Return","src":"11482:20:33"}]},"documentation":{"id":6895,"nodeType":"StructuredDocumentation","src":"11015:276:33","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6922,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:33","nodeType":"FunctionDefinition","parameters":{"id":6898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6897,"mutability":"mutable","name":"value","nameLocation":"11322:5:33","nodeType":"VariableDeclaration","scope":6922,"src":"11314:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6896,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:33"},"returnParameters":{"id":6901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6900,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6922,"src":"11352:6:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":6899,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:33","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:33"},"scope":8100,"src":"11296:213:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6949,"nodeType":"Block","src":"11860:149:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6930,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6925,"src":"11874:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6933,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6932,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:33","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":6931,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:33","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":6935,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:33","memberName":"max","nodeType":"MemberAccess","src":"11882:16:33","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6943,"nodeType":"IfStatement","src":"11870:103:33","trueBody":{"id":6942,"nodeType":"Block","src":"11900:73:33","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:33","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6939,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6925,"src":"11956:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6937,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6345,"src":"11921:30:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6941,"nodeType":"RevertStatement","src":"11914:48:33"}]}},{"expression":{"arguments":[{"id":6946,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6925,"src":"11996:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6945,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6944,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:33","typeDescriptions":{}}},"id":6947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":6929,"id":6948,"nodeType":"Return","src":"11982:20:33"}]},"documentation":{"id":6923,"nodeType":"StructuredDocumentation","src":"11515:276:33","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6950,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:33","nodeType":"FunctionDefinition","parameters":{"id":6926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6925,"mutability":"mutable","name":"value","nameLocation":"11822:5:33","nodeType":"VariableDeclaration","scope":6950,"src":"11814:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6924,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:33"},"returnParameters":{"id":6929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6928,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6950,"src":"11852:6:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":6927,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:33","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:33"},"scope":8100,"src":"11796:213:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6977,"nodeType":"Block","src":"12360:149:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6958,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6953,"src":"12374:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6961,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6960,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:33","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":6959,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:33","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":6963,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:33","memberName":"max","nodeType":"MemberAccess","src":"12382:16:33","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6971,"nodeType":"IfStatement","src":"12370:103:33","trueBody":{"id":6970,"nodeType":"Block","src":"12400:73:33","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:33","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6967,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6953,"src":"12456:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6965,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6345,"src":"12421:30:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6969,"nodeType":"RevertStatement","src":"12414:48:33"}]}},{"expression":{"arguments":[{"id":6974,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6953,"src":"12496:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6973,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6972,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:33","typeDescriptions":{}}},"id":6975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":6957,"id":6976,"nodeType":"Return","src":"12482:20:33"}]},"documentation":{"id":6951,"nodeType":"StructuredDocumentation","src":"12015:276:33","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6978,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:33","nodeType":"FunctionDefinition","parameters":{"id":6954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6953,"mutability":"mutable","name":"value","nameLocation":"12322:5:33","nodeType":"VariableDeclaration","scope":6978,"src":"12314:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6952,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:33"},"returnParameters":{"id":6957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6956,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6978,"src":"12352:6:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":6955,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:33","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:33"},"scope":8100,"src":"12296:213:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7005,"nodeType":"Block","src":"12860:149:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6986,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6981,"src":"12874:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6988,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:33","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":6987,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:33","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":6991,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:33","memberName":"max","nodeType":"MemberAccess","src":"12882:16:33","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6999,"nodeType":"IfStatement","src":"12870:103:33","trueBody":{"id":6998,"nodeType":"Block","src":"12900:73:33","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:33","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6995,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6981,"src":"12956:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6993,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6345,"src":"12921:30:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6997,"nodeType":"RevertStatement","src":"12914:48:33"}]}},{"expression":{"arguments":[{"id":7002,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6981,"src":"12996:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7001,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":7000,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:33","typeDescriptions":{}}},"id":7003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":6985,"id":7004,"nodeType":"Return","src":"12982:20:33"}]},"documentation":{"id":6979,"nodeType":"StructuredDocumentation","src":"12515:276:33","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":7006,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:33","nodeType":"FunctionDefinition","parameters":{"id":6982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6981,"mutability":"mutable","name":"value","nameLocation":"12822:5:33","nodeType":"VariableDeclaration","scope":7006,"src":"12814:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6980,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:33"},"returnParameters":{"id":6985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6984,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7006,"src":"12852:6:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":6983,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:33","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:33"},"scope":8100,"src":"12796:213:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7033,"nodeType":"Block","src":"13360:149:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7014,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7009,"src":"13374:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7017,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":7016,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:33","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":7015,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:33","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":7019,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:33","memberName":"max","nodeType":"MemberAccess","src":"13382:16:33","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7027,"nodeType":"IfStatement","src":"13370:103:33","trueBody":{"id":7026,"nodeType":"Block","src":"13400:73:33","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":7022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:33","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":7023,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7009,"src":"13456:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7021,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6345,"src":"13421:30:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7025,"nodeType":"RevertStatement","src":"13414:48:33"}]}},{"expression":{"arguments":[{"id":7030,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7009,"src":"13496:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7029,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":7028,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:33","typeDescriptions":{}}},"id":7031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":7013,"id":7032,"nodeType":"Return","src":"13482:20:33"}]},"documentation":{"id":7007,"nodeType":"StructuredDocumentation","src":"13015:276:33","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":7034,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:33","nodeType":"FunctionDefinition","parameters":{"id":7010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7009,"mutability":"mutable","name":"value","nameLocation":"13322:5:33","nodeType":"VariableDeclaration","scope":7034,"src":"13314:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7008,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:33"},"returnParameters":{"id":7013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7012,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7034,"src":"13352:6:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":7011,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:33","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:33"},"scope":8100,"src":"13296:213:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7061,"nodeType":"Block","src":"13860:149:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7042,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7037,"src":"13874:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7045,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":7044,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:33","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":7043,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:33","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":7047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:33","memberName":"max","nodeType":"MemberAccess","src":"13882:16:33","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7055,"nodeType":"IfStatement","src":"13870:103:33","trueBody":{"id":7054,"nodeType":"Block","src":"13900:73:33","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":7050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:33","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":7051,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7037,"src":"13956:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7049,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6345,"src":"13921:30:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7053,"nodeType":"RevertStatement","src":"13914:48:33"}]}},{"expression":{"arguments":[{"id":7058,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7037,"src":"13996:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7057,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":7056,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:33","typeDescriptions":{}}},"id":7059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":7041,"id":7060,"nodeType":"Return","src":"13982:20:33"}]},"documentation":{"id":7035,"nodeType":"StructuredDocumentation","src":"13515:276:33","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":7062,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:33","nodeType":"FunctionDefinition","parameters":{"id":7038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7037,"mutability":"mutable","name":"value","nameLocation":"13822:5:33","nodeType":"VariableDeclaration","scope":7062,"src":"13814:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7036,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:33"},"returnParameters":{"id":7041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7040,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7062,"src":"13852:6:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":7039,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:33","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:33"},"scope":8100,"src":"13796:213:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7089,"nodeType":"Block","src":"14360:149:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7070,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7065,"src":"14374:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":7072,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:33","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":7071,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:33","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":7075,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:33","memberName":"max","nodeType":"MemberAccess","src":"14382:16:33","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7083,"nodeType":"IfStatement","src":"14370:103:33","trueBody":{"id":7082,"nodeType":"Block","src":"14400:73:33","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":7078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:33","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":7079,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7065,"src":"14456:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7077,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6345,"src":"14421:30:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7081,"nodeType":"RevertStatement","src":"14414:48:33"}]}},{"expression":{"arguments":[{"id":7086,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7065,"src":"14496:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7085,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":7084,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:33","typeDescriptions":{}}},"id":7087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":7069,"id":7088,"nodeType":"Return","src":"14482:20:33"}]},"documentation":{"id":7063,"nodeType":"StructuredDocumentation","src":"14015:276:33","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":7090,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:33","nodeType":"FunctionDefinition","parameters":{"id":7066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7065,"mutability":"mutable","name":"value","nameLocation":"14322:5:33","nodeType":"VariableDeclaration","scope":7090,"src":"14314:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7064,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:33"},"returnParameters":{"id":7069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7068,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7090,"src":"14352:6:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7067,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:33","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:33"},"scope":8100,"src":"14296:213:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7117,"nodeType":"Block","src":"14860:149:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7098,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7093,"src":"14874:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7101,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":7100,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:33","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":7099,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:33","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":7103,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:33","memberName":"max","nodeType":"MemberAccess","src":"14882:16:33","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7111,"nodeType":"IfStatement","src":"14870:103:33","trueBody":{"id":7110,"nodeType":"Block","src":"14900:73:33","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":7106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:33","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":7107,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7093,"src":"14956:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7105,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6345,"src":"14921:30:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7109,"nodeType":"RevertStatement","src":"14914:48:33"}]}},{"expression":{"arguments":[{"id":7114,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7093,"src":"14996:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7113,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":7112,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:33","typeDescriptions":{}}},"id":7115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":7097,"id":7116,"nodeType":"Return","src":"14982:20:33"}]},"documentation":{"id":7091,"nodeType":"StructuredDocumentation","src":"14515:276:33","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":7118,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:33","nodeType":"FunctionDefinition","parameters":{"id":7094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7093,"mutability":"mutable","name":"value","nameLocation":"14822:5:33","nodeType":"VariableDeclaration","scope":7118,"src":"14814:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7092,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:33"},"returnParameters":{"id":7097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7096,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7118,"src":"14852:6:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":7095,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:33","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:33"},"scope":8100,"src":"14796:213:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7145,"nodeType":"Block","src":"15360:149:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7126,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7121,"src":"15374:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7129,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":7128,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:33","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":7127,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:33","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":7131,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:33","memberName":"max","nodeType":"MemberAccess","src":"15382:16:33","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7139,"nodeType":"IfStatement","src":"15370:103:33","trueBody":{"id":7138,"nodeType":"Block","src":"15400:73:33","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":7134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:33","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":7135,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7121,"src":"15456:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7133,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6345,"src":"15421:30:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7137,"nodeType":"RevertStatement","src":"15414:48:33"}]}},{"expression":{"arguments":[{"id":7142,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7121,"src":"15496:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":7140,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:33","typeDescriptions":{}}},"id":7143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":7125,"id":7144,"nodeType":"Return","src":"15482:20:33"}]},"documentation":{"id":7119,"nodeType":"StructuredDocumentation","src":"15015:276:33","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":7146,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:33","nodeType":"FunctionDefinition","parameters":{"id":7122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7121,"mutability":"mutable","name":"value","nameLocation":"15322:5:33","nodeType":"VariableDeclaration","scope":7146,"src":"15314:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7120,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:33"},"returnParameters":{"id":7125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7124,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7146,"src":"15352:6:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7123,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:33","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:33"},"scope":8100,"src":"15296:213:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7173,"nodeType":"Block","src":"15860:149:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7154,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7149,"src":"15874:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7157,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":7156,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:33","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":7155,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:33","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":7159,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:33","memberName":"max","nodeType":"MemberAccess","src":"15882:16:33","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7167,"nodeType":"IfStatement","src":"15870:103:33","trueBody":{"id":7166,"nodeType":"Block","src":"15900:73:33","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":7162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:33","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":7163,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7149,"src":"15956:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7161,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6345,"src":"15921:30:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7165,"nodeType":"RevertStatement","src":"15914:48:33"}]}},{"expression":{"arguments":[{"id":7170,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7149,"src":"15996:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7169,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":7168,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:33","typeDescriptions":{}}},"id":7171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":7153,"id":7172,"nodeType":"Return","src":"15982:20:33"}]},"documentation":{"id":7147,"nodeType":"StructuredDocumentation","src":"15515:276:33","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":7174,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:33","nodeType":"FunctionDefinition","parameters":{"id":7150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7149,"mutability":"mutable","name":"value","nameLocation":"15822:5:33","nodeType":"VariableDeclaration","scope":7174,"src":"15814:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7148,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:33"},"returnParameters":{"id":7153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7152,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7174,"src":"15852:6:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":7151,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:33","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:33"},"scope":8100,"src":"15796:213:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7201,"nodeType":"Block","src":"16360:149:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7182,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7177,"src":"16374:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":7184,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:33","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":7183,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:33","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":7187,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:33","memberName":"max","nodeType":"MemberAccess","src":"16382:16:33","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7195,"nodeType":"IfStatement","src":"16370:103:33","trueBody":{"id":7194,"nodeType":"Block","src":"16400:73:33","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":7190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:33","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":7191,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7177,"src":"16456:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7189,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6345,"src":"16421:30:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7193,"nodeType":"RevertStatement","src":"16414:48:33"}]}},{"expression":{"arguments":[{"id":7198,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7177,"src":"16496:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7197,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":7196,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:33","typeDescriptions":{}}},"id":7199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":7181,"id":7200,"nodeType":"Return","src":"16482:20:33"}]},"documentation":{"id":7175,"nodeType":"StructuredDocumentation","src":"16015:276:33","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":7202,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:33","nodeType":"FunctionDefinition","parameters":{"id":7178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7177,"mutability":"mutable","name":"value","nameLocation":"16322:5:33","nodeType":"VariableDeclaration","scope":7202,"src":"16314:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7176,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:33"},"returnParameters":{"id":7181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7180,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7202,"src":"16352:6:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":7179,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:33","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:33"},"scope":8100,"src":"16296:213:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7229,"nodeType":"Block","src":"16854:146:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7210,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7205,"src":"16868:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7213,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":7212,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:33","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":7211,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:33","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":7215,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:33","memberName":"max","nodeType":"MemberAccess","src":"16876:15:33","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7223,"nodeType":"IfStatement","src":"16864:101:33","trueBody":{"id":7222,"nodeType":"Block","src":"16893:72:33","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":7218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:33","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":7219,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7205,"src":"16948:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7217,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6345,"src":"16914:30:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7221,"nodeType":"RevertStatement","src":"16907:47:33"}]}},{"expression":{"arguments":[{"id":7226,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7205,"src":"16987:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":7224,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:33","typeDescriptions":{}}},"id":7227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":7209,"id":7228,"nodeType":"Return","src":"16974:19:33"}]},"documentation":{"id":7203,"nodeType":"StructuredDocumentation","src":"16515:272:33","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":7230,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:33","nodeType":"FunctionDefinition","parameters":{"id":7206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7205,"mutability":"mutable","name":"value","nameLocation":"16817:5:33","nodeType":"VariableDeclaration","scope":7230,"src":"16809:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7204,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:33"},"returnParameters":{"id":7209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7208,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7230,"src":"16847:5:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7207,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:33","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:33"},"scope":8100,"src":"16792:208:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7252,"nodeType":"Block","src":"17236:128:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7238,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7233,"src":"17250:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":7239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7246,"nodeType":"IfStatement","src":"17246:81:33","trueBody":{"id":7245,"nodeType":"Block","src":"17261:66:33","statements":[{"errorCall":{"arguments":[{"id":7242,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7233,"src":"17310:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7241,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6350,"src":"17282:27:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$_t_error_$","typeString":"function (int256) pure returns (error)"}},"id":7243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7244,"nodeType":"RevertStatement","src":"17275:41:33"}]}},{"expression":{"arguments":[{"id":7249,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7233,"src":"17351:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7248,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7247,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:33","typeDescriptions":{}}},"id":7250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7237,"id":7251,"nodeType":"Return","src":"17336:21:33"}]},"documentation":{"id":7231,"nodeType":"StructuredDocumentation","src":"17006:160:33","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":7253,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:33","nodeType":"FunctionDefinition","parameters":{"id":7234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7233,"mutability":"mutable","name":"value","nameLocation":"17197:5:33","nodeType":"VariableDeclaration","scope":7253,"src":"17190:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7232,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:33"},"returnParameters":{"id":7237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7236,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7253,"src":"17227:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7235,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:33"},"scope":8100,"src":"17171:193:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7278,"nodeType":"Block","src":"17761:150:33","statements":[{"expression":{"id":7266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7261,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7259,"src":"17771:10:33","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7264,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7256,"src":"17791:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7263,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":7262,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:33","typeDescriptions":{}}},"id":7265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:33","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":7267,"nodeType":"ExpressionStatement","src":"17771:26:33"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7268,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7259,"src":"17811:10:33","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7269,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7256,"src":"17825:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7277,"nodeType":"IfStatement","src":"17807:98:33","trueBody":{"id":7276,"nodeType":"Block","src":"17832:73:33","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":7272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:33","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":7273,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7256,"src":"17888:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7271,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6357,"src":"17853:29:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7275,"nodeType":"RevertStatement","src":"17846:48:33"}]}}]},"documentation":{"id":7254,"nodeType":"StructuredDocumentation","src":"17370:312:33","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":7279,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:33","nodeType":"FunctionDefinition","parameters":{"id":7257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7256,"mutability":"mutable","name":"value","nameLocation":"17712:5:33","nodeType":"VariableDeclaration","scope":7279,"src":"17705:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7255,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:33"},"returnParameters":{"id":7260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7259,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:33","nodeType":"VariableDeclaration","scope":7279,"src":"17742:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":7258,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:33","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:33"},"scope":8100,"src":"17687:224:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7304,"nodeType":"Block","src":"18308:150:33","statements":[{"expression":{"id":7292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7287,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7285,"src":"18318:10:33","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7290,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7282,"src":"18338:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7289,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":7288,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:33","typeDescriptions":{}}},"id":7291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:33","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":7293,"nodeType":"ExpressionStatement","src":"18318:26:33"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7294,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7285,"src":"18358:10:33","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7295,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7282,"src":"18372:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7303,"nodeType":"IfStatement","src":"18354:98:33","trueBody":{"id":7302,"nodeType":"Block","src":"18379:73:33","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":7298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:33","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":7299,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7282,"src":"18435:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7297,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6357,"src":"18400:29:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7301,"nodeType":"RevertStatement","src":"18393:48:33"}]}}]},"documentation":{"id":7280,"nodeType":"StructuredDocumentation","src":"17917:312:33","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":7305,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:33","nodeType":"FunctionDefinition","parameters":{"id":7283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7282,"mutability":"mutable","name":"value","nameLocation":"18259:5:33","nodeType":"VariableDeclaration","scope":7305,"src":"18252:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7281,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:33"},"returnParameters":{"id":7286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7285,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:33","nodeType":"VariableDeclaration","scope":7305,"src":"18289:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":7284,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:33","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:33"},"scope":8100,"src":"18234:224:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7330,"nodeType":"Block","src":"18855:150:33","statements":[{"expression":{"id":7318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7313,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7311,"src":"18865:10:33","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7316,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7308,"src":"18885:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":7314,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:33","typeDescriptions":{}}},"id":7317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:33","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":7319,"nodeType":"ExpressionStatement","src":"18865:26:33"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7320,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7311,"src":"18905:10:33","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7321,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7308,"src":"18919:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7329,"nodeType":"IfStatement","src":"18901:98:33","trueBody":{"id":7328,"nodeType":"Block","src":"18926:73:33","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":7324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:33","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":7325,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7308,"src":"18982:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7323,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6357,"src":"18947:29:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7327,"nodeType":"RevertStatement","src":"18940:48:33"}]}}]},"documentation":{"id":7306,"nodeType":"StructuredDocumentation","src":"18464:312:33","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":7331,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:33","nodeType":"FunctionDefinition","parameters":{"id":7309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7308,"mutability":"mutable","name":"value","nameLocation":"18806:5:33","nodeType":"VariableDeclaration","scope":7331,"src":"18799:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7307,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:33"},"returnParameters":{"id":7312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7311,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:33","nodeType":"VariableDeclaration","scope":7331,"src":"18836:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":7310,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:33","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:33"},"scope":8100,"src":"18781:224:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7356,"nodeType":"Block","src":"19402:150:33","statements":[{"expression":{"id":7344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7339,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7337,"src":"19412:10:33","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7342,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7334,"src":"19432:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7341,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":7340,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:33","typeDescriptions":{}}},"id":7343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:33","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":7345,"nodeType":"ExpressionStatement","src":"19412:26:33"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7346,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7337,"src":"19452:10:33","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7347,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7334,"src":"19466:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7355,"nodeType":"IfStatement","src":"19448:98:33","trueBody":{"id":7354,"nodeType":"Block","src":"19473:73:33","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":7350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:33","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":7351,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7334,"src":"19529:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7349,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6357,"src":"19494:29:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7353,"nodeType":"RevertStatement","src":"19487:48:33"}]}}]},"documentation":{"id":7332,"nodeType":"StructuredDocumentation","src":"19011:312:33","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":7357,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:33","nodeType":"FunctionDefinition","parameters":{"id":7335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7334,"mutability":"mutable","name":"value","nameLocation":"19353:5:33","nodeType":"VariableDeclaration","scope":7357,"src":"19346:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7333,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:33"},"returnParameters":{"id":7338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7337,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:33","nodeType":"VariableDeclaration","scope":7357,"src":"19383:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":7336,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:33","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:33"},"scope":8100,"src":"19328:224:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7382,"nodeType":"Block","src":"19949:150:33","statements":[{"expression":{"id":7370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7365,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7363,"src":"19959:10:33","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7368,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7360,"src":"19979:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":7366,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:33","typeDescriptions":{}}},"id":7369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:33","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":7371,"nodeType":"ExpressionStatement","src":"19959:26:33"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7372,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7363,"src":"19999:10:33","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7373,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7360,"src":"20013:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7381,"nodeType":"IfStatement","src":"19995:98:33","trueBody":{"id":7380,"nodeType":"Block","src":"20020:73:33","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":7376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:33","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":7377,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7360,"src":"20076:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7375,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6357,"src":"20041:29:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7379,"nodeType":"RevertStatement","src":"20034:48:33"}]}}]},"documentation":{"id":7358,"nodeType":"StructuredDocumentation","src":"19558:312:33","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":7383,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:33","nodeType":"FunctionDefinition","parameters":{"id":7361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7360,"mutability":"mutable","name":"value","nameLocation":"19900:5:33","nodeType":"VariableDeclaration","scope":7383,"src":"19893:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7359,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:33"},"returnParameters":{"id":7364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7363,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:33","nodeType":"VariableDeclaration","scope":7383,"src":"19930:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":7362,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:33","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:33"},"scope":8100,"src":"19875:224:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7408,"nodeType":"Block","src":"20496:150:33","statements":[{"expression":{"id":7396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7391,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7389,"src":"20506:10:33","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7394,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7386,"src":"20526:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":7392,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:33","typeDescriptions":{}}},"id":7395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:33","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":7397,"nodeType":"ExpressionStatement","src":"20506:26:33"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7398,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7389,"src":"20546:10:33","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7399,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7386,"src":"20560:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7407,"nodeType":"IfStatement","src":"20542:98:33","trueBody":{"id":7406,"nodeType":"Block","src":"20567:73:33","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":7402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:33","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":7403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7386,"src":"20623:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7401,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6357,"src":"20588:29:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7405,"nodeType":"RevertStatement","src":"20581:48:33"}]}}]},"documentation":{"id":7384,"nodeType":"StructuredDocumentation","src":"20105:312:33","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":7409,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:33","nodeType":"FunctionDefinition","parameters":{"id":7387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7386,"mutability":"mutable","name":"value","nameLocation":"20447:5:33","nodeType":"VariableDeclaration","scope":7409,"src":"20440:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7385,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:33"},"returnParameters":{"id":7390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7389,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:33","nodeType":"VariableDeclaration","scope":7409,"src":"20477:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":7388,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:33","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:33"},"scope":8100,"src":"20422:224:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7434,"nodeType":"Block","src":"21043:150:33","statements":[{"expression":{"id":7422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7417,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7415,"src":"21053:10:33","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7420,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7412,"src":"21073:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":7418,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:33","typeDescriptions":{}}},"id":7421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:33","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":7423,"nodeType":"ExpressionStatement","src":"21053:26:33"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7424,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7415,"src":"21093:10:33","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7425,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7412,"src":"21107:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7433,"nodeType":"IfStatement","src":"21089:98:33","trueBody":{"id":7432,"nodeType":"Block","src":"21114:73:33","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":7428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:33","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":7429,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7412,"src":"21170:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7427,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6357,"src":"21135:29:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7431,"nodeType":"RevertStatement","src":"21128:48:33"}]}}]},"documentation":{"id":7410,"nodeType":"StructuredDocumentation","src":"20652:312:33","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":7435,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:33","nodeType":"FunctionDefinition","parameters":{"id":7413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7412,"mutability":"mutable","name":"value","nameLocation":"20994:5:33","nodeType":"VariableDeclaration","scope":7435,"src":"20987:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7411,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:33"},"returnParameters":{"id":7416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7415,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:33","nodeType":"VariableDeclaration","scope":7435,"src":"21024:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":7414,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:33","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:33"},"scope":8100,"src":"20969:224:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7460,"nodeType":"Block","src":"21590:150:33","statements":[{"expression":{"id":7448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7443,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7441,"src":"21600:10:33","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7446,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7438,"src":"21620:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":7444,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:33","typeDescriptions":{}}},"id":7447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:33","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":7449,"nodeType":"ExpressionStatement","src":"21600:26:33"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7450,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7441,"src":"21640:10:33","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7451,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7438,"src":"21654:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7459,"nodeType":"IfStatement","src":"21636:98:33","trueBody":{"id":7458,"nodeType":"Block","src":"21661:73:33","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":7454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:33","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":7455,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7438,"src":"21717:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7453,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6357,"src":"21682:29:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7457,"nodeType":"RevertStatement","src":"21675:48:33"}]}}]},"documentation":{"id":7436,"nodeType":"StructuredDocumentation","src":"21199:312:33","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":7461,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:33","nodeType":"FunctionDefinition","parameters":{"id":7439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7438,"mutability":"mutable","name":"value","nameLocation":"21541:5:33","nodeType":"VariableDeclaration","scope":7461,"src":"21534:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7437,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:33"},"returnParameters":{"id":7442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7441,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:33","nodeType":"VariableDeclaration","scope":7461,"src":"21571:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":7440,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:33","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:33"},"scope":8100,"src":"21516:224:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7486,"nodeType":"Block","src":"22137:150:33","statements":[{"expression":{"id":7474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7469,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7467,"src":"22147:10:33","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7472,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7464,"src":"22167:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":7470,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:33","typeDescriptions":{}}},"id":7473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:33","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":7475,"nodeType":"ExpressionStatement","src":"22147:26:33"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7476,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7467,"src":"22187:10:33","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7477,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7464,"src":"22201:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7485,"nodeType":"IfStatement","src":"22183:98:33","trueBody":{"id":7484,"nodeType":"Block","src":"22208:73:33","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":7480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:33","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":7481,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7464,"src":"22264:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7479,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6357,"src":"22229:29:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7483,"nodeType":"RevertStatement","src":"22222:48:33"}]}}]},"documentation":{"id":7462,"nodeType":"StructuredDocumentation","src":"21746:312:33","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":7487,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:33","nodeType":"FunctionDefinition","parameters":{"id":7465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7464,"mutability":"mutable","name":"value","nameLocation":"22088:5:33","nodeType":"VariableDeclaration","scope":7487,"src":"22081:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7463,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:33"},"returnParameters":{"id":7468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7467,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:33","nodeType":"VariableDeclaration","scope":7487,"src":"22118:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":7466,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:33","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:33"},"scope":8100,"src":"22063:224:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7512,"nodeType":"Block","src":"22684:150:33","statements":[{"expression":{"id":7500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7495,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7493,"src":"22694:10:33","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7498,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7490,"src":"22714:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":7496,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:33","typeDescriptions":{}}},"id":7499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:33","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":7501,"nodeType":"ExpressionStatement","src":"22694:26:33"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7502,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7493,"src":"22734:10:33","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7503,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7490,"src":"22748:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7511,"nodeType":"IfStatement","src":"22730:98:33","trueBody":{"id":7510,"nodeType":"Block","src":"22755:73:33","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":7506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:33","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":7507,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7490,"src":"22811:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7505,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6357,"src":"22776:29:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7509,"nodeType":"RevertStatement","src":"22769:48:33"}]}}]},"documentation":{"id":7488,"nodeType":"StructuredDocumentation","src":"22293:312:33","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":7513,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:33","nodeType":"FunctionDefinition","parameters":{"id":7491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7490,"mutability":"mutable","name":"value","nameLocation":"22635:5:33","nodeType":"VariableDeclaration","scope":7513,"src":"22628:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7489,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:33"},"returnParameters":{"id":7494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7493,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:33","nodeType":"VariableDeclaration","scope":7513,"src":"22665:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":7492,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:33","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:33"},"scope":8100,"src":"22610:224:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7538,"nodeType":"Block","src":"23231:150:33","statements":[{"expression":{"id":7526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7521,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7519,"src":"23241:10:33","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7524,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7516,"src":"23261:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":7522,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:33","typeDescriptions":{}}},"id":7525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:33","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":7527,"nodeType":"ExpressionStatement","src":"23241:26:33"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7528,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7519,"src":"23281:10:33","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7529,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7516,"src":"23295:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7537,"nodeType":"IfStatement","src":"23277:98:33","trueBody":{"id":7536,"nodeType":"Block","src":"23302:73:33","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":7532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:33","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":7533,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7516,"src":"23358:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7531,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6357,"src":"23323:29:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7535,"nodeType":"RevertStatement","src":"23316:48:33"}]}}]},"documentation":{"id":7514,"nodeType":"StructuredDocumentation","src":"22840:312:33","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":7539,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:33","nodeType":"FunctionDefinition","parameters":{"id":7517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7516,"mutability":"mutable","name":"value","nameLocation":"23182:5:33","nodeType":"VariableDeclaration","scope":7539,"src":"23175:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7515,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:33"},"returnParameters":{"id":7520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7519,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:33","nodeType":"VariableDeclaration","scope":7539,"src":"23212:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":7518,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:33","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:33"},"scope":8100,"src":"23157:224:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7564,"nodeType":"Block","src":"23778:150:33","statements":[{"expression":{"id":7552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7547,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7545,"src":"23788:10:33","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7542,"src":"23808:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":7548,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:33","typeDescriptions":{}}},"id":7551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:33","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":7553,"nodeType":"ExpressionStatement","src":"23788:26:33"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7554,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7545,"src":"23828:10:33","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7555,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7542,"src":"23842:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7563,"nodeType":"IfStatement","src":"23824:98:33","trueBody":{"id":7562,"nodeType":"Block","src":"23849:73:33","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":7558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:33","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":7559,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7542,"src":"23905:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7557,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6357,"src":"23870:29:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7561,"nodeType":"RevertStatement","src":"23863:48:33"}]}}]},"documentation":{"id":7540,"nodeType":"StructuredDocumentation","src":"23387:312:33","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":7565,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:33","nodeType":"FunctionDefinition","parameters":{"id":7543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7542,"mutability":"mutable","name":"value","nameLocation":"23729:5:33","nodeType":"VariableDeclaration","scope":7565,"src":"23722:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7541,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:33"},"returnParameters":{"id":7546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7545,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:33","nodeType":"VariableDeclaration","scope":7565,"src":"23759:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":7544,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:33","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:33"},"scope":8100,"src":"23704:224:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7590,"nodeType":"Block","src":"24325:150:33","statements":[{"expression":{"id":7578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7573,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7571,"src":"24335:10:33","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7576,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7568,"src":"24355:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7575,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":7574,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:33","typeDescriptions":{}}},"id":7577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:33","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":7579,"nodeType":"ExpressionStatement","src":"24335:26:33"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7580,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7571,"src":"24375:10:33","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7581,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7568,"src":"24389:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7589,"nodeType":"IfStatement","src":"24371:98:33","trueBody":{"id":7588,"nodeType":"Block","src":"24396:73:33","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":7584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:33","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":7585,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7568,"src":"24452:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7583,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6357,"src":"24417:29:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7587,"nodeType":"RevertStatement","src":"24410:48:33"}]}}]},"documentation":{"id":7566,"nodeType":"StructuredDocumentation","src":"23934:312:33","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":7591,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:33","nodeType":"FunctionDefinition","parameters":{"id":7569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7568,"mutability":"mutable","name":"value","nameLocation":"24276:5:33","nodeType":"VariableDeclaration","scope":7591,"src":"24269:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7567,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:33"},"returnParameters":{"id":7572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7571,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:33","nodeType":"VariableDeclaration","scope":7591,"src":"24306:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":7570,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:33","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:33"},"scope":8100,"src":"24251:224:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7616,"nodeType":"Block","src":"24872:150:33","statements":[{"expression":{"id":7604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7599,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7597,"src":"24882:10:33","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7594,"src":"24902:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":7600,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:33","typeDescriptions":{}}},"id":7603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:33","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":7605,"nodeType":"ExpressionStatement","src":"24882:26:33"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7606,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7597,"src":"24922:10:33","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7607,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7594,"src":"24936:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7615,"nodeType":"IfStatement","src":"24918:98:33","trueBody":{"id":7614,"nodeType":"Block","src":"24943:73:33","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":7610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:33","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":7611,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7594,"src":"24999:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7609,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6357,"src":"24964:29:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7613,"nodeType":"RevertStatement","src":"24957:48:33"}]}}]},"documentation":{"id":7592,"nodeType":"StructuredDocumentation","src":"24481:312:33","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":7617,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:33","nodeType":"FunctionDefinition","parameters":{"id":7595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7594,"mutability":"mutable","name":"value","nameLocation":"24823:5:33","nodeType":"VariableDeclaration","scope":7617,"src":"24816:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7593,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:33"},"returnParameters":{"id":7598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7597,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:33","nodeType":"VariableDeclaration","scope":7617,"src":"24853:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":7596,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:33","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:33"},"scope":8100,"src":"24798:224:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7642,"nodeType":"Block","src":"25419:150:33","statements":[{"expression":{"id":7630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7625,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7623,"src":"25429:10:33","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7628,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7620,"src":"25449:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7627,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":7626,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:33","typeDescriptions":{}}},"id":7629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:33","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":7631,"nodeType":"ExpressionStatement","src":"25429:26:33"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7632,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7623,"src":"25469:10:33","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7633,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7620,"src":"25483:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7641,"nodeType":"IfStatement","src":"25465:98:33","trueBody":{"id":7640,"nodeType":"Block","src":"25490:73:33","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":7636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:33","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":7637,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7620,"src":"25546:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7635,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6357,"src":"25511:29:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7639,"nodeType":"RevertStatement","src":"25504:48:33"}]}}]},"documentation":{"id":7618,"nodeType":"StructuredDocumentation","src":"25028:312:33","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":7643,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:33","nodeType":"FunctionDefinition","parameters":{"id":7621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7620,"mutability":"mutable","name":"value","nameLocation":"25370:5:33","nodeType":"VariableDeclaration","scope":7643,"src":"25363:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7619,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:33"},"returnParameters":{"id":7624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7623,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:33","nodeType":"VariableDeclaration","scope":7643,"src":"25400:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":7622,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:33","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:33"},"scope":8100,"src":"25345:224:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7668,"nodeType":"Block","src":"25966:150:33","statements":[{"expression":{"id":7656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7651,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7649,"src":"25976:10:33","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7654,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7646,"src":"25996:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":7652,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:33","typeDescriptions":{}}},"id":7655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:33","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":7657,"nodeType":"ExpressionStatement","src":"25976:26:33"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7658,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7649,"src":"26016:10:33","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7659,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7646,"src":"26030:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7667,"nodeType":"IfStatement","src":"26012:98:33","trueBody":{"id":7666,"nodeType":"Block","src":"26037:73:33","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":7662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:33","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":7663,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7646,"src":"26093:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7661,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6357,"src":"26058:29:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7665,"nodeType":"RevertStatement","src":"26051:48:33"}]}}]},"documentation":{"id":7644,"nodeType":"StructuredDocumentation","src":"25575:312:33","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":7669,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:33","nodeType":"FunctionDefinition","parameters":{"id":7647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7646,"mutability":"mutable","name":"value","nameLocation":"25917:5:33","nodeType":"VariableDeclaration","scope":7669,"src":"25910:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7645,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:33"},"returnParameters":{"id":7650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7649,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:33","nodeType":"VariableDeclaration","scope":7669,"src":"25947:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":7648,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:33","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:33"},"scope":8100,"src":"25892:224:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7694,"nodeType":"Block","src":"26513:150:33","statements":[{"expression":{"id":7682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7677,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7675,"src":"26523:10:33","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7680,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7672,"src":"26543:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7679,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":7678,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:33","typeDescriptions":{}}},"id":7681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:33","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":7683,"nodeType":"ExpressionStatement","src":"26523:26:33"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7684,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7675,"src":"26563:10:33","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7685,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7672,"src":"26577:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7693,"nodeType":"IfStatement","src":"26559:98:33","trueBody":{"id":7692,"nodeType":"Block","src":"26584:73:33","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":7688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:33","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":7689,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7672,"src":"26640:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7687,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6357,"src":"26605:29:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7691,"nodeType":"RevertStatement","src":"26598:48:33"}]}}]},"documentation":{"id":7670,"nodeType":"StructuredDocumentation","src":"26122:312:33","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":7695,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:33","nodeType":"FunctionDefinition","parameters":{"id":7673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7672,"mutability":"mutable","name":"value","nameLocation":"26464:5:33","nodeType":"VariableDeclaration","scope":7695,"src":"26457:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7671,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:33"},"returnParameters":{"id":7676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7675,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:33","nodeType":"VariableDeclaration","scope":7695,"src":"26494:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":7674,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:33","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:33"},"scope":8100,"src":"26439:224:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7720,"nodeType":"Block","src":"27060:150:33","statements":[{"expression":{"id":7708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7703,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7701,"src":"27070:10:33","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7706,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7698,"src":"27090:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7705,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":7704,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:33","typeDescriptions":{}}},"id":7707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:33","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":7709,"nodeType":"ExpressionStatement","src":"27070:26:33"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7710,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7701,"src":"27110:10:33","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7711,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7698,"src":"27124:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7719,"nodeType":"IfStatement","src":"27106:98:33","trueBody":{"id":7718,"nodeType":"Block","src":"27131:73:33","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":7714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:33","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":7715,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7698,"src":"27187:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7713,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6357,"src":"27152:29:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7717,"nodeType":"RevertStatement","src":"27145:48:33"}]}}]},"documentation":{"id":7696,"nodeType":"StructuredDocumentation","src":"26669:312:33","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":7721,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:33","nodeType":"FunctionDefinition","parameters":{"id":7699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7698,"mutability":"mutable","name":"value","nameLocation":"27011:5:33","nodeType":"VariableDeclaration","scope":7721,"src":"27004:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7697,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:33"},"returnParameters":{"id":7702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7701,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:33","nodeType":"VariableDeclaration","scope":7721,"src":"27041:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":7700,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:33","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:33"},"scope":8100,"src":"26986:224:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7746,"nodeType":"Block","src":"27607:150:33","statements":[{"expression":{"id":7734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7729,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7727,"src":"27617:10:33","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7732,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7724,"src":"27637:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":7730,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:33","typeDescriptions":{}}},"id":7733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:33","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":7735,"nodeType":"ExpressionStatement","src":"27617:26:33"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7736,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7727,"src":"27657:10:33","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7737,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7724,"src":"27671:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7745,"nodeType":"IfStatement","src":"27653:98:33","trueBody":{"id":7744,"nodeType":"Block","src":"27678:73:33","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":7740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:33","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":7741,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7724,"src":"27734:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7739,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6357,"src":"27699:29:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7743,"nodeType":"RevertStatement","src":"27692:48:33"}]}}]},"documentation":{"id":7722,"nodeType":"StructuredDocumentation","src":"27216:312:33","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":7747,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:33","nodeType":"FunctionDefinition","parameters":{"id":7725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7724,"mutability":"mutable","name":"value","nameLocation":"27558:5:33","nodeType":"VariableDeclaration","scope":7747,"src":"27551:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7723,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:33"},"returnParameters":{"id":7728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7727,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:33","nodeType":"VariableDeclaration","scope":7747,"src":"27588:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":7726,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:33","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:33"},"scope":8100,"src":"27533:224:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7772,"nodeType":"Block","src":"28147:148:33","statements":[{"expression":{"id":7760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7755,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7753,"src":"28157:10:33","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7758,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7750,"src":"28176:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:33","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":7756,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:33","typeDescriptions":{}}},"id":7759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:33","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":7761,"nodeType":"ExpressionStatement","src":"28157:25:33"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7762,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7753,"src":"28196:10:33","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7763,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7750,"src":"28210:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7771,"nodeType":"IfStatement","src":"28192:97:33","trueBody":{"id":7770,"nodeType":"Block","src":"28217:72:33","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":7766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:33","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":7767,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7750,"src":"28272:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7765,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6357,"src":"28238:29:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7769,"nodeType":"RevertStatement","src":"28231:47:33"}]}}]},"documentation":{"id":7748,"nodeType":"StructuredDocumentation","src":"27763:307:33","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":7773,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:33","nodeType":"FunctionDefinition","parameters":{"id":7751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7750,"mutability":"mutable","name":"value","nameLocation":"28099:5:33","nodeType":"VariableDeclaration","scope":7773,"src":"28092:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7749,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:33"},"returnParameters":{"id":7754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7753,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:33","nodeType":"VariableDeclaration","scope":7773,"src":"28129:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":7752,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:33","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:33"},"scope":8100,"src":"28075:220:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7798,"nodeType":"Block","src":"28685:148:33","statements":[{"expression":{"id":7786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7781,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7779,"src":"28695:10:33","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7784,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7776,"src":"28714:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:33","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":7782,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:33","typeDescriptions":{}}},"id":7785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:33","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":7787,"nodeType":"ExpressionStatement","src":"28695:25:33"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7788,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7779,"src":"28734:10:33","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7789,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7776,"src":"28748:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7797,"nodeType":"IfStatement","src":"28730:97:33","trueBody":{"id":7796,"nodeType":"Block","src":"28755:72:33","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":7792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:33","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":7793,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7776,"src":"28810:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7791,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6357,"src":"28776:29:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7795,"nodeType":"RevertStatement","src":"28769:47:33"}]}}]},"documentation":{"id":7774,"nodeType":"StructuredDocumentation","src":"28301:307:33","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":7799,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:33","nodeType":"FunctionDefinition","parameters":{"id":7777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7776,"mutability":"mutable","name":"value","nameLocation":"28637:5:33","nodeType":"VariableDeclaration","scope":7799,"src":"28630:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7775,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:33"},"returnParameters":{"id":7780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7779,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:33","nodeType":"VariableDeclaration","scope":7799,"src":"28667:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":7778,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:33","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:33"},"scope":8100,"src":"28613:220:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7824,"nodeType":"Block","src":"29223:148:33","statements":[{"expression":{"id":7812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7807,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7805,"src":"29233:10:33","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7810,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7802,"src":"29252:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:33","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":7808,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:33","typeDescriptions":{}}},"id":7811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:33","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":7813,"nodeType":"ExpressionStatement","src":"29233:25:33"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7814,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7805,"src":"29272:10:33","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7815,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7802,"src":"29286:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7823,"nodeType":"IfStatement","src":"29268:97:33","trueBody":{"id":7822,"nodeType":"Block","src":"29293:72:33","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":7818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:33","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":7819,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7802,"src":"29348:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7817,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6357,"src":"29314:29:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7821,"nodeType":"RevertStatement","src":"29307:47:33"}]}}]},"documentation":{"id":7800,"nodeType":"StructuredDocumentation","src":"28839:307:33","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":7825,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:33","nodeType":"FunctionDefinition","parameters":{"id":7803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7802,"mutability":"mutable","name":"value","nameLocation":"29175:5:33","nodeType":"VariableDeclaration","scope":7825,"src":"29168:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7801,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:33"},"returnParameters":{"id":7806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7805,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:33","nodeType":"VariableDeclaration","scope":7825,"src":"29205:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":7804,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:33","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:33"},"scope":8100,"src":"29151:220:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7850,"nodeType":"Block","src":"29761:148:33","statements":[{"expression":{"id":7838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7833,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7831,"src":"29771:10:33","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7836,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7828,"src":"29790:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7835,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:33","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":7834,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:33","typeDescriptions":{}}},"id":7837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:33","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":7839,"nodeType":"ExpressionStatement","src":"29771:25:33"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7840,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7831,"src":"29810:10:33","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7841,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7828,"src":"29824:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7849,"nodeType":"IfStatement","src":"29806:97:33","trueBody":{"id":7848,"nodeType":"Block","src":"29831:72:33","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":7844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:33","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":7845,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7828,"src":"29886:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7843,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6357,"src":"29852:29:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7847,"nodeType":"RevertStatement","src":"29845:47:33"}]}}]},"documentation":{"id":7826,"nodeType":"StructuredDocumentation","src":"29377:307:33","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":7851,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:33","nodeType":"FunctionDefinition","parameters":{"id":7829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7828,"mutability":"mutable","name":"value","nameLocation":"29713:5:33","nodeType":"VariableDeclaration","scope":7851,"src":"29706:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7827,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:33"},"returnParameters":{"id":7832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7831,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:33","nodeType":"VariableDeclaration","scope":7851,"src":"29743:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":7830,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:33","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:33"},"scope":8100,"src":"29689:220:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7876,"nodeType":"Block","src":"30299:148:33","statements":[{"expression":{"id":7864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7859,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7857,"src":"30309:10:33","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7862,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7854,"src":"30328:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:33","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":7860,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:33","typeDescriptions":{}}},"id":7863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:33","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":7865,"nodeType":"ExpressionStatement","src":"30309:25:33"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7866,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7857,"src":"30348:10:33","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7867,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7854,"src":"30362:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7875,"nodeType":"IfStatement","src":"30344:97:33","trueBody":{"id":7874,"nodeType":"Block","src":"30369:72:33","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":7870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:33","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":7871,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7854,"src":"30424:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7869,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6357,"src":"30390:29:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7873,"nodeType":"RevertStatement","src":"30383:47:33"}]}}]},"documentation":{"id":7852,"nodeType":"StructuredDocumentation","src":"29915:307:33","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":7877,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:33","nodeType":"FunctionDefinition","parameters":{"id":7855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7854,"mutability":"mutable","name":"value","nameLocation":"30251:5:33","nodeType":"VariableDeclaration","scope":7877,"src":"30244:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7853,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:33"},"returnParameters":{"id":7858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7857,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:33","nodeType":"VariableDeclaration","scope":7877,"src":"30281:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":7856,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:33","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:33"},"scope":8100,"src":"30227:220:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7902,"nodeType":"Block","src":"30837:148:33","statements":[{"expression":{"id":7890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7885,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7883,"src":"30847:10:33","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7888,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7880,"src":"30866:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:33","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":7886,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:33","typeDescriptions":{}}},"id":7889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:33","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":7891,"nodeType":"ExpressionStatement","src":"30847:25:33"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7892,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7883,"src":"30886:10:33","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7893,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7880,"src":"30900:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7901,"nodeType":"IfStatement","src":"30882:97:33","trueBody":{"id":7900,"nodeType":"Block","src":"30907:72:33","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":7896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:33","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":7897,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7880,"src":"30962:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7895,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6357,"src":"30928:29:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7899,"nodeType":"RevertStatement","src":"30921:47:33"}]}}]},"documentation":{"id":7878,"nodeType":"StructuredDocumentation","src":"30453:307:33","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":7903,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:33","nodeType":"FunctionDefinition","parameters":{"id":7881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7880,"mutability":"mutable","name":"value","nameLocation":"30789:5:33","nodeType":"VariableDeclaration","scope":7903,"src":"30782:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7879,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:33"},"returnParameters":{"id":7884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7883,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:33","nodeType":"VariableDeclaration","scope":7903,"src":"30819:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":7882,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:33","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:33"},"scope":8100,"src":"30765:220:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7928,"nodeType":"Block","src":"31375:148:33","statements":[{"expression":{"id":7916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7911,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7909,"src":"31385:10:33","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7914,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7906,"src":"31404:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:33","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":7912,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:33","typeDescriptions":{}}},"id":7915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:33","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":7917,"nodeType":"ExpressionStatement","src":"31385:25:33"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7918,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7909,"src":"31424:10:33","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7919,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7906,"src":"31438:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7927,"nodeType":"IfStatement","src":"31420:97:33","trueBody":{"id":7926,"nodeType":"Block","src":"31445:72:33","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":7922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:33","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":7923,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7906,"src":"31500:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7921,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6357,"src":"31466:29:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7925,"nodeType":"RevertStatement","src":"31459:47:33"}]}}]},"documentation":{"id":7904,"nodeType":"StructuredDocumentation","src":"30991:307:33","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":7929,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:33","nodeType":"FunctionDefinition","parameters":{"id":7907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7906,"mutability":"mutable","name":"value","nameLocation":"31327:5:33","nodeType":"VariableDeclaration","scope":7929,"src":"31320:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7905,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:33"},"returnParameters":{"id":7910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7909,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:33","nodeType":"VariableDeclaration","scope":7929,"src":"31357:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":7908,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:33","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:33"},"scope":8100,"src":"31303:220:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7954,"nodeType":"Block","src":"31913:148:33","statements":[{"expression":{"id":7942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7937,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7935,"src":"31923:10:33","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7940,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7932,"src":"31942:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7939,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:33","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":7938,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:33","typeDescriptions":{}}},"id":7941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:33","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":7943,"nodeType":"ExpressionStatement","src":"31923:25:33"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7944,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7935,"src":"31962:10:33","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7945,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7932,"src":"31976:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7953,"nodeType":"IfStatement","src":"31958:97:33","trueBody":{"id":7952,"nodeType":"Block","src":"31983:72:33","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":7948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:33","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":7949,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7932,"src":"32038:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7947,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6357,"src":"32004:29:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7951,"nodeType":"RevertStatement","src":"31997:47:33"}]}}]},"documentation":{"id":7930,"nodeType":"StructuredDocumentation","src":"31529:307:33","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":7955,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:33","nodeType":"FunctionDefinition","parameters":{"id":7933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7932,"mutability":"mutable","name":"value","nameLocation":"31865:5:33","nodeType":"VariableDeclaration","scope":7955,"src":"31858:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7931,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:33"},"returnParameters":{"id":7936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7935,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:33","nodeType":"VariableDeclaration","scope":7955,"src":"31895:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":7934,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:33","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:33"},"scope":8100,"src":"31841:220:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7980,"nodeType":"Block","src":"32451:148:33","statements":[{"expression":{"id":7968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7963,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7961,"src":"32461:10:33","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7966,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7958,"src":"32480:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:33","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":7964,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:33","typeDescriptions":{}}},"id":7967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:33","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":7969,"nodeType":"ExpressionStatement","src":"32461:25:33"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7970,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7961,"src":"32500:10:33","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7971,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7958,"src":"32514:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7979,"nodeType":"IfStatement","src":"32496:97:33","trueBody":{"id":7978,"nodeType":"Block","src":"32521:72:33","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":7974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:33","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":7975,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7958,"src":"32576:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7973,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6357,"src":"32542:29:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7977,"nodeType":"RevertStatement","src":"32535:47:33"}]}}]},"documentation":{"id":7956,"nodeType":"StructuredDocumentation","src":"32067:307:33","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":7981,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:33","nodeType":"FunctionDefinition","parameters":{"id":7959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7958,"mutability":"mutable","name":"value","nameLocation":"32403:5:33","nodeType":"VariableDeclaration","scope":7981,"src":"32396:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7957,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:33"},"returnParameters":{"id":7962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7961,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:33","nodeType":"VariableDeclaration","scope":7981,"src":"32433:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":7960,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:33","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:33"},"scope":8100,"src":"32379:220:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8006,"nodeType":"Block","src":"32989:148:33","statements":[{"expression":{"id":7994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7989,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7987,"src":"32999:10:33","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7992,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7984,"src":"33018:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7991,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:33","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":7990,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:33","typeDescriptions":{}}},"id":7993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:33","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":7995,"nodeType":"ExpressionStatement","src":"32999:25:33"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7996,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7987,"src":"33038:10:33","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7997,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7984,"src":"33052:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8005,"nodeType":"IfStatement","src":"33034:97:33","trueBody":{"id":8004,"nodeType":"Block","src":"33059:72:33","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":8000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:33","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":8001,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7984,"src":"33114:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7999,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6357,"src":"33080:29:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8003,"nodeType":"RevertStatement","src":"33073:47:33"}]}}]},"documentation":{"id":7982,"nodeType":"StructuredDocumentation","src":"32605:307:33","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":8007,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:33","nodeType":"FunctionDefinition","parameters":{"id":7985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7984,"mutability":"mutable","name":"value","nameLocation":"32941:5:33","nodeType":"VariableDeclaration","scope":8007,"src":"32934:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7983,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:33"},"returnParameters":{"id":7988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7987,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:33","nodeType":"VariableDeclaration","scope":8007,"src":"32971:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":7986,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:33","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:33"},"scope":8100,"src":"32917:220:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8032,"nodeType":"Block","src":"33527:148:33","statements":[{"expression":{"id":8020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8015,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8013,"src":"33537:10:33","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8018,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8010,"src":"33556:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8017,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:33","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":8016,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:33","typeDescriptions":{}}},"id":8019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:33","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":8021,"nodeType":"ExpressionStatement","src":"33537:25:33"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8022,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8013,"src":"33576:10:33","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8023,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8010,"src":"33590:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8031,"nodeType":"IfStatement","src":"33572:97:33","trueBody":{"id":8030,"nodeType":"Block","src":"33597:72:33","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":8026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:33","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":8027,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8010,"src":"33652:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8025,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6357,"src":"33618:29:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8029,"nodeType":"RevertStatement","src":"33611:47:33"}]}}]},"documentation":{"id":8008,"nodeType":"StructuredDocumentation","src":"33143:307:33","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":8033,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:33","nodeType":"FunctionDefinition","parameters":{"id":8011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8010,"mutability":"mutable","name":"value","nameLocation":"33479:5:33","nodeType":"VariableDeclaration","scope":8033,"src":"33472:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8009,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:33"},"returnParameters":{"id":8014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8013,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:33","nodeType":"VariableDeclaration","scope":8033,"src":"33509:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":8012,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:33","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:33"},"scope":8100,"src":"33455:220:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8058,"nodeType":"Block","src":"34058:146:33","statements":[{"expression":{"id":8046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8041,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8039,"src":"34068:10:33","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8044,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8036,"src":"34086:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8043,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:33","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":8042,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:33","typeDescriptions":{}}},"id":8045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:33","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":8047,"nodeType":"ExpressionStatement","src":"34068:24:33"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8048,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8039,"src":"34106:10:33","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8049,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8036,"src":"34120:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8057,"nodeType":"IfStatement","src":"34102:96:33","trueBody":{"id":8056,"nodeType":"Block","src":"34127:71:33","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":8052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:33","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":8053,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8036,"src":"34181:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8051,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6357,"src":"34148:29:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8055,"nodeType":"RevertStatement","src":"34141:46:33"}]}}]},"documentation":{"id":8034,"nodeType":"StructuredDocumentation","src":"33681:302:33","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":8059,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:33","nodeType":"FunctionDefinition","parameters":{"id":8037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8036,"mutability":"mutable","name":"value","nameLocation":"34011:5:33","nodeType":"VariableDeclaration","scope":8059,"src":"34004:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8035,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:33"},"returnParameters":{"id":8040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8039,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:33","nodeType":"VariableDeclaration","scope":8059,"src":"34041:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":8038,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:33","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:33"},"scope":8100,"src":"33988:216:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8088,"nodeType":"Block","src":"34444:250:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8067,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8062,"src":"34557:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":8072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8071,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:33","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":8070,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:33","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":8074,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:33","memberName":"max","nodeType":"MemberAccess","src":"34573:16:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8069,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8068,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:33","typeDescriptions":{}}},"id":8075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8082,"nodeType":"IfStatement","src":"34553:105:33","trueBody":{"id":8081,"nodeType":"Block","src":"34592:66:33","statements":[{"errorCall":{"arguments":[{"id":8078,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8062,"src":"34641:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8077,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6362,"src":"34613:27:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":8079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8080,"nodeType":"RevertStatement","src":"34606:41:33"}]}},{"expression":{"arguments":[{"id":8085,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8062,"src":"34681:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8084,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8083,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:33","typeDescriptions":{}}},"id":8086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8066,"id":8087,"nodeType":"Return","src":"34667:20:33"}]},"documentation":{"id":8060,"nodeType":"StructuredDocumentation","src":"34210:165:33","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":8089,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:33","nodeType":"FunctionDefinition","parameters":{"id":8063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8062,"mutability":"mutable","name":"value","nameLocation":"34406:5:33","nodeType":"VariableDeclaration","scope":8089,"src":"34398:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8061,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:33"},"returnParameters":{"id":8066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8065,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8089,"src":"34436:6:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8064,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:33"},"scope":8100,"src":"34380:314:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8098,"nodeType":"Block","src":"34853:87:33","statements":[{"AST":{"nativeSrc":"34888:46:33","nodeType":"YulBlock","src":"34888:46:33","statements":[{"nativeSrc":"34902:22:33","nodeType":"YulAssignment","src":"34902:22:33","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"34921:1:33","nodeType":"YulIdentifier","src":"34921:1:33"}],"functionName":{"name":"iszero","nativeSrc":"34914:6:33","nodeType":"YulIdentifier","src":"34914:6:33"},"nativeSrc":"34914:9:33","nodeType":"YulFunctionCall","src":"34914:9:33"}],"functionName":{"name":"iszero","nativeSrc":"34907:6:33","nodeType":"YulIdentifier","src":"34907:6:33"},"nativeSrc":"34907:17:33","nodeType":"YulFunctionCall","src":"34907:17:33"},"variableNames":[{"name":"u","nativeSrc":"34902:1:33","nodeType":"YulIdentifier","src":"34902:1:33"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":8092,"isOffset":false,"isSlot":false,"src":"34921:1:33","valueSize":1},{"declaration":8095,"isOffset":false,"isSlot":false,"src":"34902:1:33","valueSize":1}],"flags":["memory-safe"],"id":8097,"nodeType":"InlineAssembly","src":"34863:71:33"}]},"documentation":{"id":8090,"nodeType":"StructuredDocumentation","src":"34700:90:33","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":8099,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:33","nodeType":"FunctionDefinition","parameters":{"id":8093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8092,"mutability":"mutable","name":"b","nameLocation":"34816:1:33","nodeType":"VariableDeclaration","scope":8099,"src":"34811:6:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8091,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:33"},"returnParameters":{"id":8096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8095,"mutability":"mutable","name":"u","nameLocation":"34850:1:33","nodeType":"VariableDeclaration","scope":8099,"src":"34842:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8094,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:33"},"scope":8100,"src":"34795:145:33","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":8101,"src":"769:34173:33","usedErrors":[6345,6350,6357,6362],"usedEvents":[]}],"src":"192:34751:33"},"id":33},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[8100],"SignedMath":[8244]},"id":8245,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8102,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:34"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":8104,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8245,"sourceUnit":8101,"src":"135:40:34","symbolAliases":[{"foreign":{"id":8103,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8100,"src":"143:8:34","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":8105,"nodeType":"StructuredDocumentation","src":"177:80:34","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":8244,"linearizedBaseContracts":[8244],"name":"SignedMath","nameLocation":"266:10:34","nodeType":"ContractDefinition","nodes":[{"body":{"id":8134,"nodeType":"Block","src":"746:215:34","statements":[{"id":8133,"nodeType":"UncheckedBlock","src":"756:199:34","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8117,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8112,"src":"894:1:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8118,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8110,"src":"900:1:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":8119,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8112,"src":"904:1:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8121,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":8126,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8108,"src":"932:9:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":8124,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8100,"src":"916:8:34","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8100_$","typeString":"type(library SafeCast)"}},"id":8125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:34","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8099,"src":"916:15:34","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":8127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8123,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8122,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:34","typeDescriptions":{}}},"id":8128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8130,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8116,"id":8132,"nodeType":"Return","src":"887:57:34"}]}]},"documentation":{"id":8106,"nodeType":"StructuredDocumentation","src":"283:374:34","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":8135,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:34","nodeType":"FunctionDefinition","parameters":{"id":8113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8108,"mutability":"mutable","name":"condition","nameLocation":"684:9:34","nodeType":"VariableDeclaration","scope":8135,"src":"679:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8107,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8110,"mutability":"mutable","name":"a","nameLocation":"702:1:34","nodeType":"VariableDeclaration","scope":8135,"src":"695:8:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8109,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":8112,"mutability":"mutable","name":"b","nameLocation":"712:1:34","nodeType":"VariableDeclaration","scope":8135,"src":"705:8:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8111,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:34"},"returnParameters":{"id":8116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8115,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8135,"src":"738:6:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8114,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:34"},"scope":8244,"src":"662:299:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8153,"nodeType":"Block","src":"1102:44:34","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8146,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8138,"src":"1127:1:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8147,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8140,"src":"1131:1:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":8149,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8138,"src":"1134:1:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":8150,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8140,"src":"1137:1:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8145,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8135,"src":"1119:7:34","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":8151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8144,"id":8152,"nodeType":"Return","src":"1112:27:34"}]},"documentation":{"id":8136,"nodeType":"StructuredDocumentation","src":"967:66:34","text":" @dev Returns the largest of two signed numbers."},"id":8154,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:34","nodeType":"FunctionDefinition","parameters":{"id":8141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8138,"mutability":"mutable","name":"a","nameLocation":"1058:1:34","nodeType":"VariableDeclaration","scope":8154,"src":"1051:8:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8137,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":8140,"mutability":"mutable","name":"b","nameLocation":"1068:1:34","nodeType":"VariableDeclaration","scope":8154,"src":"1061:8:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8139,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:34"},"returnParameters":{"id":8144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8143,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8154,"src":"1094:6:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8142,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:34"},"scope":8244,"src":"1038:108:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8172,"nodeType":"Block","src":"1288:44:34","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8165,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8157,"src":"1313:1:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8166,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8159,"src":"1317:1:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":8168,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8157,"src":"1320:1:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":8169,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8159,"src":"1323:1:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8164,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8135,"src":"1305:7:34","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":8170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8163,"id":8171,"nodeType":"Return","src":"1298:27:34"}]},"documentation":{"id":8155,"nodeType":"StructuredDocumentation","src":"1152:67:34","text":" @dev Returns the smallest of two signed numbers."},"id":8173,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:34","nodeType":"FunctionDefinition","parameters":{"id":8160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8157,"mutability":"mutable","name":"a","nameLocation":"1244:1:34","nodeType":"VariableDeclaration","scope":8173,"src":"1237:8:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8156,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":8159,"mutability":"mutable","name":"b","nameLocation":"1254:1:34","nodeType":"VariableDeclaration","scope":8173,"src":"1247:8:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8158,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:34"},"returnParameters":{"id":8163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8162,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8173,"src":"1280:6:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8161,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:34"},"scope":8244,"src":"1224:108:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8216,"nodeType":"Block","src":"1537:162:34","statements":[{"assignments":[8184],"declarations":[{"constant":false,"id":8184,"mutability":"mutable","name":"x","nameLocation":"1606:1:34","nodeType":"VariableDeclaration","scope":8216,"src":"1599:8:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8183,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":8197,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8185,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8176,"src":"1611:1:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":8186,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8178,"src":"1615:1:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8188,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8189,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8176,"src":"1622:1:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":8190,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8178,"src":"1626:1:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8192,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":8193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:34","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8195,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:34"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8198,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8184,"src":"1651:1:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8203,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8184,"src":"1671:1:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8202,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8201,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:34","typeDescriptions":{}}},"id":8204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":8205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:34","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8199,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:34","typeDescriptions":{}}},"id":8207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8208,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8176,"src":"1685:1:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":8209,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8178,"src":"1689:1:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8211,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8213,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8182,"id":8215,"nodeType":"Return","src":"1644:48:34"}]},"documentation":{"id":8174,"nodeType":"StructuredDocumentation","src":"1338:126:34","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":8217,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:34","nodeType":"FunctionDefinition","parameters":{"id":8179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8176,"mutability":"mutable","name":"a","nameLocation":"1493:1:34","nodeType":"VariableDeclaration","scope":8217,"src":"1486:8:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8175,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":8178,"mutability":"mutable","name":"b","nameLocation":"1503:1:34","nodeType":"VariableDeclaration","scope":8217,"src":"1496:8:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8177,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:34"},"returnParameters":{"id":8182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8181,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8217,"src":"1529:6:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8180,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:34"},"scope":8244,"src":"1469:230:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8242,"nodeType":"Block","src":"1843:767:34","statements":[{"id":8241,"nodeType":"UncheckedBlock","src":"1853:751:34","statements":[{"assignments":[8226],"declarations":[{"constant":false,"id":8226,"mutability":"mutable","name":"mask","nameLocation":"2424:4:34","nodeType":"VariableDeclaration","scope":8241,"src":"2417:11:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8225,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":8230,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8227,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8220,"src":"2431:1:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":8228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:34","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:34"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8233,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8220,"src":"2576:1:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":8234,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8226,"src":"2580:4:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8236,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":8237,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8226,"src":"2588:4:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8232,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8231,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:34","typeDescriptions":{}}},"id":8239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8224,"id":8240,"nodeType":"Return","src":"2560:33:34"}]}]},"documentation":{"id":8218,"nodeType":"StructuredDocumentation","src":"1705:78:34","text":" @dev Returns the absolute unsigned value of a signed value."},"id":8243,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:34","nodeType":"FunctionDefinition","parameters":{"id":8221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8220,"mutability":"mutable","name":"n","nameLocation":"1808:1:34","nodeType":"VariableDeclaration","scope":8243,"src":"1801:8:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8219,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:34"},"returnParameters":{"id":8224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8223,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8243,"src":"1834:7:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8222,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:34"},"scope":8244,"src":"1788:822:34","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":8245,"src":"258:2354:34","usedErrors":[],"usedEvents":[]}],"src":"109:2504:34"},"id":34},"Contracts/EduMetaCoinErc20.sol":{"ast":{"absolutePath":"Contracts/EduMetaCoinErc20.sol","exportedSymbols":{"ERC1363":[1323],"ERC20":[1007],"ERC20Burnable":[1369],"ERC20FlashMint":[1613],"ERC20Pausable":[1647],"ERC20Permit":[1801],"EduMeta":[8345],"Ownable":[147]},"id":8346,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8246,"literals":["solidity","^","0.8",".27"],"nodeType":"PragmaDirective","src":"81:24:35"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC1363.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC1363.sol","id":8248,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8346,"sourceUnit":1324,"src":"107:83:35","symbolAliases":[{"foreign":{"id":8247,"name":"ERC1363","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"115:7:35","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":8250,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8346,"sourceUnit":1008,"src":"191:68:35","symbolAliases":[{"foreign":{"id":8249,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"199:5:35","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","id":8252,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8346,"sourceUnit":1370,"src":"260:95:35","symbolAliases":[{"foreign":{"id":8251,"name":"ERC20Burnable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"268:13:35","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20FlashMint.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20FlashMint.sol","id":8254,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8346,"sourceUnit":1614,"src":"356:97:35","symbolAliases":[{"foreign":{"id":8253,"name":"ERC20FlashMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"364:14:35","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol","id":8256,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8346,"sourceUnit":1648,"src":"454:95:35","symbolAliases":[{"foreign":{"id":8255,"name":"ERC20Pausable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"462:13:35","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","id":8258,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8346,"sourceUnit":1802,"src":"550:91:35","symbolAliases":[{"foreign":{"id":8257,"name":"ERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"558:11:35","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":8260,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8346,"sourceUnit":148,"src":"642:67:35","symbolAliases":[{"foreign":{"id":8259,"name":"Ownable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":147,"src":"650:7:35","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":8261,"name":"ERC20","nameLocations":["735:5:35"],"nodeType":"IdentifierPath","referencedDeclaration":1007,"src":"735:5:35"},"id":8262,"nodeType":"InheritanceSpecifier","src":"735:5:35"},{"baseName":{"id":8263,"name":"ERC20Burnable","nameLocations":["746:13:35"],"nodeType":"IdentifierPath","referencedDeclaration":1369,"src":"746:13:35"},"id":8264,"nodeType":"InheritanceSpecifier","src":"746:13:35"},{"baseName":{"id":8265,"name":"ERC20Pausable","nameLocations":["765:13:35"],"nodeType":"IdentifierPath","referencedDeclaration":1647,"src":"765:13:35"},"id":8266,"nodeType":"InheritanceSpecifier","src":"765:13:35"},{"baseName":{"id":8267,"name":"Ownable","nameLocations":["784:7:35"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"784:7:35"},"id":8268,"nodeType":"InheritanceSpecifier","src":"784:7:35"},{"baseName":{"id":8269,"name":"ERC1363","nameLocations":["797:7:35"],"nodeType":"IdentifierPath","referencedDeclaration":1323,"src":"797:7:35"},"id":8270,"nodeType":"InheritanceSpecifier","src":"797:7:35"},{"baseName":{"id":8271,"name":"ERC20Permit","nameLocations":["810:11:35"],"nodeType":"IdentifierPath","referencedDeclaration":1801,"src":"810:11:35"},"id":8272,"nodeType":"InheritanceSpecifier","src":"810:11:35"},{"baseName":{"id":8273,"name":"ERC20FlashMint","nameLocations":["827:14:35"],"nodeType":"IdentifierPath","referencedDeclaration":1613,"src":"827:14:35"},"id":8274,"nodeType":"InheritanceSpecifier","src":"827:14:35"}],"canonicalName":"EduMeta","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":8345,"linearizedBaseContracts":[8345,1613,330,1801,2114,4592,355,1863,1323,229,4702,4714,147,1647,2274,1369,1007,397,1827,1085,2046],"name":"EduMeta","nameLocation":"720:7:35","nodeType":"ContractDefinition","nodes":[{"body":{"id":8289,"nodeType":"Block","src":"965:2:35","statements":[]},"id":8290,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"4564754d657461","id":8279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"902:9:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_87fe2282b820e19f12dc1346dc8475e1e53f3185e4dc4a0e3304d377f04e8fd8","typeString":"literal_string \"EduMeta\""},"value":"EduMeta"},{"hexValue":"454454","id":8280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"913:5:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_2112127c91009e096647d103a23f0cbb9a8b822c5e1085f154038b104a2cf570","typeString":"literal_string \"EDT\""},"value":"EDT"}],"id":8281,"kind":"baseConstructorSpecifier","modifierName":{"id":8278,"name":"ERC20","nameLocations":["896:5:35"],"nodeType":"IdentifierPath","referencedDeclaration":1007,"src":"896:5:35"},"nodeType":"ModifierInvocation","src":"896:23:35"},{"arguments":[{"id":8283,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8276,"src":"928:12:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":8284,"kind":"baseConstructorSpecifier","modifierName":{"id":8282,"name":"Ownable","nameLocations":["920:7:35"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"920:7:35"},"nodeType":"ModifierInvocation","src":"920:21:35"},{"arguments":[{"hexValue":"4564754d657461","id":8286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"954:9:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_87fe2282b820e19f12dc1346dc8475e1e53f3185e4dc4a0e3304d377f04e8fd8","typeString":"literal_string \"EduMeta\""},"value":"EduMeta"}],"id":8287,"kind":"baseConstructorSpecifier","modifierName":{"id":8285,"name":"ERC20Permit","nameLocations":["942:11:35"],"nodeType":"IdentifierPath","referencedDeclaration":1801,"src":"942:11:35"},"nodeType":"ModifierInvocation","src":"942:22:35"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8276,"mutability":"mutable","name":"initialOwner","nameLocation":"877:12:35","nodeType":"VariableDeclaration","scope":8290,"src":"869:20:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8275,"name":"address","nodeType":"ElementaryTypeName","src":"869:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"859:36:35"},"returnParameters":{"id":8288,"nodeType":"ParameterList","parameters":[],"src":"965:0:35"},"scope":8345,"src":"848:119:35","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8298,"nodeType":"Block","src":"1007:25:35","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":8295,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2257,"src":"1017:6:35","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":8296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1017:8:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8297,"nodeType":"ExpressionStatement","src":"1017:8:35"}]},"functionSelector":"8456cb59","id":8299,"implemented":true,"kind":"function","modifiers":[{"id":8293,"kind":"modifierInvocation","modifierName":{"id":8292,"name":"onlyOwner","nameLocations":["997:9:35"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"997:9:35"},"nodeType":"ModifierInvocation","src":"997:9:35"}],"name":"pause","nameLocation":"982:5:35","nodeType":"FunctionDefinition","parameters":{"id":8291,"nodeType":"ParameterList","parameters":[],"src":"987:2:35"},"returnParameters":{"id":8294,"nodeType":"ParameterList","parameters":[],"src":"1007:0:35"},"scope":8345,"src":"973:59:35","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8307,"nodeType":"Block","src":"1074:27:35","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":8304,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"1084:8:35","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":8305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1084:10:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8306,"nodeType":"ExpressionStatement","src":"1084:10:35"}]},"functionSelector":"3f4ba83a","id":8308,"implemented":true,"kind":"function","modifiers":[{"id":8302,"kind":"modifierInvocation","modifierName":{"id":8301,"name":"onlyOwner","nameLocations":["1064:9:35"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"1064:9:35"},"nodeType":"ModifierInvocation","src":"1064:9:35"}],"name":"unpause","nameLocation":"1047:7:35","nodeType":"FunctionDefinition","parameters":{"id":8300,"nodeType":"ParameterList","parameters":[],"src":"1054:2:35"},"returnParameters":{"id":8303,"nodeType":"ParameterList","parameters":[],"src":"1074:0:35"},"scope":8345,"src":"1038:63:35","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8322,"nodeType":"Block","src":"1166:34:35","statements":[{"expression":{"arguments":[{"id":8318,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8310,"src":"1182:2:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8319,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8312,"src":"1186:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8317,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"1176:5:35","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1176:17:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8321,"nodeType":"ExpressionStatement","src":"1176:17:35"}]},"functionSelector":"40c10f19","id":8323,"implemented":true,"kind":"function","modifiers":[{"id":8315,"kind":"modifierInvocation","modifierName":{"id":8314,"name":"onlyOwner","nameLocations":["1156:9:35"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"1156:9:35"},"nodeType":"ModifierInvocation","src":"1156:9:35"}],"name":"mint","nameLocation":"1116:4:35","nodeType":"FunctionDefinition","parameters":{"id":8313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8310,"mutability":"mutable","name":"to","nameLocation":"1129:2:35","nodeType":"VariableDeclaration","scope":8323,"src":"1121:10:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8309,"name":"address","nodeType":"ElementaryTypeName","src":"1121:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8312,"mutability":"mutable","name":"amount","nameLocation":"1141:6:35","nodeType":"VariableDeclaration","scope":8323,"src":"1133:14:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8311,"name":"uint256","nodeType":"ElementaryTypeName","src":"1133:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1120:28:35"},"returnParameters":{"id":8316,"nodeType":"ParameterList","parameters":[],"src":"1166:0:35"},"scope":8345,"src":"1107:93:35","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[814,1646],"body":{"id":8343,"nodeType":"Block","src":"1401:47:35","statements":[{"expression":{"arguments":[{"id":8338,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8325,"src":"1425:4:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8339,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8327,"src":"1431:2:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8340,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8329,"src":"1435:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8335,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1411:5:35","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_EduMeta_$8345_$","typeString":"type(contract super EduMeta)"}},"id":8337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1417:7:35","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":1646,"src":"1411:13:35","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":8341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1411:30:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8342,"nodeType":"ExpressionStatement","src":"1411:30:35"}]},"id":8344,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"1282:7:35","nodeType":"FunctionDefinition","overrides":{"id":8333,"nodeType":"OverrideSpecifier","overrides":[{"id":8331,"name":"ERC20","nameLocations":["1379:5:35"],"nodeType":"IdentifierPath","referencedDeclaration":1007,"src":"1379:5:35"},{"id":8332,"name":"ERC20Pausable","nameLocations":["1386:13:35"],"nodeType":"IdentifierPath","referencedDeclaration":1647,"src":"1386:13:35"}],"src":"1370:30:35"},"parameters":{"id":8330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8325,"mutability":"mutable","name":"from","nameLocation":"1307:4:35","nodeType":"VariableDeclaration","scope":8344,"src":"1299:12:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8324,"name":"address","nodeType":"ElementaryTypeName","src":"1299:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8327,"mutability":"mutable","name":"to","nameLocation":"1329:2:35","nodeType":"VariableDeclaration","scope":8344,"src":"1321:10:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8326,"name":"address","nodeType":"ElementaryTypeName","src":"1321:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8329,"mutability":"mutable","name":"value","nameLocation":"1349:5:35","nodeType":"VariableDeclaration","scope":8344,"src":"1341:13:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8328,"name":"uint256","nodeType":"ElementaryTypeName","src":"1341:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1289:71:35"},"returnParameters":{"id":8334,"nodeType":"ParameterList","parameters":[],"src":"1401:0:35"},"scope":8345,"src":"1273:175:35","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":8346,"src":"711:739:35","usedErrors":[13,18,367,372,377,386,391,396,1110,1119,1126,1392,1397,1402,1678,1685,1875,1880,2056,2188,2191,2288,2290,4028,4033,4038],"usedEvents":[24,335,1019,1028,2180,2185]}],"src":"81:1370:35"},"id":35}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"IERC1363":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","approveAndCall(address,uint256)":"3177029f","approveAndCall(address,uint256,bytes)":"cae9ca51","balanceOf(address)":"70a08231","supportsInterface(bytes4)":"01ffc9a7","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferAndCall(address,uint256)":"1296ee62","transferAndCall(address,uint256,bytes)":"4000aea0","transferFrom(address,address,uint256)":"23b872dd","transferFromAndCall(address,address,uint256)":"d8fbe994","transferFromAndCall(address,address,uint256,bytes)":"c1d34b89"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC1363Receiver.sol":{"IERC1363Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onTransferReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onTransferReceived(address,address,uint256,bytes)":"88a7ca5c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onTransferReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support `transferAndCall` or `transferFromAndCall` from ERC-1363 token contracts.\",\"kind\":\"dev\",\"methods\":{\"onTransferReceived(address,address,uint256,bytes)\":{\"details\":\"Whenever ERC-1363 tokens are transferred to this contract via `transferAndCall` or `transferFromAndCall` by `operator` from `from`, this function is called. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onTransferReceived(address,address,uint256,bytes)\\\"))` (i.e. 0x88a7ca5c, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format.\",\"from\":\"The address which the tokens are transferred from.\",\"operator\":\"The address which called `transferAndCall` or `transferFromAndCall` function.\",\"value\":\"The amount of tokens transferred.\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onTransferReceived(address,address,uint256,bytes)\\\"))` if transfer is allowed unless throwing.\"}}},\"title\":\"IERC1363Receiver\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363Receiver.sol\":\"IERC1363Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363Receiver.sol\":{\"keccak256\":\"0x5cea723201b514b19a8bbe3bd19d585d378afbe7569657651c21e8eaa09b39d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17e72b4af2ebfb3990724ac8a5ceabc85f347210c386e19aed29d767e6ce2aff\",\"dweb:/ipfs/QmZXFN8ZppaXmJfWzzMnA4zWBvq7fJnEd6Snf8tvWv2VSQ\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC1363Spender.sol":{"IERC1363Spender":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onApprovalReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onApprovalReceived(address,uint256,bytes)":"7b04a2d0"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onApprovalReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support `approveAndCall` from ERC-1363 token contracts.\",\"kind\":\"dev\",\"methods\":{\"onApprovalReceived(address,uint256,bytes)\":{\"details\":\"Whenever an ERC-1363 token `owner` approves this contract via `approveAndCall` to spend their tokens, this function is called. NOTE: To accept the approval, this must return `bytes4(keccak256(\\\"onApprovalReceived(address,uint256,bytes)\\\"))` (i.e. 0x7b04a2d0, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format.\",\"owner\":\"The address which called `approveAndCall` function and previously owned the tokens.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onApprovalReceived(address,uint256,bytes)\\\"))` if approval is allowed unless throwing.\"}}},\"title\":\"IERC1363Spender\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363Spender.sol\":\"IERC1363Spender\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363Spender.sol\":{\"keccak256\":\"0x6df85f4df77c041a1957bdd5ae1c6e3247922e57e0b63687cce493d66663c6a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d08c0b9bf43ebd3cb1402dcebaeebe5a827939b3c591f3e131cf1900c7bcd44e\",\"dweb:/ipfs/QmWkKyQEvmidbk7KJPD96bX5u2iyaAPGyK198N7SqrTn4k\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol":{"IERC3156FlashBorrower":{"abi":[{"inputs":[{"internalType":"address","name":"initiator","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"fee","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onFlashLoan","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onFlashLoan(address,address,uint256,uint256,bytes)":"23e30c8b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onFlashLoan\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-3156 FlashBorrower, as defined in https://eips.ethereum.org/EIPS/eip-3156[ERC-3156].\",\"kind\":\"dev\",\"methods\":{\"onFlashLoan(address,address,uint256,uint256,bytes)\":{\"details\":\"Receive a flash loan.\",\"params\":{\"amount\":\"The amount of tokens lent.\",\"data\":\"Arbitrary data structure, intended to contain user-defined parameters.\",\"fee\":\"The additional amount of tokens to repay.\",\"initiator\":\"The initiator of the loan.\",\"token\":\"The loan currency.\"},\"returns\":{\"_0\":\"The keccak256 hash of \\\"ERC3156FlashBorrower.onFlashLoan\\\"\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol\":\"IERC3156FlashBorrower\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol\":{\"keccak256\":\"0x4e4b982b56b50290dd1dcaa2fef1178b1574dfc7c0f0a8ef9cb68a207d72582e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb7adc69bcb4d8ef0b001869b24e831edd411b6c5405e03c5e95ca109a7b7bcd\",\"dweb:/ipfs/QmWeXYWVPUuwVWPjLXn44PrEnv7bJg3JiVkFm7riDkgTVk\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol":{"IERC3156FlashLender":{"abi":[{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"flashFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC3156FlashBorrower","name":"receiver","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"flashLoan","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"maxFlashLoan","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"flashFee(address,uint256)":"d9d98ce4","flashLoan(address,address,uint256,bytes)":"5cffe9de","maxFlashLoan(address)":"613255ab"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"flashFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC3156FlashBorrower\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flashLoan\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"maxFlashLoan\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-3156 FlashLender, as defined in https://eips.ethereum.org/EIPS/eip-3156[ERC-3156].\",\"kind\":\"dev\",\"methods\":{\"flashFee(address,uint256)\":{\"details\":\"The fee to be charged for a given loan.\",\"params\":{\"amount\":\"The amount of tokens lent.\",\"token\":\"The loan currency.\"},\"returns\":{\"_0\":\"The amount of `token` to be charged for the loan, on top of the returned principal.\"}},\"flashLoan(address,address,uint256,bytes)\":{\"details\":\"Initiate a flash loan.\",\"params\":{\"amount\":\"The amount of tokens lent.\",\"data\":\"Arbitrary data structure, intended to contain user-defined parameters.\",\"receiver\":\"The receiver of the tokens in the loan, and the receiver of the callback.\",\"token\":\"The loan currency.\"}},\"maxFlashLoan(address)\":{\"details\":\"The amount of currency available to be lended.\",\"params\":{\"token\":\"The loan currency.\"},\"returns\":{\"_0\":\"The amount of `token` that can be borrowed.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol\":\"IERC3156FlashLender\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol\":{\"keccak256\":\"0x4e4b982b56b50290dd1dcaa2fef1178b1574dfc7c0f0a8ef9cb68a207d72582e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb7adc69bcb4d8ef0b001869b24e831edd411b6c5405e03c5e95ca109a7b7bcd\",\"dweb:/ipfs/QmWeXYWVPUuwVWPjLXn44PrEnv7bJg3JiVkFm7riDkgTVk\"]},\"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol\":{\"keccak256\":\"0x218d708e7d8df417db24a497727eefb7772e61c7cde3886fc42bbcb6aafa6947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ef4e8814b2767d9bdbc5baf1a8ab9b3750f46728f9e131fd433d13b956757dd\",\"dweb:/ipfs/QmY2iwJG4d757uwbcuJU5FsPRi17BkR9cJJAbrzUqRuqhH\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xfb223a85dd0b2175cfbbaa325a744e2cd74ecd17c3df2b77b0722f991d2725ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84bf1dea0589ec49c8d15d559cc6d86ee493048a89b2d4adb60fbe705a3d89ae\",\"dweb:/ipfs/Qmd56n556d529wk2pRMhYhm5nhMDhviwereodDikjs68w1\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC1363.sol":{"ERC1363":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"ERC1363ApproveFailed","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1363InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC1363InvalidSpender","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"ERC1363TransferFailed","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"ERC1363TransferFromFailed","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","approveAndCall(address,uint256)":"3177029f","approveAndCall(address,uint256,bytes)":"cae9ca51","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferAndCall(address,uint256)":"1296ee62","transferAndCall(address,uint256,bytes)":"4000aea0","transferFrom(address,address,uint256)":"23b872dd","transferFromAndCall(address,address,uint256)":"d8fbe994","transferFromAndCall(address,address,uint256,bytes)":"c1d34b89"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"ERC1363ApproveFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1363InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC1363InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"ERC1363TransferFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"ERC1363TransferFromFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} tokens that adds support for code execution after transfers and approvals on recipient contracts. Calls after transfers are enabled through the {ERC1363-transferAndCall} and {ERC1363-transferFromAndCall} methods while calls after approvals can be made with {ERC1363-approveAndCall} _Available since v5.1._\",\"errors\":{\"ERC1363ApproveFailed(address,uint256)\":[{\"details\":\"Indicates a failure within the {approve} part of a approveAndCall operation.\",\"params\":{\"spender\":\"Address which will spend the funds.\",\"value\":\"Amount of tokens to be spent.\"}}],\"ERC1363InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1363InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the token `spender`. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1363TransferFailed(address,uint256)\":[{\"details\":\"Indicates a failure within the {transfer} part of a transferAndCall operation.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\",\"value\":\"Amount of tokens to be transferred.\"}}],\"ERC1363TransferFromFailed(address,address,uint256)\":[{\"details\":\"Indicates a failure within the {transferFrom} part of a transferFromAndCall operation.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\",\"sender\":\"Address from which to send tokens.\",\"value\":\"Amount of tokens to be transferred.\"}}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`. Returns a flag that indicates if the call succeeded. Requirements: - The target has code (i.e. is a contract). - The target `spender` must implement the {IERC1363Spender} interface. - The target must return the {IERC1363Spender-onApprovalReceived} selector to accept the approval. - The internal {approve} must succeed (returned `true`).\"},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Variant of {approveAndCall} that accepts an additional `data` parameter with no specified format.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`. Returns a flag that indicates if the call succeeded. Requirements: - The target has code (i.e. is a contract). - The target `to` must implement the {IERC1363Receiver} interface. - The target must return the {IERC1363Receiver-onTransferReceived} selector to accept the transfer. - The internal {transfer} must succeed (returned `true`).\"},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Variant of {transferAndCall} that accepts an additional `data` parameter with no specified format.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`. Returns a flag that indicates if the call succeeded. Requirements: - The target has code (i.e. is a contract). - The target `to` must implement the {IERC1363Receiver} interface. - The target must return the {IERC1363Receiver-onTransferReceived} selector to accept the transfer. - The internal {transferFrom} must succeed (returned `true`).\"},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Variant of {transferFromAndCall} that accepts an additional `data` parameter with no specified format.\"}},\"title\":\"ERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC1363.sol\":\"ERC1363\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC1363Receiver.sol\":{\"keccak256\":\"0x5cea723201b514b19a8bbe3bd19d585d378afbe7569657651c21e8eaa09b39d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17e72b4af2ebfb3990724ac8a5ceabc85f347210c386e19aed29d767e6ce2aff\",\"dweb:/ipfs/QmZXFN8ZppaXmJfWzzMnA4zWBvq7fJnEd6Snf8tvWv2VSQ\"]},\"@openzeppelin/contracts/interfaces/IERC1363Spender.sol\":{\"keccak256\":\"0x6df85f4df77c041a1957bdd5ae1c6e3247922e57e0b63687cce493d66663c6a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d08c0b9bf43ebd3cb1402dcebaeebe5a827939b3c591f3e131cf1900c7bcd44e\",\"dweb:/ipfs/QmWkKyQEvmidbk7KJPD96bX5u2iyaAPGyK198N7SqrTn4k\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC1363.sol\":{\"keccak256\":\"0x3d95de6ef6041c4439d4fea7fbccf6fb7f390ddb6b38be50d80c0f5284703d47\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9e84c5fa05673be3a1f1e7f487dc65f002f88f318474777616e2413fd023fce9\",\"dweb:/ipfs/QmWgKT6ghY6NK5onar3pgD7ZMAt3KAHwhYXASe49Q1uJ8p\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/token/ERC20/utils/ERC1363Utils.sol\":{\"keccak256\":\"0xe644d2ed2640745d91b1a6f826beb5b20d8312ed02bfca4ffec8af0adf6a3ee4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb146e9cf5e140cae6a82074bc44def564fbb8f687946e295ca81a3e7e113ee5\",\"dweb:/ipfs/QmXSD2SMDSuaB76oK3fbbsLSmEPepPtY8omwrVSwa7Gdp2\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"ERC20Burnable":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20FlashMint.sol":{"ERC20FlashMint":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"maxLoan","type":"uint256"}],"name":"ERC3156ExceededMaxLoan","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC3156InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"ERC3156UnsupportedToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"flashFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC3156FlashBorrower","name":"receiver","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"flashLoan","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"maxFlashLoan","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","flashFee(address,uint256)":"d9d98ce4","flashLoan(address,address,uint256,bytes)":"5cffe9de","maxFlashLoan(address)":"613255ab","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxLoan\",\"type\":\"uint256\"}],\"name\":\"ERC3156ExceededMaxLoan\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC3156InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"ERC3156UnsupportedToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"flashFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC3156FlashBorrower\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flashLoan\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"maxFlashLoan\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC-3156 Flash loans extension, as defined in https://eips.ethereum.org/EIPS/eip-3156[ERC-3156]. Adds the {flashLoan} method, which provides flash loan support at the token level. By default there is no fee, but this can be changed by overriding {flashFee}. NOTE: When this extension is used along with the {ERC20Capped} or {ERC20Votes} extensions, {maxFlashLoan} will not correctly reflect the maximum that can be flash minted. We recommend overriding {maxFlashLoan} so that it correctly reflects the supply cap.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC3156ExceededMaxLoan(uint256)\":[{\"details\":\"The requested loan exceeds the max loan value for `token`.\"}],\"ERC3156InvalidReceiver(address)\":[{\"details\":\"The receiver of a flashloan is not a valid {IERC3156FlashBorrower-onFlashLoan} implementer.\"}],\"ERC3156UnsupportedToken(address)\":[{\"details\":\"The loan token is not valid.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"flashFee(address,uint256)\":{\"details\":\"Returns the fee applied when doing flash loans. This function calls the {_flashFee} function which returns the fee applied when doing flash loans.\",\"params\":{\"token\":\"The token to be flash loaned.\",\"value\":\"The amount of tokens to be loaned.\"},\"returns\":{\"_0\":\"The fees applied to the corresponding flash loan.\"}},\"flashLoan(address,address,uint256,bytes)\":{\"details\":\"Performs a flash loan. New tokens are minted and sent to the `receiver`, who is required to implement the {IERC3156FlashBorrower} interface. By the end of the flash loan, the receiver is expected to own value + fee tokens and have them approved back to the token contract itself so they can be burned.\",\"params\":{\"data\":\"An arbitrary datafield that is passed to the receiver.\",\"receiver\":\"The receiver of the flash loan. Should implement the {IERC3156FlashBorrower-onFlashLoan} interface.\",\"token\":\"The token to be flash loaned. Only `address(this)` is supported.\",\"value\":\"The amount of tokens to be loaned.\"},\"returns\":{\"_0\":\"`true` if the flash loan was successful.\"}},\"maxFlashLoan(address)\":{\"details\":\"Returns the maximum amount of tokens available for loan.\",\"params\":{\"token\":\"The address of the token that is requested.\"},\"returns\":{\"_0\":\"The amount of token that can be loaned. NOTE: This function does not consider any form of supply cap, so in case it's used in a token with a cap like {ERC20Capped}, make sure to override this function to integrate the cap instead of `type(uint256).max`.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20FlashMint.sol\":\"ERC20FlashMint\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol\":{\"keccak256\":\"0x4e4b982b56b50290dd1dcaa2fef1178b1574dfc7c0f0a8ef9cb68a207d72582e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb7adc69bcb4d8ef0b001869b24e831edd411b6c5405e03c5e95ca109a7b7bcd\",\"dweb:/ipfs/QmWeXYWVPUuwVWPjLXn44PrEnv7bJg3JiVkFm7riDkgTVk\"]},\"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol\":{\"keccak256\":\"0x218d708e7d8df417db24a497727eefb7772e61c7cde3886fc42bbcb6aafa6947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ef4e8814b2767d9bdbc5baf1a8ab9b3750f46728f9e131fd433d13b956757dd\",\"dweb:/ipfs/QmY2iwJG4d757uwbcuJU5FsPRi17BkR9cJJAbrzUqRuqhH\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20FlashMint.sol\":{\"keccak256\":\"0x4d43ed4b9ff9e4c671274976d59a58dbcc7b69bd7ac11b1710f5b7607cf15b74\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b47b42998f675cb6a51f2e74ef5906a6fa63ec6718f3fd56ee035d6f77143f9\",\"dweb:/ipfs/QmREnAXqPJBvAwfWfDzaFhNfSRWF4Jdy9ZrpHLw1KdQweY\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol":{"ERC20Pausable":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","paused()":"5c975abb","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-20 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract pause mechanism of the contract unreachable, and thus unusable.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":\"ERC20Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0x756aee61d83960d324973de3a64920a02b480efe662b611fb05ea506d844aa55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dfb71ab2f5fcc530226a25bba4d808f4d22a7f383cae4a3be3629ec057b276c\",\"dweb:/ipfs/QmRzyetUjbr9Gx1pcXYSsE5rz4XypfEbZgmBvZKUNUJQLR\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ERC20Permit":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","eip712Domain()":"84b0196e","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[ERC-2612]. Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC-20 token name.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":\"ERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xfb223a85dd0b2175cfbbaa325a744e2cd74ecd17c3df2b77b0722f991d2725ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84bf1dea0589ec49c8d15d559cc6d86ee493048a89b2d4adb60fbe705a3d89ae\",\"dweb:/ipfs/Qmd56n556d529wk2pRMhYhm5nhMDhviwereodDikjs68w1\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xecd08ad8132d88a5fcfd50f76a18583004fcdab4c33fb86343903ae420ca5a2b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://02422dce2e5305624e5cec644add1baa44bfa98ea131bf6030069089a2f56ca4\",\"dweb:/ipfs/QmcsSUkX7AYXNZE18LYE6JEmv8zZcCZvKfbUm9cSzNQyNo\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x2fa0657dd7b8bc75475a47f64bc04a9adb42236b15d65e6781594ea69a46c3e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7496f42681aed94bf0142a077324e50b86046610c1724e7c12e96cf1c365914a\",\"dweb:/ipfs/QmZvhNdSAAbN4PKPdheAqwpXukUiXp3Q3TdQccDMg2NDTV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x17fc4574e07105b0180ef61f1b3cacd1820a3d37f29a4af1018d0a253c6399b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be46b3e1362dbcadbbb45ec92cdea849dceccea3e2795237f00c123aeae44746\",\"dweb:/ipfs/QmSpyB8mud6xKiZaQnVtEPrxtTHGtyBgjs1PCYk4f2gesd\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[ERC-2612]. Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x2fa0657dd7b8bc75475a47f64bc04a9adb42236b15d65e6781594ea69a46c3e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7496f42681aed94bf0142a077324e50b86046610c1724e7c12e96cf1c365914a\",\"dweb:/ipfs/QmZvhNdSAAbN4PKPdheAqwpXukUiXp3Q3TdQccDMg2NDTV\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/utils/ERC1363Utils.sol":{"ERC1363Utils":{"abi":[{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1363InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC1363InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e2beb4d440b9f9d35c3f7f7ef80a6094aa691d56071d633dabfa60ad638967c364736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE2 0xBE 0xB4 0xD4 BLOCKHASH 0xB9 0xF9 0xD3 TLOAD EXTCODEHASH PUSH32 0x7EF80A6094AA691D56071D633DABFA60AD638967C364736F6C634300081B0033 ","sourceMap":"427:2869:19:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;427:2869:19;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e2beb4d440b9f9d35c3f7f7ef80a6094aa691d56071d633dabfa60ad638967c364736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE2 0xBE 0xB4 0xD4 BLOCKHASH 0xB9 0xF9 0xD3 TLOAD EXTCODEHASH PUSH32 0x7EF80A6094AA691D56071D633DABFA60AD638967C364736F6C634300081B0033 ","sourceMap":"427:2869:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1363InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC1363InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Library that provides common ERC-1363 utility functions. See https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\",\"errors\":{\"ERC1363InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1363InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the token `spender`. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/ERC1363Utils.sol\":\"ERC1363Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363Receiver.sol\":{\"keccak256\":\"0x5cea723201b514b19a8bbe3bd19d585d378afbe7569657651c21e8eaa09b39d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17e72b4af2ebfb3990724ac8a5ceabc85f347210c386e19aed29d767e6ce2aff\",\"dweb:/ipfs/QmZXFN8ZppaXmJfWzzMnA4zWBvq7fJnEd6Snf8tvWv2VSQ\"]},\"@openzeppelin/contracts/interfaces/IERC1363Spender.sol\":{\"keccak256\":\"0x6df85f4df77c041a1957bdd5ae1c6e3247922e57e0b63687cce493d66663c6a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d08c0b9bf43ebd3cb1402dcebaeebe5a827939b3c591f3e131cf1900c7bcd44e\",\"dweb:/ipfs/QmWkKyQEvmidbk7KJPD96bX5u2iyaAPGyK198N7SqrTn4k\"]},\"@openzeppelin/contracts/token/ERC20/utils/ERC1363Utils.sol\":{\"keccak256\":\"0xe644d2ed2640745d91b1a6f826beb5b20d8312ed02bfca4ffec8af0adf6a3ee4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb146e9cf5e140cae6a82074bc44def564fbb8f687946e295ca81a3e7e113ee5\",\"dweb:/ipfs/QmXSD2SMDSuaB76oK3fbbsLSmEPepPtY8omwrVSwa7Gdp2\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Nonces.sol":{"Nonces":{"abi":[{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"nonces(address)":"7ecebe00"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides tracking nonces for addresses. Nonces will only increment.\",\"errors\":{\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"kind\":\"dev\",\"methods\":{\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Nonces.sol\":\"Nonces\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cebe40d49468f4eea75f3ed3b43bd0a1573e3acdb9858c097754b7173807b75364736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE 0xBE BLOCKHASH 0xD4 SWAP5 PUSH9 0xF4EEA75F3ED3B43BD0 LOG1 JUMPI RETURNDATACOPY GASPRICE 0xCD 0xB9 DUP6 DUP13 MULMOD PUSH24 0x54B7173807B75364736F6C634300081B0033000000000000 ","sourceMap":"657:1315:22:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;657:1315:22;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cebe40d49468f4eea75f3ed3b43bd0a1573e3acdb9858c097754b7173807b75364736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE 0xBE BLOCKHASH 0xD4 SWAP5 PUSH9 0xF4EEA75F3ED3B43BD0 LOG1 JUMPI RETURNDATACOPY GASPRICE 0xCD 0xB9 DUP6 DUP13 MULMOD PUSH24 0x54B7173807B75364736F6C634300081B0033000000000000 ","sourceMap":"657:1315:22:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Pausable.sol":{"Pausable":{"abi":[{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ShortStrings":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209fe03bdde9e457de1e4189de8fb4cc629579f58be192d7178e052f0a4910e28e64736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 0xE0 EXTCODESIZE 0xDD 0xE9 0xE4 JUMPI 0xDE 0x1E COINBASE DUP10 0xDE DUP16 0xB4 0xCC PUSH3 0x9579F5 DUP12 0xE1 SWAP3 0xD7 OR DUP15 SDIV 0x2F EXP BLOBHASH LT 0xE2 DUP15 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"1255:3046:24:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1255:3046:24;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209fe03bdde9e457de1e4189de8fb4cc629579f58be192d7178e052f0a4910e28e64736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 0xE0 EXTCODESIZE 0xDD 0xE9 0xE4 JUMPI 0xDE 0x1E COINBASE DUP10 0xDE DUP16 0xB4 0xCC PUSH3 0x9579F5 DUP12 0xE1 SWAP3 0xD7 OR DUP15 SDIV 0x2F EXP BLOBHASH LT 0xE2 DUP15 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"1255:3046:24:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220368110306dfd3194be728c797e3185da226c927b9abd70c13127604e8065fd3c64736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE DUP2 LT ADDRESS PUSH14 0xFD3194BE728C797E3185DA226C92 PUSH28 0x9ABD70C13127604E8065FD3C64736F6C634300081B00330000000000 ","sourceMap":"1407:2774:25:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1407:2774:25;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220368110306dfd3194be728c797e3185da226c927b9abd70c13127604e8065fd3c64736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE DUP2 LT ADDRESS PUSH14 0xFD3194BE728C797E3185DA226C92 PUSH28 0x9ABD70C13127604E8065FD3C64736F6C634300081B00330000000000 ","sourceMap":"1407:2774:25:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c6924cb8578af92f994c43a26745a5ffd6f645cae2d22555981e8af80b8ced8a64736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC6 SWAP3 0x4C 0xB8 JUMPI DUP11 0xF9 0x2F SWAP10 0x4C NUMBER LOG2 PUSH8 0x45A5FFD6F645CAE2 0xD2 0x25 SSTORE SWAP9 0x1E DUP11 0xF8 SIGNEXTEND DUP13 0xED DUP11 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"297:18982:26:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;297:18982:26;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c6924cb8578af92f994c43a26745a5ffd6f645cae2d22555981e8af80b8ced8a64736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC6 SWAP3 0x4C 0xB8 JUMPI DUP11 0xF9 0x2F SWAP10 0x4C NUMBER LOG2 PUSH8 0x45A5FFD6F645CAE2 0xD2 0x25 SSTORE SWAP9 0x1E DUP11 0xF8 SIGNEXTEND DUP13 0xED DUP11 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"297:18982:26:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fa5d213308be9170a2a5c03b099eb0a230297de5999b9e398f39b758f8f9c44b64736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STATICCALL TSTORE 0x21 CALLER ADDMOD 0xBE SWAP2 PUSH17 0xA2A5C03B099EB0A230297DE5999B9E398F CODECOPY 0xB7 PC 0xF8 0xF9 0xC4 0x4B PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"344:7470:27:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;344:7470:27;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fa5d213308be9170a2a5c03b099eb0a230297de5999b9e398f39b758f8f9c44b64736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STATICCALL TSTORE 0x21 CALLER ADDMOD 0xBE SWAP2 PUSH17 0xA2A5C03B099EB0A230297DE5999B9E398F CODECOPY 0xB7 PC 0xF8 0xF9 0xC4 0x4B PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"344:7470:27:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xfb223a85dd0b2175cfbbaa325a744e2cd74ecd17c3df2b77b0722f991d2725ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84bf1dea0589ec49c8d15d559cc6d86ee493048a89b2d4adb60fbe705a3d89ae\",\"dweb:/ipfs/Qmd56n556d529wk2pRMhYhm5nhMDhviwereodDikjs68w1\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x17fc4574e07105b0180ef61f1b3cacd1820a3d37f29a4af1018d0a253c6399b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be46b3e1362dbcadbbb45ec92cdea849dceccea3e2795237f00c123aeae44746\",\"dweb:/ipfs/QmSpyB8mud6xKiZaQnVtEPrxtTHGtyBgjs1PCYk4f2gesd\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207c3bfe21f830dbf0efa84c440035520d935c667429cbc87c04ae86db7e0d04f664736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH29 0x3BFE21F830DBF0EFA84C440035520D935C667429CBC87C04AE86DB7E0D DIV 0xF6 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"521:3729:29:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;521:3729:29;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207c3bfe21f830dbf0efa84c440035520d935c667429cbc87c04ae86db7e0d04f664736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH29 0x3BFE21F830DBF0EFA84C440035520D935C667429CBC87C04AE86DB7E0D DIV 0xF6 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"521:3729:29:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e4a9e200f58e462698b794f3c614815691b6fe64de894b7ac9135e20f137282064736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 0xA9 0xE2 STOP CREATE2 DUP15 CHAINID 0x26 SWAP9 0xB7 SWAP5 RETURN 0xC6 EQ DUP2 JUMP SWAP2 0xB6 INVALID PUSH5 0xDE894B7AC9 SGT MCOPY KECCAK256 CALL CALLDATACOPY 0x28 KECCAK256 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"281:31863:32:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;281:31863:32;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e4a9e200f58e462698b794f3c614815691b6fe64de894b7ac9135e20f137282064736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 0xA9 0xE2 STOP CREATE2 DUP15 CHAINID 0x26 SWAP9 0xB7 SWAP5 RETURN 0xC6 EQ DUP2 JUMP SWAP2 0xB6 INVALID PUSH5 0xDE894B7AC9 SGT MCOPY KECCAK256 CALL CALLDATACOPY 0x28 KECCAK256 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"281:31863:32:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209cb9a6abeec825f6bbc58223d0da4f96cdc91cab8b22351cb03cad252044b50f64736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 0xB9 0xA6 0xAB 0xEE 0xC8 0x25 0xF6 0xBB 0xC5 DUP3 0x23 0xD0 0xDA 0x4F SWAP7 0xCD 0xC9 SHR 0xAB DUP12 0x22 CALLDATALOAD SHR 0xB0 EXTCODECOPY 0xAD 0x25 KECCAK256 PREVRANDAO 0xB5 0xF PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"769:34173:33:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;769:34173:33;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209cb9a6abeec825f6bbc58223d0da4f96cdc91cab8b22351cb03cad252044b50f64736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 0xB9 0xA6 0xAB 0xEE 0xC8 0x25 0xF6 0xBB 0xC5 DUP3 0x23 0xD0 0xDA 0x4F SWAP7 0xCD 0xC9 SHR 0xAB DUP12 0x22 CALLDATALOAD SHR 0xB0 EXTCODECOPY 0xAD 0x25 KECCAK256 PREVRANDAO 0xB5 0xF PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"769:34173:33:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220952ef2c9829c2ccbd088b94ccd73a4e7b142eb2845f109198feb363ea8df4f5564736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 0x2E CALLCODE 0xC9 DUP3 SWAP13 0x2C 0xCB 0xD0 DUP9 0xB9 0x4C 0xCD PUSH20 0xA4E7B142EB2845F109198FEB363EA8DF4F556473 PUSH16 0x6C634300081B00330000000000000000 ","sourceMap":"258:2354:34:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;258:2354:34;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220952ef2c9829c2ccbd088b94ccd73a4e7b142eb2845f109198feb363ea8df4f5564736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 0x2E CALLCODE 0xC9 DUP3 SWAP13 0x2C 0xCB 0xD0 DUP9 0xB9 0x4C 0xCD PUSH20 0xA4E7B142EB2845F109198FEB363EA8DF4F556473 PUSH16 0x6C634300081B00330000000000000000 ","sourceMap":"258:2354:34:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"Contracts/EduMetaCoinErc20.sol":{"EduMeta":{"abi":[{"inputs":[{"internalType":"address","name":"initialOwner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"ERC1363ApproveFailed","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1363InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC1363InvalidSpender","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"ERC1363TransferFailed","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"ERC1363TransferFromFailed","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"uint256","name":"maxLoan","type":"uint256"}],"name":"ERC3156ExceededMaxLoan","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC3156InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"ERC3156UnsupportedToken","type":"error"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"flashFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC3156FlashBorrower","name":"receiver","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"flashLoan","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"maxFlashLoan","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1696":{"entryPoint":null,"id":1696,"parameterSlots":1,"returnSlots":0},"@_4462":{"entryPoint":null,"id":4462,"parameterSlots":2,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_544":{"entryPoint":null,"id":544,"parameterSlots":2,"returnSlots":0},"@_8290":{"entryPoint":null,"id":8290,"parameterSlots":1,"returnSlots":0},"@_buildDomainSeparator_4509":{"entryPoint":null,"id":4509,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_146":{"entryPoint":440,"id":146,"parameterSlots":1,"returnSlots":0},"@getStringSlot_2592":{"entryPoint":null,"id":2592,"parameterSlots":1,"returnSlots":1},"@toShortStringWithFallback_2432":{"entryPoint":530,"id":2432,"parameterSlots":2,"returnSlots":1},"@toShortString_2334":{"entryPoint":581,"id":2334,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":643,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1040,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":771,"id":null,"parameterSlots":3,"returnSlots":0},"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32":{"entryPoint":1118,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":850,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":713,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":691,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:4483:36","nodeType":"YulBlock","src":"0:4483:36","statements":[{"nativeSrc":"6:3:36","nodeType":"YulBlock","src":"6:3:36","statements":[]},{"body":{"nativeSrc":"95:209:36","nodeType":"YulBlock","src":"95:209:36","statements":[{"body":{"nativeSrc":"141:16:36","nodeType":"YulBlock","src":"141:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"150:1:36","nodeType":"YulLiteral","src":"150:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"153:1:36","nodeType":"YulLiteral","src":"153:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"143:6:36","nodeType":"YulIdentifier","src":"143:6:36"},"nativeSrc":"143:12:36","nodeType":"YulFunctionCall","src":"143:12:36"},"nativeSrc":"143:12:36","nodeType":"YulExpressionStatement","src":"143:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"116:7:36","nodeType":"YulIdentifier","src":"116:7:36"},{"name":"headStart","nativeSrc":"125:9:36","nodeType":"YulIdentifier","src":"125:9:36"}],"functionName":{"name":"sub","nativeSrc":"112:3:36","nodeType":"YulIdentifier","src":"112:3:36"},"nativeSrc":"112:23:36","nodeType":"YulFunctionCall","src":"112:23:36"},{"kind":"number","nativeSrc":"137:2:36","nodeType":"YulLiteral","src":"137:2:36","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"108:3:36","nodeType":"YulIdentifier","src":"108:3:36"},"nativeSrc":"108:32:36","nodeType":"YulFunctionCall","src":"108:32:36"},"nativeSrc":"105:52:36","nodeType":"YulIf","src":"105:52:36"},{"nativeSrc":"166:29:36","nodeType":"YulVariableDeclaration","src":"166:29:36","value":{"arguments":[{"name":"headStart","nativeSrc":"185:9:36","nodeType":"YulIdentifier","src":"185:9:36"}],"functionName":{"name":"mload","nativeSrc":"179:5:36","nodeType":"YulIdentifier","src":"179:5:36"},"nativeSrc":"179:16:36","nodeType":"YulFunctionCall","src":"179:16:36"},"variables":[{"name":"value","nativeSrc":"170:5:36","nodeType":"YulTypedName","src":"170:5:36","type":""}]},{"body":{"nativeSrc":"258:16:36","nodeType":"YulBlock","src":"258:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"267:1:36","nodeType":"YulLiteral","src":"267:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"270:1:36","nodeType":"YulLiteral","src":"270:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"260:6:36","nodeType":"YulIdentifier","src":"260:6:36"},"nativeSrc":"260:12:36","nodeType":"YulFunctionCall","src":"260:12:36"},"nativeSrc":"260:12:36","nodeType":"YulExpressionStatement","src":"260:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"217:5:36","nodeType":"YulIdentifier","src":"217:5:36"},{"arguments":[{"name":"value","nativeSrc":"228:5:36","nodeType":"YulIdentifier","src":"228:5:36"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"243:3:36","nodeType":"YulLiteral","src":"243:3:36","type":"","value":"160"},{"kind":"number","nativeSrc":"248:1:36","nodeType":"YulLiteral","src":"248:1:36","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"239:3:36","nodeType":"YulIdentifier","src":"239:3:36"},"nativeSrc":"239:11:36","nodeType":"YulFunctionCall","src":"239:11:36"},{"kind":"number","nativeSrc":"252:1:36","nodeType":"YulLiteral","src":"252:1:36","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"235:3:36","nodeType":"YulIdentifier","src":"235:3:36"},"nativeSrc":"235:19:36","nodeType":"YulFunctionCall","src":"235:19:36"}],"functionName":{"name":"and","nativeSrc":"224:3:36","nodeType":"YulIdentifier","src":"224:3:36"},"nativeSrc":"224:31:36","nodeType":"YulFunctionCall","src":"224:31:36"}],"functionName":{"name":"eq","nativeSrc":"214:2:36","nodeType":"YulIdentifier","src":"214:2:36"},"nativeSrc":"214:42:36","nodeType":"YulFunctionCall","src":"214:42:36"}],"functionName":{"name":"iszero","nativeSrc":"207:6:36","nodeType":"YulIdentifier","src":"207:6:36"},"nativeSrc":"207:50:36","nodeType":"YulFunctionCall","src":"207:50:36"},"nativeSrc":"204:70:36","nodeType":"YulIf","src":"204:70:36"},{"nativeSrc":"283:15:36","nodeType":"YulAssignment","src":"283:15:36","value":{"name":"value","nativeSrc":"293:5:36","nodeType":"YulIdentifier","src":"293:5:36"},"variableNames":[{"name":"value0","nativeSrc":"283:6:36","nodeType":"YulIdentifier","src":"283:6:36"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nativeSrc":"14:290:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"61:9:36","nodeType":"YulTypedName","src":"61:9:36","type":""},{"name":"dataEnd","nativeSrc":"72:7:36","nodeType":"YulTypedName","src":"72:7:36","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"84:6:36","nodeType":"YulTypedName","src":"84:6:36","type":""}],"src":"14:290:36"},{"body":{"nativeSrc":"341:95:36","nodeType":"YulBlock","src":"341:95:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"358:1:36","nodeType":"YulLiteral","src":"358:1:36","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"365:3:36","nodeType":"YulLiteral","src":"365:3:36","type":"","value":"224"},{"kind":"number","nativeSrc":"370:10:36","nodeType":"YulLiteral","src":"370:10:36","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"361:3:36","nodeType":"YulIdentifier","src":"361:3:36"},"nativeSrc":"361:20:36","nodeType":"YulFunctionCall","src":"361:20:36"}],"functionName":{"name":"mstore","nativeSrc":"351:6:36","nodeType":"YulIdentifier","src":"351:6:36"},"nativeSrc":"351:31:36","nodeType":"YulFunctionCall","src":"351:31:36"},"nativeSrc":"351:31:36","nodeType":"YulExpressionStatement","src":"351:31:36"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"398:1:36","nodeType":"YulLiteral","src":"398:1:36","type":"","value":"4"},{"kind":"number","nativeSrc":"401:4:36","nodeType":"YulLiteral","src":"401:4:36","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"391:6:36","nodeType":"YulIdentifier","src":"391:6:36"},"nativeSrc":"391:15:36","nodeType":"YulFunctionCall","src":"391:15:36"},"nativeSrc":"391:15:36","nodeType":"YulExpressionStatement","src":"391:15:36"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"422:1:36","nodeType":"YulLiteral","src":"422:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"425:4:36","nodeType":"YulLiteral","src":"425:4:36","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"415:6:36","nodeType":"YulIdentifier","src":"415:6:36"},"nativeSrc":"415:15:36","nodeType":"YulFunctionCall","src":"415:15:36"},"nativeSrc":"415:15:36","nodeType":"YulExpressionStatement","src":"415:15:36"}]},"name":"panic_error_0x41","nativeSrc":"309:127:36","nodeType":"YulFunctionDefinition","src":"309:127:36"},{"body":{"nativeSrc":"496:325:36","nodeType":"YulBlock","src":"496:325:36","statements":[{"nativeSrc":"506:22:36","nodeType":"YulAssignment","src":"506:22:36","value":{"arguments":[{"kind":"number","nativeSrc":"520:1:36","nodeType":"YulLiteral","src":"520:1:36","type":"","value":"1"},{"name":"data","nativeSrc":"523:4:36","nodeType":"YulIdentifier","src":"523:4:36"}],"functionName":{"name":"shr","nativeSrc":"516:3:36","nodeType":"YulIdentifier","src":"516:3:36"},"nativeSrc":"516:12:36","nodeType":"YulFunctionCall","src":"516:12:36"},"variableNames":[{"name":"length","nativeSrc":"506:6:36","nodeType":"YulIdentifier","src":"506:6:36"}]},{"nativeSrc":"537:38:36","nodeType":"YulVariableDeclaration","src":"537:38:36","value":{"arguments":[{"name":"data","nativeSrc":"567:4:36","nodeType":"YulIdentifier","src":"567:4:36"},{"kind":"number","nativeSrc":"573:1:36","nodeType":"YulLiteral","src":"573:1:36","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"563:3:36","nodeType":"YulIdentifier","src":"563:3:36"},"nativeSrc":"563:12:36","nodeType":"YulFunctionCall","src":"563:12:36"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"541:18:36","nodeType":"YulTypedName","src":"541:18:36","type":""}]},{"body":{"nativeSrc":"614:31:36","nodeType":"YulBlock","src":"614:31:36","statements":[{"nativeSrc":"616:27:36","nodeType":"YulAssignment","src":"616:27:36","value":{"arguments":[{"name":"length","nativeSrc":"630:6:36","nodeType":"YulIdentifier","src":"630:6:36"},{"kind":"number","nativeSrc":"638:4:36","nodeType":"YulLiteral","src":"638:4:36","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"626:3:36","nodeType":"YulIdentifier","src":"626:3:36"},"nativeSrc":"626:17:36","nodeType":"YulFunctionCall","src":"626:17:36"},"variableNames":[{"name":"length","nativeSrc":"616:6:36","nodeType":"YulIdentifier","src":"616:6:36"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"594:18:36","nodeType":"YulIdentifier","src":"594:18:36"}],"functionName":{"name":"iszero","nativeSrc":"587:6:36","nodeType":"YulIdentifier","src":"587:6:36"},"nativeSrc":"587:26:36","nodeType":"YulFunctionCall","src":"587:26:36"},"nativeSrc":"584:61:36","nodeType":"YulIf","src":"584:61:36"},{"body":{"nativeSrc":"704:111:36","nodeType":"YulBlock","src":"704:111:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"725:1:36","nodeType":"YulLiteral","src":"725:1:36","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"732:3:36","nodeType":"YulLiteral","src":"732:3:36","type":"","value":"224"},{"kind":"number","nativeSrc":"737:10:36","nodeType":"YulLiteral","src":"737:10:36","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"728:3:36","nodeType":"YulIdentifier","src":"728:3:36"},"nativeSrc":"728:20:36","nodeType":"YulFunctionCall","src":"728:20:36"}],"functionName":{"name":"mstore","nativeSrc":"718:6:36","nodeType":"YulIdentifier","src":"718:6:36"},"nativeSrc":"718:31:36","nodeType":"YulFunctionCall","src":"718:31:36"},"nativeSrc":"718:31:36","nodeType":"YulExpressionStatement","src":"718:31:36"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"769:1:36","nodeType":"YulLiteral","src":"769:1:36","type":"","value":"4"},{"kind":"number","nativeSrc":"772:4:36","nodeType":"YulLiteral","src":"772:4:36","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"762:6:36","nodeType":"YulIdentifier","src":"762:6:36"},"nativeSrc":"762:15:36","nodeType":"YulFunctionCall","src":"762:15:36"},"nativeSrc":"762:15:36","nodeType":"YulExpressionStatement","src":"762:15:36"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"797:1:36","nodeType":"YulLiteral","src":"797:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"800:4:36","nodeType":"YulLiteral","src":"800:4:36","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"790:6:36","nodeType":"YulIdentifier","src":"790:6:36"},"nativeSrc":"790:15:36","nodeType":"YulFunctionCall","src":"790:15:36"},"nativeSrc":"790:15:36","nodeType":"YulExpressionStatement","src":"790:15:36"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"660:18:36","nodeType":"YulIdentifier","src":"660:18:36"},{"arguments":[{"name":"length","nativeSrc":"683:6:36","nodeType":"YulIdentifier","src":"683:6:36"},{"kind":"number","nativeSrc":"691:2:36","nodeType":"YulLiteral","src":"691:2:36","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"680:2:36","nodeType":"YulIdentifier","src":"680:2:36"},"nativeSrc":"680:14:36","nodeType":"YulFunctionCall","src":"680:14:36"}],"functionName":{"name":"eq","nativeSrc":"657:2:36","nodeType":"YulIdentifier","src":"657:2:36"},"nativeSrc":"657:38:36","nodeType":"YulFunctionCall","src":"657:38:36"},"nativeSrc":"654:161:36","nodeType":"YulIf","src":"654:161:36"}]},"name":"extract_byte_array_length","nativeSrc":"441:380:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"476:4:36","nodeType":"YulTypedName","src":"476:4:36","type":""}],"returnVariables":[{"name":"length","nativeSrc":"485:6:36","nodeType":"YulTypedName","src":"485:6:36","type":""}],"src":"441:380:36"},{"body":{"nativeSrc":"882:65:36","nodeType":"YulBlock","src":"882:65:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"899:1:36","nodeType":"YulLiteral","src":"899:1:36","type":"","value":"0"},{"name":"ptr","nativeSrc":"902:3:36","nodeType":"YulIdentifier","src":"902:3:36"}],"functionName":{"name":"mstore","nativeSrc":"892:6:36","nodeType":"YulIdentifier","src":"892:6:36"},"nativeSrc":"892:14:36","nodeType":"YulFunctionCall","src":"892:14:36"},"nativeSrc":"892:14:36","nodeType":"YulExpressionStatement","src":"892:14:36"},{"nativeSrc":"915:26:36","nodeType":"YulAssignment","src":"915:26:36","value":{"arguments":[{"kind":"number","nativeSrc":"933:1:36","nodeType":"YulLiteral","src":"933:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"936:4:36","nodeType":"YulLiteral","src":"936:4:36","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"923:9:36","nodeType":"YulIdentifier","src":"923:9:36"},"nativeSrc":"923:18:36","nodeType":"YulFunctionCall","src":"923:18:36"},"variableNames":[{"name":"data","nativeSrc":"915:4:36","nodeType":"YulIdentifier","src":"915:4:36"}]}]},"name":"array_dataslot_string_storage","nativeSrc":"826:121:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"865:3:36","nodeType":"YulTypedName","src":"865:3:36","type":""}],"returnVariables":[{"name":"data","nativeSrc":"873:4:36","nodeType":"YulTypedName","src":"873:4:36","type":""}],"src":"826:121:36"},{"body":{"nativeSrc":"1033:437:36","nodeType":"YulBlock","src":"1033:437:36","statements":[{"body":{"nativeSrc":"1066:398:36","nodeType":"YulBlock","src":"1066:398:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1087:1:36","nodeType":"YulLiteral","src":"1087:1:36","type":"","value":"0"},{"name":"array","nativeSrc":"1090:5:36","nodeType":"YulIdentifier","src":"1090:5:36"}],"functionName":{"name":"mstore","nativeSrc":"1080:6:36","nodeType":"YulIdentifier","src":"1080:6:36"},"nativeSrc":"1080:16:36","nodeType":"YulFunctionCall","src":"1080:16:36"},"nativeSrc":"1080:16:36","nodeType":"YulExpressionStatement","src":"1080:16:36"},{"nativeSrc":"1109:30:36","nodeType":"YulVariableDeclaration","src":"1109:30:36","value":{"arguments":[{"kind":"number","nativeSrc":"1131:1:36","nodeType":"YulLiteral","src":"1131:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"1134:4:36","nodeType":"YulLiteral","src":"1134:4:36","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"1121:9:36","nodeType":"YulIdentifier","src":"1121:9:36"},"nativeSrc":"1121:18:36","nodeType":"YulFunctionCall","src":"1121:18:36"},"variables":[{"name":"data","nativeSrc":"1113:4:36","nodeType":"YulTypedName","src":"1113:4:36","type":""}]},{"nativeSrc":"1152:57:36","nodeType":"YulVariableDeclaration","src":"1152:57:36","value":{"arguments":[{"name":"data","nativeSrc":"1175:4:36","nodeType":"YulIdentifier","src":"1175:4:36"},{"arguments":[{"kind":"number","nativeSrc":"1185:1:36","nodeType":"YulLiteral","src":"1185:1:36","type":"","value":"5"},{"arguments":[{"name":"startIndex","nativeSrc":"1192:10:36","nodeType":"YulIdentifier","src":"1192:10:36"},{"kind":"number","nativeSrc":"1204:2:36","nodeType":"YulLiteral","src":"1204:2:36","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1188:3:36","nodeType":"YulIdentifier","src":"1188:3:36"},"nativeSrc":"1188:19:36","nodeType":"YulFunctionCall","src":"1188:19:36"}],"functionName":{"name":"shr","nativeSrc":"1181:3:36","nodeType":"YulIdentifier","src":"1181:3:36"},"nativeSrc":"1181:27:36","nodeType":"YulFunctionCall","src":"1181:27:36"}],"functionName":{"name":"add","nativeSrc":"1171:3:36","nodeType":"YulIdentifier","src":"1171:3:36"},"nativeSrc":"1171:38:36","nodeType":"YulFunctionCall","src":"1171:38:36"},"variables":[{"name":"deleteStart","nativeSrc":"1156:11:36","nodeType":"YulTypedName","src":"1156:11:36","type":""}]},{"body":{"nativeSrc":"1246:23:36","nodeType":"YulBlock","src":"1246:23:36","statements":[{"nativeSrc":"1248:19:36","nodeType":"YulAssignment","src":"1248:19:36","value":{"name":"data","nativeSrc":"1263:4:36","nodeType":"YulIdentifier","src":"1263:4:36"},"variableNames":[{"name":"deleteStart","nativeSrc":"1248:11:36","nodeType":"YulIdentifier","src":"1248:11:36"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"1228:10:36","nodeType":"YulIdentifier","src":"1228:10:36"},{"kind":"number","nativeSrc":"1240:4:36","nodeType":"YulLiteral","src":"1240:4:36","type":"","value":"0x20"}],"functionName":{"name":"lt","nativeSrc":"1225:2:36","nodeType":"YulIdentifier","src":"1225:2:36"},"nativeSrc":"1225:20:36","nodeType":"YulFunctionCall","src":"1225:20:36"},"nativeSrc":"1222:47:36","nodeType":"YulIf","src":"1222:47:36"},{"nativeSrc":"1282:41:36","nodeType":"YulVariableDeclaration","src":"1282:41:36","value":{"arguments":[{"name":"data","nativeSrc":"1296:4:36","nodeType":"YulIdentifier","src":"1296:4:36"},{"arguments":[{"kind":"number","nativeSrc":"1306:1:36","nodeType":"YulLiteral","src":"1306:1:36","type":"","value":"5"},{"arguments":[{"name":"len","nativeSrc":"1313:3:36","nodeType":"YulIdentifier","src":"1313:3:36"},{"kind":"number","nativeSrc":"1318:2:36","nodeType":"YulLiteral","src":"1318:2:36","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1309:3:36","nodeType":"YulIdentifier","src":"1309:3:36"},"nativeSrc":"1309:12:36","nodeType":"YulFunctionCall","src":"1309:12:36"}],"functionName":{"name":"shr","nativeSrc":"1302:3:36","nodeType":"YulIdentifier","src":"1302:3:36"},"nativeSrc":"1302:20:36","nodeType":"YulFunctionCall","src":"1302:20:36"}],"functionName":{"name":"add","nativeSrc":"1292:3:36","nodeType":"YulIdentifier","src":"1292:3:36"},"nativeSrc":"1292:31:36","nodeType":"YulFunctionCall","src":"1292:31:36"},"variables":[{"name":"_1","nativeSrc":"1286:2:36","nodeType":"YulTypedName","src":"1286:2:36","type":""}]},{"nativeSrc":"1336:24:36","nodeType":"YulVariableDeclaration","src":"1336:24:36","value":{"name":"deleteStart","nativeSrc":"1349:11:36","nodeType":"YulIdentifier","src":"1349:11:36"},"variables":[{"name":"start","nativeSrc":"1340:5:36","nodeType":"YulTypedName","src":"1340:5:36","type":""}]},{"body":{"nativeSrc":"1434:20:36","nodeType":"YulBlock","src":"1434:20:36","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"1443:5:36","nodeType":"YulIdentifier","src":"1443:5:36"},{"kind":"number","nativeSrc":"1450:1:36","nodeType":"YulLiteral","src":"1450:1:36","type":"","value":"0"}],"functionName":{"name":"sstore","nativeSrc":"1436:6:36","nodeType":"YulIdentifier","src":"1436:6:36"},"nativeSrc":"1436:16:36","nodeType":"YulFunctionCall","src":"1436:16:36"},"nativeSrc":"1436:16:36","nodeType":"YulExpressionStatement","src":"1436:16:36"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"1384:5:36","nodeType":"YulIdentifier","src":"1384:5:36"},{"name":"_1","nativeSrc":"1391:2:36","nodeType":"YulIdentifier","src":"1391:2:36"}],"functionName":{"name":"lt","nativeSrc":"1381:2:36","nodeType":"YulIdentifier","src":"1381:2:36"},"nativeSrc":"1381:13:36","nodeType":"YulFunctionCall","src":"1381:13:36"},"nativeSrc":"1373:81:36","nodeType":"YulForLoop","post":{"nativeSrc":"1395:26:36","nodeType":"YulBlock","src":"1395:26:36","statements":[{"nativeSrc":"1397:22:36","nodeType":"YulAssignment","src":"1397:22:36","value":{"arguments":[{"name":"start","nativeSrc":"1410:5:36","nodeType":"YulIdentifier","src":"1410:5:36"},{"kind":"number","nativeSrc":"1417:1:36","nodeType":"YulLiteral","src":"1417:1:36","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"1406:3:36","nodeType":"YulIdentifier","src":"1406:3:36"},"nativeSrc":"1406:13:36","nodeType":"YulFunctionCall","src":"1406:13:36"},"variableNames":[{"name":"start","nativeSrc":"1397:5:36","nodeType":"YulIdentifier","src":"1397:5:36"}]}]},"pre":{"nativeSrc":"1377:3:36","nodeType":"YulBlock","src":"1377:3:36","statements":[]},"src":"1373:81:36"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"1049:3:36","nodeType":"YulIdentifier","src":"1049:3:36"},{"kind":"number","nativeSrc":"1054:2:36","nodeType":"YulLiteral","src":"1054:2:36","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"1046:2:36","nodeType":"YulIdentifier","src":"1046:2:36"},"nativeSrc":"1046:11:36","nodeType":"YulFunctionCall","src":"1046:11:36"},"nativeSrc":"1043:421:36","nodeType":"YulIf","src":"1043:421:36"}]},"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"952:518:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"1005:5:36","nodeType":"YulTypedName","src":"1005:5:36","type":""},{"name":"len","nativeSrc":"1012:3:36","nodeType":"YulTypedName","src":"1012:3:36","type":""},{"name":"startIndex","nativeSrc":"1017:10:36","nodeType":"YulTypedName","src":"1017:10:36","type":""}],"src":"952:518:36"},{"body":{"nativeSrc":"1560:81:36","nodeType":"YulBlock","src":"1560:81:36","statements":[{"nativeSrc":"1570:65:36","nodeType":"YulAssignment","src":"1570:65:36","value":{"arguments":[{"arguments":[{"name":"data","nativeSrc":"1585:4:36","nodeType":"YulIdentifier","src":"1585:4:36"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1603:1:36","nodeType":"YulLiteral","src":"1603:1:36","type":"","value":"3"},{"name":"len","nativeSrc":"1606:3:36","nodeType":"YulIdentifier","src":"1606:3:36"}],"functionName":{"name":"shl","nativeSrc":"1599:3:36","nodeType":"YulIdentifier","src":"1599:3:36"},"nativeSrc":"1599:11:36","nodeType":"YulFunctionCall","src":"1599:11:36"},{"arguments":[{"kind":"number","nativeSrc":"1616:1:36","nodeType":"YulLiteral","src":"1616:1:36","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"1612:3:36","nodeType":"YulIdentifier","src":"1612:3:36"},"nativeSrc":"1612:6:36","nodeType":"YulFunctionCall","src":"1612:6:36"}],"functionName":{"name":"shr","nativeSrc":"1595:3:36","nodeType":"YulIdentifier","src":"1595:3:36"},"nativeSrc":"1595:24:36","nodeType":"YulFunctionCall","src":"1595:24:36"}],"functionName":{"name":"not","nativeSrc":"1591:3:36","nodeType":"YulIdentifier","src":"1591:3:36"},"nativeSrc":"1591:29:36","nodeType":"YulFunctionCall","src":"1591:29:36"}],"functionName":{"name":"and","nativeSrc":"1581:3:36","nodeType":"YulIdentifier","src":"1581:3:36"},"nativeSrc":"1581:40:36","nodeType":"YulFunctionCall","src":"1581:40:36"},{"arguments":[{"kind":"number","nativeSrc":"1627:1:36","nodeType":"YulLiteral","src":"1627:1:36","type":"","value":"1"},{"name":"len","nativeSrc":"1630:3:36","nodeType":"YulIdentifier","src":"1630:3:36"}],"functionName":{"name":"shl","nativeSrc":"1623:3:36","nodeType":"YulIdentifier","src":"1623:3:36"},"nativeSrc":"1623:11:36","nodeType":"YulFunctionCall","src":"1623:11:36"}],"functionName":{"name":"or","nativeSrc":"1578:2:36","nodeType":"YulIdentifier","src":"1578:2:36"},"nativeSrc":"1578:57:36","nodeType":"YulFunctionCall","src":"1578:57:36"},"variableNames":[{"name":"used","nativeSrc":"1570:4:36","nodeType":"YulIdentifier","src":"1570:4:36"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"1475:166:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"1537:4:36","nodeType":"YulTypedName","src":"1537:4:36","type":""},{"name":"len","nativeSrc":"1543:3:36","nodeType":"YulTypedName","src":"1543:3:36","type":""}],"returnVariables":[{"name":"used","nativeSrc":"1551:4:36","nodeType":"YulTypedName","src":"1551:4:36","type":""}],"src":"1475:166:36"},{"body":{"nativeSrc":"1742:1203:36","nodeType":"YulBlock","src":"1742:1203:36","statements":[{"nativeSrc":"1752:24:36","nodeType":"YulVariableDeclaration","src":"1752:24:36","value":{"arguments":[{"name":"src","nativeSrc":"1772:3:36","nodeType":"YulIdentifier","src":"1772:3:36"}],"functionName":{"name":"mload","nativeSrc":"1766:5:36","nodeType":"YulIdentifier","src":"1766:5:36"},"nativeSrc":"1766:10:36","nodeType":"YulFunctionCall","src":"1766:10:36"},"variables":[{"name":"newLen","nativeSrc":"1756:6:36","nodeType":"YulTypedName","src":"1756:6:36","type":""}]},{"body":{"nativeSrc":"1819:22:36","nodeType":"YulBlock","src":"1819:22:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"1821:16:36","nodeType":"YulIdentifier","src":"1821:16:36"},"nativeSrc":"1821:18:36","nodeType":"YulFunctionCall","src":"1821:18:36"},"nativeSrc":"1821:18:36","nodeType":"YulExpressionStatement","src":"1821:18:36"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"1791:6:36","nodeType":"YulIdentifier","src":"1791:6:36"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1807:2:36","nodeType":"YulLiteral","src":"1807:2:36","type":"","value":"64"},{"kind":"number","nativeSrc":"1811:1:36","nodeType":"YulLiteral","src":"1811:1:36","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1803:3:36","nodeType":"YulIdentifier","src":"1803:3:36"},"nativeSrc":"1803:10:36","nodeType":"YulFunctionCall","src":"1803:10:36"},{"kind":"number","nativeSrc":"1815:1:36","nodeType":"YulLiteral","src":"1815:1:36","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1799:3:36","nodeType":"YulIdentifier","src":"1799:3:36"},"nativeSrc":"1799:18:36","nodeType":"YulFunctionCall","src":"1799:18:36"}],"functionName":{"name":"gt","nativeSrc":"1788:2:36","nodeType":"YulIdentifier","src":"1788:2:36"},"nativeSrc":"1788:30:36","nodeType":"YulFunctionCall","src":"1788:30:36"},"nativeSrc":"1785:56:36","nodeType":"YulIf","src":"1785:56:36"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"1894:4:36","nodeType":"YulIdentifier","src":"1894:4:36"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"1932:4:36","nodeType":"YulIdentifier","src":"1932:4:36"}],"functionName":{"name":"sload","nativeSrc":"1926:5:36","nodeType":"YulIdentifier","src":"1926:5:36"},"nativeSrc":"1926:11:36","nodeType":"YulFunctionCall","src":"1926:11:36"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"1900:25:36","nodeType":"YulIdentifier","src":"1900:25:36"},"nativeSrc":"1900:38:36","nodeType":"YulFunctionCall","src":"1900:38:36"},{"name":"newLen","nativeSrc":"1940:6:36","nodeType":"YulIdentifier","src":"1940:6:36"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"1850:43:36","nodeType":"YulIdentifier","src":"1850:43:36"},"nativeSrc":"1850:97:36","nodeType":"YulFunctionCall","src":"1850:97:36"},"nativeSrc":"1850:97:36","nodeType":"YulExpressionStatement","src":"1850:97:36"},{"nativeSrc":"1956:18:36","nodeType":"YulVariableDeclaration","src":"1956:18:36","value":{"kind":"number","nativeSrc":"1973:1:36","nodeType":"YulLiteral","src":"1973:1:36","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"1960:9:36","nodeType":"YulTypedName","src":"1960:9:36","type":""}]},{"nativeSrc":"1983:17:36","nodeType":"YulAssignment","src":"1983:17:36","value":{"kind":"number","nativeSrc":"1996:4:36","nodeType":"YulLiteral","src":"1996:4:36","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"1983:9:36","nodeType":"YulIdentifier","src":"1983:9:36"}]},{"cases":[{"body":{"nativeSrc":"2046:642:36","nodeType":"YulBlock","src":"2046:642:36","statements":[{"nativeSrc":"2060:35:36","nodeType":"YulVariableDeclaration","src":"2060:35:36","value":{"arguments":[{"name":"newLen","nativeSrc":"2079:6:36","nodeType":"YulIdentifier","src":"2079:6:36"},{"arguments":[{"kind":"number","nativeSrc":"2091:2:36","nodeType":"YulLiteral","src":"2091:2:36","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"2087:3:36","nodeType":"YulIdentifier","src":"2087:3:36"},"nativeSrc":"2087:7:36","nodeType":"YulFunctionCall","src":"2087:7:36"}],"functionName":{"name":"and","nativeSrc":"2075:3:36","nodeType":"YulIdentifier","src":"2075:3:36"},"nativeSrc":"2075:20:36","nodeType":"YulFunctionCall","src":"2075:20:36"},"variables":[{"name":"loopEnd","nativeSrc":"2064:7:36","nodeType":"YulTypedName","src":"2064:7:36","type":""}]},{"nativeSrc":"2108:49:36","nodeType":"YulVariableDeclaration","src":"2108:49:36","value":{"arguments":[{"name":"slot","nativeSrc":"2152:4:36","nodeType":"YulIdentifier","src":"2152:4:36"}],"functionName":{"name":"array_dataslot_string_storage","nativeSrc":"2122:29:36","nodeType":"YulIdentifier","src":"2122:29:36"},"nativeSrc":"2122:35:36","nodeType":"YulFunctionCall","src":"2122:35:36"},"variables":[{"name":"dstPtr","nativeSrc":"2112:6:36","nodeType":"YulTypedName","src":"2112:6:36","type":""}]},{"nativeSrc":"2170:10:36","nodeType":"YulVariableDeclaration","src":"2170:10:36","value":{"kind":"number","nativeSrc":"2179:1:36","nodeType":"YulLiteral","src":"2179:1:36","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"2174:1:36","nodeType":"YulTypedName","src":"2174:1:36","type":""}]},{"body":{"nativeSrc":"2250:165:36","nodeType":"YulBlock","src":"2250:165:36","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"2275:6:36","nodeType":"YulIdentifier","src":"2275:6:36"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2293:3:36","nodeType":"YulIdentifier","src":"2293:3:36"},{"name":"srcOffset","nativeSrc":"2298:9:36","nodeType":"YulIdentifier","src":"2298:9:36"}],"functionName":{"name":"add","nativeSrc":"2289:3:36","nodeType":"YulIdentifier","src":"2289:3:36"},"nativeSrc":"2289:19:36","nodeType":"YulFunctionCall","src":"2289:19:36"}],"functionName":{"name":"mload","nativeSrc":"2283:5:36","nodeType":"YulIdentifier","src":"2283:5:36"},"nativeSrc":"2283:26:36","nodeType":"YulFunctionCall","src":"2283:26:36"}],"functionName":{"name":"sstore","nativeSrc":"2268:6:36","nodeType":"YulIdentifier","src":"2268:6:36"},"nativeSrc":"2268:42:36","nodeType":"YulFunctionCall","src":"2268:42:36"},"nativeSrc":"2268:42:36","nodeType":"YulExpressionStatement","src":"2268:42:36"},{"nativeSrc":"2327:24:36","nodeType":"YulAssignment","src":"2327:24:36","value":{"arguments":[{"name":"dstPtr","nativeSrc":"2341:6:36","nodeType":"YulIdentifier","src":"2341:6:36"},{"kind":"number","nativeSrc":"2349:1:36","nodeType":"YulLiteral","src":"2349:1:36","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"2337:3:36","nodeType":"YulIdentifier","src":"2337:3:36"},"nativeSrc":"2337:14:36","nodeType":"YulFunctionCall","src":"2337:14:36"},"variableNames":[{"name":"dstPtr","nativeSrc":"2327:6:36","nodeType":"YulIdentifier","src":"2327:6:36"}]},{"nativeSrc":"2368:33:36","nodeType":"YulAssignment","src":"2368:33:36","value":{"arguments":[{"name":"srcOffset","nativeSrc":"2385:9:36","nodeType":"YulIdentifier","src":"2385:9:36"},{"kind":"number","nativeSrc":"2396:4:36","nodeType":"YulLiteral","src":"2396:4:36","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2381:3:36","nodeType":"YulIdentifier","src":"2381:3:36"},"nativeSrc":"2381:20:36","nodeType":"YulFunctionCall","src":"2381:20:36"},"variableNames":[{"name":"srcOffset","nativeSrc":"2368:9:36","nodeType":"YulIdentifier","src":"2368:9:36"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"2204:1:36","nodeType":"YulIdentifier","src":"2204:1:36"},{"name":"loopEnd","nativeSrc":"2207:7:36","nodeType":"YulIdentifier","src":"2207:7:36"}],"functionName":{"name":"lt","nativeSrc":"2201:2:36","nodeType":"YulIdentifier","src":"2201:2:36"},"nativeSrc":"2201:14:36","nodeType":"YulFunctionCall","src":"2201:14:36"},"nativeSrc":"2193:222:36","nodeType":"YulForLoop","post":{"nativeSrc":"2216:21:36","nodeType":"YulBlock","src":"2216:21:36","statements":[{"nativeSrc":"2218:17:36","nodeType":"YulAssignment","src":"2218:17:36","value":{"arguments":[{"name":"i","nativeSrc":"2227:1:36","nodeType":"YulIdentifier","src":"2227:1:36"},{"kind":"number","nativeSrc":"2230:4:36","nodeType":"YulLiteral","src":"2230:4:36","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2223:3:36","nodeType":"YulIdentifier","src":"2223:3:36"},"nativeSrc":"2223:12:36","nodeType":"YulFunctionCall","src":"2223:12:36"},"variableNames":[{"name":"i","nativeSrc":"2218:1:36","nodeType":"YulIdentifier","src":"2218:1:36"}]}]},"pre":{"nativeSrc":"2197:3:36","nodeType":"YulBlock","src":"2197:3:36","statements":[]},"src":"2193:222:36"},{"body":{"nativeSrc":"2463:166:36","nodeType":"YulBlock","src":"2463:166:36","statements":[{"nativeSrc":"2481:43:36","nodeType":"YulVariableDeclaration","src":"2481:43:36","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2508:3:36","nodeType":"YulIdentifier","src":"2508:3:36"},{"name":"srcOffset","nativeSrc":"2513:9:36","nodeType":"YulIdentifier","src":"2513:9:36"}],"functionName":{"name":"add","nativeSrc":"2504:3:36","nodeType":"YulIdentifier","src":"2504:3:36"},"nativeSrc":"2504:19:36","nodeType":"YulFunctionCall","src":"2504:19:36"}],"functionName":{"name":"mload","nativeSrc":"2498:5:36","nodeType":"YulIdentifier","src":"2498:5:36"},"nativeSrc":"2498:26:36","nodeType":"YulFunctionCall","src":"2498:26:36"},"variables":[{"name":"lastValue","nativeSrc":"2485:9:36","nodeType":"YulTypedName","src":"2485:9:36","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"2548:6:36","nodeType":"YulIdentifier","src":"2548:6:36"},{"arguments":[{"name":"lastValue","nativeSrc":"2560:9:36","nodeType":"YulIdentifier","src":"2560:9:36"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2587:1:36","nodeType":"YulLiteral","src":"2587:1:36","type":"","value":"3"},{"name":"newLen","nativeSrc":"2590:6:36","nodeType":"YulIdentifier","src":"2590:6:36"}],"functionName":{"name":"shl","nativeSrc":"2583:3:36","nodeType":"YulIdentifier","src":"2583:3:36"},"nativeSrc":"2583:14:36","nodeType":"YulFunctionCall","src":"2583:14:36"},{"kind":"number","nativeSrc":"2599:3:36","nodeType":"YulLiteral","src":"2599:3:36","type":"","value":"248"}],"functionName":{"name":"and","nativeSrc":"2579:3:36","nodeType":"YulIdentifier","src":"2579:3:36"},"nativeSrc":"2579:24:36","nodeType":"YulFunctionCall","src":"2579:24:36"},{"arguments":[{"kind":"number","nativeSrc":"2609:1:36","nodeType":"YulLiteral","src":"2609:1:36","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"2605:3:36","nodeType":"YulIdentifier","src":"2605:3:36"},"nativeSrc":"2605:6:36","nodeType":"YulFunctionCall","src":"2605:6:36"}],"functionName":{"name":"shr","nativeSrc":"2575:3:36","nodeType":"YulIdentifier","src":"2575:3:36"},"nativeSrc":"2575:37:36","nodeType":"YulFunctionCall","src":"2575:37:36"}],"functionName":{"name":"not","nativeSrc":"2571:3:36","nodeType":"YulIdentifier","src":"2571:3:36"},"nativeSrc":"2571:42:36","nodeType":"YulFunctionCall","src":"2571:42:36"}],"functionName":{"name":"and","nativeSrc":"2556:3:36","nodeType":"YulIdentifier","src":"2556:3:36"},"nativeSrc":"2556:58:36","nodeType":"YulFunctionCall","src":"2556:58:36"}],"functionName":{"name":"sstore","nativeSrc":"2541:6:36","nodeType":"YulIdentifier","src":"2541:6:36"},"nativeSrc":"2541:74:36","nodeType":"YulFunctionCall","src":"2541:74:36"},"nativeSrc":"2541:74:36","nodeType":"YulExpressionStatement","src":"2541:74:36"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"2434:7:36","nodeType":"YulIdentifier","src":"2434:7:36"},{"name":"newLen","nativeSrc":"2443:6:36","nodeType":"YulIdentifier","src":"2443:6:36"}],"functionName":{"name":"lt","nativeSrc":"2431:2:36","nodeType":"YulIdentifier","src":"2431:2:36"},"nativeSrc":"2431:19:36","nodeType":"YulFunctionCall","src":"2431:19:36"},"nativeSrc":"2428:201:36","nodeType":"YulIf","src":"2428:201:36"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"2649:4:36","nodeType":"YulIdentifier","src":"2649:4:36"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2663:1:36","nodeType":"YulLiteral","src":"2663:1:36","type":"","value":"1"},{"name":"newLen","nativeSrc":"2666:6:36","nodeType":"YulIdentifier","src":"2666:6:36"}],"functionName":{"name":"shl","nativeSrc":"2659:3:36","nodeType":"YulIdentifier","src":"2659:3:36"},"nativeSrc":"2659:14:36","nodeType":"YulFunctionCall","src":"2659:14:36"},{"kind":"number","nativeSrc":"2675:1:36","nodeType":"YulLiteral","src":"2675:1:36","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"2655:3:36","nodeType":"YulIdentifier","src":"2655:3:36"},"nativeSrc":"2655:22:36","nodeType":"YulFunctionCall","src":"2655:22:36"}],"functionName":{"name":"sstore","nativeSrc":"2642:6:36","nodeType":"YulIdentifier","src":"2642:6:36"},"nativeSrc":"2642:36:36","nodeType":"YulFunctionCall","src":"2642:36:36"},"nativeSrc":"2642:36:36","nodeType":"YulExpressionStatement","src":"2642:36:36"}]},"nativeSrc":"2039:649:36","nodeType":"YulCase","src":"2039:649:36","value":{"kind":"number","nativeSrc":"2044:1:36","nodeType":"YulLiteral","src":"2044:1:36","type":"","value":"1"}},{"body":{"nativeSrc":"2705:234:36","nodeType":"YulBlock","src":"2705:234:36","statements":[{"nativeSrc":"2719:14:36","nodeType":"YulVariableDeclaration","src":"2719:14:36","value":{"kind":"number","nativeSrc":"2732:1:36","nodeType":"YulLiteral","src":"2732:1:36","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"2723:5:36","nodeType":"YulTypedName","src":"2723:5:36","type":""}]},{"body":{"nativeSrc":"2768:67:36","nodeType":"YulBlock","src":"2768:67:36","statements":[{"nativeSrc":"2786:35:36","nodeType":"YulAssignment","src":"2786:35:36","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2805:3:36","nodeType":"YulIdentifier","src":"2805:3:36"},{"name":"srcOffset","nativeSrc":"2810:9:36","nodeType":"YulIdentifier","src":"2810:9:36"}],"functionName":{"name":"add","nativeSrc":"2801:3:36","nodeType":"YulIdentifier","src":"2801:3:36"},"nativeSrc":"2801:19:36","nodeType":"YulFunctionCall","src":"2801:19:36"}],"functionName":{"name":"mload","nativeSrc":"2795:5:36","nodeType":"YulIdentifier","src":"2795:5:36"},"nativeSrc":"2795:26:36","nodeType":"YulFunctionCall","src":"2795:26:36"},"variableNames":[{"name":"value","nativeSrc":"2786:5:36","nodeType":"YulIdentifier","src":"2786:5:36"}]}]},"condition":{"name":"newLen","nativeSrc":"2749:6:36","nodeType":"YulIdentifier","src":"2749:6:36"},"nativeSrc":"2746:89:36","nodeType":"YulIf","src":"2746:89:36"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"2855:4:36","nodeType":"YulIdentifier","src":"2855:4:36"},{"arguments":[{"name":"value","nativeSrc":"2914:5:36","nodeType":"YulIdentifier","src":"2914:5:36"},{"name":"newLen","nativeSrc":"2921:6:36","nodeType":"YulIdentifier","src":"2921:6:36"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"2861:52:36","nodeType":"YulIdentifier","src":"2861:52:36"},"nativeSrc":"2861:67:36","nodeType":"YulFunctionCall","src":"2861:67:36"}],"functionName":{"name":"sstore","nativeSrc":"2848:6:36","nodeType":"YulIdentifier","src":"2848:6:36"},"nativeSrc":"2848:81:36","nodeType":"YulFunctionCall","src":"2848:81:36"},"nativeSrc":"2848:81:36","nodeType":"YulExpressionStatement","src":"2848:81:36"}]},"nativeSrc":"2697:242:36","nodeType":"YulCase","src":"2697:242:36","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"2019:6:36","nodeType":"YulIdentifier","src":"2019:6:36"},{"kind":"number","nativeSrc":"2027:2:36","nodeType":"YulLiteral","src":"2027:2:36","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"2016:2:36","nodeType":"YulIdentifier","src":"2016:2:36"},"nativeSrc":"2016:14:36","nodeType":"YulFunctionCall","src":"2016:14:36"},"nativeSrc":"2009:930:36","nodeType":"YulSwitch","src":"2009:930:36"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"1646:1299:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"1727:4:36","nodeType":"YulTypedName","src":"1727:4:36","type":""},{"name":"src","nativeSrc":"1733:3:36","nodeType":"YulTypedName","src":"1733:3:36","type":""}],"src":"1646:1299:36"},{"body":{"nativeSrc":"3051:102:36","nodeType":"YulBlock","src":"3051:102:36","statements":[{"nativeSrc":"3061:26:36","nodeType":"YulAssignment","src":"3061:26:36","value":{"arguments":[{"name":"headStart","nativeSrc":"3073:9:36","nodeType":"YulIdentifier","src":"3073:9:36"},{"kind":"number","nativeSrc":"3084:2:36","nodeType":"YulLiteral","src":"3084:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3069:3:36","nodeType":"YulIdentifier","src":"3069:3:36"},"nativeSrc":"3069:18:36","nodeType":"YulFunctionCall","src":"3069:18:36"},"variableNames":[{"name":"tail","nativeSrc":"3061:4:36","nodeType":"YulIdentifier","src":"3061:4:36"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3103:9:36","nodeType":"YulIdentifier","src":"3103:9:36"},{"arguments":[{"name":"value0","nativeSrc":"3118:6:36","nodeType":"YulIdentifier","src":"3118:6:36"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3134:3:36","nodeType":"YulLiteral","src":"3134:3:36","type":"","value":"160"},{"kind":"number","nativeSrc":"3139:1:36","nodeType":"YulLiteral","src":"3139:1:36","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"3130:3:36","nodeType":"YulIdentifier","src":"3130:3:36"},"nativeSrc":"3130:11:36","nodeType":"YulFunctionCall","src":"3130:11:36"},{"kind":"number","nativeSrc":"3143:1:36","nodeType":"YulLiteral","src":"3143:1:36","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"3126:3:36","nodeType":"YulIdentifier","src":"3126:3:36"},"nativeSrc":"3126:19:36","nodeType":"YulFunctionCall","src":"3126:19:36"}],"functionName":{"name":"and","nativeSrc":"3114:3:36","nodeType":"YulIdentifier","src":"3114:3:36"},"nativeSrc":"3114:32:36","nodeType":"YulFunctionCall","src":"3114:32:36"}],"functionName":{"name":"mstore","nativeSrc":"3096:6:36","nodeType":"YulIdentifier","src":"3096:6:36"},"nativeSrc":"3096:51:36","nodeType":"YulFunctionCall","src":"3096:51:36"},"nativeSrc":"3096:51:36","nodeType":"YulExpressionStatement","src":"3096:51:36"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"2950:203:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3020:9:36","nodeType":"YulTypedName","src":"3020:9:36","type":""},{"name":"value0","nativeSrc":"3031:6:36","nodeType":"YulTypedName","src":"3031:6:36","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3042:4:36","nodeType":"YulTypedName","src":"3042:4:36","type":""}],"src":"2950:203:36"},{"body":{"nativeSrc":"3371:276:36","nodeType":"YulBlock","src":"3371:276:36","statements":[{"nativeSrc":"3381:27:36","nodeType":"YulAssignment","src":"3381:27:36","value":{"arguments":[{"name":"headStart","nativeSrc":"3393:9:36","nodeType":"YulIdentifier","src":"3393:9:36"},{"kind":"number","nativeSrc":"3404:3:36","nodeType":"YulLiteral","src":"3404:3:36","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"3389:3:36","nodeType":"YulIdentifier","src":"3389:3:36"},"nativeSrc":"3389:19:36","nodeType":"YulFunctionCall","src":"3389:19:36"},"variableNames":[{"name":"tail","nativeSrc":"3381:4:36","nodeType":"YulIdentifier","src":"3381:4:36"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3424:9:36","nodeType":"YulIdentifier","src":"3424:9:36"},{"name":"value0","nativeSrc":"3435:6:36","nodeType":"YulIdentifier","src":"3435:6:36"}],"functionName":{"name":"mstore","nativeSrc":"3417:6:36","nodeType":"YulIdentifier","src":"3417:6:36"},"nativeSrc":"3417:25:36","nodeType":"YulFunctionCall","src":"3417:25:36"},"nativeSrc":"3417:25:36","nodeType":"YulExpressionStatement","src":"3417:25:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3462:9:36","nodeType":"YulIdentifier","src":"3462:9:36"},{"kind":"number","nativeSrc":"3473:2:36","nodeType":"YulLiteral","src":"3473:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3458:3:36","nodeType":"YulIdentifier","src":"3458:3:36"},"nativeSrc":"3458:18:36","nodeType":"YulFunctionCall","src":"3458:18:36"},{"name":"value1","nativeSrc":"3478:6:36","nodeType":"YulIdentifier","src":"3478:6:36"}],"functionName":{"name":"mstore","nativeSrc":"3451:6:36","nodeType":"YulIdentifier","src":"3451:6:36"},"nativeSrc":"3451:34:36","nodeType":"YulFunctionCall","src":"3451:34:36"},"nativeSrc":"3451:34:36","nodeType":"YulExpressionStatement","src":"3451:34:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3505:9:36","nodeType":"YulIdentifier","src":"3505:9:36"},{"kind":"number","nativeSrc":"3516:2:36","nodeType":"YulLiteral","src":"3516:2:36","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3501:3:36","nodeType":"YulIdentifier","src":"3501:3:36"},"nativeSrc":"3501:18:36","nodeType":"YulFunctionCall","src":"3501:18:36"},{"name":"value2","nativeSrc":"3521:6:36","nodeType":"YulIdentifier","src":"3521:6:36"}],"functionName":{"name":"mstore","nativeSrc":"3494:6:36","nodeType":"YulIdentifier","src":"3494:6:36"},"nativeSrc":"3494:34:36","nodeType":"YulFunctionCall","src":"3494:34:36"},"nativeSrc":"3494:34:36","nodeType":"YulExpressionStatement","src":"3494:34:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3548:9:36","nodeType":"YulIdentifier","src":"3548:9:36"},{"kind":"number","nativeSrc":"3559:2:36","nodeType":"YulLiteral","src":"3559:2:36","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"3544:3:36","nodeType":"YulIdentifier","src":"3544:3:36"},"nativeSrc":"3544:18:36","nodeType":"YulFunctionCall","src":"3544:18:36"},{"name":"value3","nativeSrc":"3564:6:36","nodeType":"YulIdentifier","src":"3564:6:36"}],"functionName":{"name":"mstore","nativeSrc":"3537:6:36","nodeType":"YulIdentifier","src":"3537:6:36"},"nativeSrc":"3537:34:36","nodeType":"YulFunctionCall","src":"3537:34:36"},"nativeSrc":"3537:34:36","nodeType":"YulExpressionStatement","src":"3537:34:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3591:9:36","nodeType":"YulIdentifier","src":"3591:9:36"},{"kind":"number","nativeSrc":"3602:3:36","nodeType":"YulLiteral","src":"3602:3:36","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"3587:3:36","nodeType":"YulIdentifier","src":"3587:3:36"},"nativeSrc":"3587:19:36","nodeType":"YulFunctionCall","src":"3587:19:36"},{"arguments":[{"name":"value4","nativeSrc":"3612:6:36","nodeType":"YulIdentifier","src":"3612:6:36"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3628:3:36","nodeType":"YulLiteral","src":"3628:3:36","type":"","value":"160"},{"kind":"number","nativeSrc":"3633:1:36","nodeType":"YulLiteral","src":"3633:1:36","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"3624:3:36","nodeType":"YulIdentifier","src":"3624:3:36"},"nativeSrc":"3624:11:36","nodeType":"YulFunctionCall","src":"3624:11:36"},{"kind":"number","nativeSrc":"3637:1:36","nodeType":"YulLiteral","src":"3637:1:36","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"3620:3:36","nodeType":"YulIdentifier","src":"3620:3:36"},"nativeSrc":"3620:19:36","nodeType":"YulFunctionCall","src":"3620:19:36"}],"functionName":{"name":"and","nativeSrc":"3608:3:36","nodeType":"YulIdentifier","src":"3608:3:36"},"nativeSrc":"3608:32:36","nodeType":"YulFunctionCall","src":"3608:32:36"}],"functionName":{"name":"mstore","nativeSrc":"3580:6:36","nodeType":"YulIdentifier","src":"3580:6:36"},"nativeSrc":"3580:61:36","nodeType":"YulFunctionCall","src":"3580:61:36"},"nativeSrc":"3580:61:36","nodeType":"YulExpressionStatement","src":"3580:61:36"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nativeSrc":"3158:489:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3308:9:36","nodeType":"YulTypedName","src":"3308:9:36","type":""},{"name":"value4","nativeSrc":"3319:6:36","nodeType":"YulTypedName","src":"3319:6:36","type":""},{"name":"value3","nativeSrc":"3327:6:36","nodeType":"YulTypedName","src":"3327:6:36","type":""},{"name":"value2","nativeSrc":"3335:6:36","nodeType":"YulTypedName","src":"3335:6:36","type":""},{"name":"value1","nativeSrc":"3343:6:36","nodeType":"YulTypedName","src":"3343:6:36","type":""},{"name":"value0","nativeSrc":"3351:6:36","nodeType":"YulTypedName","src":"3351:6:36","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3362:4:36","nodeType":"YulTypedName","src":"3362:4:36","type":""}],"src":"3158:489:36"},{"body":{"nativeSrc":"3773:406:36","nodeType":"YulBlock","src":"3773:406:36","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3790:9:36","nodeType":"YulIdentifier","src":"3790:9:36"},{"kind":"number","nativeSrc":"3801:2:36","nodeType":"YulLiteral","src":"3801:2:36","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"3783:6:36","nodeType":"YulIdentifier","src":"3783:6:36"},"nativeSrc":"3783:21:36","nodeType":"YulFunctionCall","src":"3783:21:36"},"nativeSrc":"3783:21:36","nodeType":"YulExpressionStatement","src":"3783:21:36"},{"nativeSrc":"3813:27:36","nodeType":"YulVariableDeclaration","src":"3813:27:36","value":{"arguments":[{"name":"value0","nativeSrc":"3833:6:36","nodeType":"YulIdentifier","src":"3833:6:36"}],"functionName":{"name":"mload","nativeSrc":"3827:5:36","nodeType":"YulIdentifier","src":"3827:5:36"},"nativeSrc":"3827:13:36","nodeType":"YulFunctionCall","src":"3827:13:36"},"variables":[{"name":"length","nativeSrc":"3817:6:36","nodeType":"YulTypedName","src":"3817:6:36","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3860:9:36","nodeType":"YulIdentifier","src":"3860:9:36"},{"kind":"number","nativeSrc":"3871:2:36","nodeType":"YulLiteral","src":"3871:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3856:3:36","nodeType":"YulIdentifier","src":"3856:3:36"},"nativeSrc":"3856:18:36","nodeType":"YulFunctionCall","src":"3856:18:36"},{"name":"length","nativeSrc":"3876:6:36","nodeType":"YulIdentifier","src":"3876:6:36"}],"functionName":{"name":"mstore","nativeSrc":"3849:6:36","nodeType":"YulIdentifier","src":"3849:6:36"},"nativeSrc":"3849:34:36","nodeType":"YulFunctionCall","src":"3849:34:36"},"nativeSrc":"3849:34:36","nodeType":"YulExpressionStatement","src":"3849:34:36"},{"nativeSrc":"3892:10:36","nodeType":"YulVariableDeclaration","src":"3892:10:36","value":{"kind":"number","nativeSrc":"3901:1:36","nodeType":"YulLiteral","src":"3901:1:36","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"3896:1:36","nodeType":"YulTypedName","src":"3896:1:36","type":""}]},{"body":{"nativeSrc":"3961:90:36","nodeType":"YulBlock","src":"3961:90:36","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3990:9:36","nodeType":"YulIdentifier","src":"3990:9:36"},{"name":"i","nativeSrc":"4001:1:36","nodeType":"YulIdentifier","src":"4001:1:36"}],"functionName":{"name":"add","nativeSrc":"3986:3:36","nodeType":"YulIdentifier","src":"3986:3:36"},"nativeSrc":"3986:17:36","nodeType":"YulFunctionCall","src":"3986:17:36"},{"kind":"number","nativeSrc":"4005:2:36","nodeType":"YulLiteral","src":"4005:2:36","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3982:3:36","nodeType":"YulIdentifier","src":"3982:3:36"},"nativeSrc":"3982:26:36","nodeType":"YulFunctionCall","src":"3982:26:36"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"4024:6:36","nodeType":"YulIdentifier","src":"4024:6:36"},{"name":"i","nativeSrc":"4032:1:36","nodeType":"YulIdentifier","src":"4032:1:36"}],"functionName":{"name":"add","nativeSrc":"4020:3:36","nodeType":"YulIdentifier","src":"4020:3:36"},"nativeSrc":"4020:14:36","nodeType":"YulFunctionCall","src":"4020:14:36"},{"kind":"number","nativeSrc":"4036:2:36","nodeType":"YulLiteral","src":"4036:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4016:3:36","nodeType":"YulIdentifier","src":"4016:3:36"},"nativeSrc":"4016:23:36","nodeType":"YulFunctionCall","src":"4016:23:36"}],"functionName":{"name":"mload","nativeSrc":"4010:5:36","nodeType":"YulIdentifier","src":"4010:5:36"},"nativeSrc":"4010:30:36","nodeType":"YulFunctionCall","src":"4010:30:36"}],"functionName":{"name":"mstore","nativeSrc":"3975:6:36","nodeType":"YulIdentifier","src":"3975:6:36"},"nativeSrc":"3975:66:36","nodeType":"YulFunctionCall","src":"3975:66:36"},"nativeSrc":"3975:66:36","nodeType":"YulExpressionStatement","src":"3975:66:36"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"3922:1:36","nodeType":"YulIdentifier","src":"3922:1:36"},{"name":"length","nativeSrc":"3925:6:36","nodeType":"YulIdentifier","src":"3925:6:36"}],"functionName":{"name":"lt","nativeSrc":"3919:2:36","nodeType":"YulIdentifier","src":"3919:2:36"},"nativeSrc":"3919:13:36","nodeType":"YulFunctionCall","src":"3919:13:36"},"nativeSrc":"3911:140:36","nodeType":"YulForLoop","post":{"nativeSrc":"3933:19:36","nodeType":"YulBlock","src":"3933:19:36","statements":[{"nativeSrc":"3935:15:36","nodeType":"YulAssignment","src":"3935:15:36","value":{"arguments":[{"name":"i","nativeSrc":"3944:1:36","nodeType":"YulIdentifier","src":"3944:1:36"},{"kind":"number","nativeSrc":"3947:2:36","nodeType":"YulLiteral","src":"3947:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3940:3:36","nodeType":"YulIdentifier","src":"3940:3:36"},"nativeSrc":"3940:10:36","nodeType":"YulFunctionCall","src":"3940:10:36"},"variableNames":[{"name":"i","nativeSrc":"3935:1:36","nodeType":"YulIdentifier","src":"3935:1:36"}]}]},"pre":{"nativeSrc":"3915:3:36","nodeType":"YulBlock","src":"3915:3:36","statements":[]},"src":"3911:140:36"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4075:9:36","nodeType":"YulIdentifier","src":"4075:9:36"},{"name":"length","nativeSrc":"4086:6:36","nodeType":"YulIdentifier","src":"4086:6:36"}],"functionName":{"name":"add","nativeSrc":"4071:3:36","nodeType":"YulIdentifier","src":"4071:3:36"},"nativeSrc":"4071:22:36","nodeType":"YulFunctionCall","src":"4071:22:36"},{"kind":"number","nativeSrc":"4095:2:36","nodeType":"YulLiteral","src":"4095:2:36","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4067:3:36","nodeType":"YulIdentifier","src":"4067:3:36"},"nativeSrc":"4067:31:36","nodeType":"YulFunctionCall","src":"4067:31:36"},{"kind":"number","nativeSrc":"4100:1:36","nodeType":"YulLiteral","src":"4100:1:36","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"4060:6:36","nodeType":"YulIdentifier","src":"4060:6:36"},"nativeSrc":"4060:42:36","nodeType":"YulFunctionCall","src":"4060:42:36"},"nativeSrc":"4060:42:36","nodeType":"YulExpressionStatement","src":"4060:42:36"},{"nativeSrc":"4111:62:36","nodeType":"YulAssignment","src":"4111:62:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4127:9:36","nodeType":"YulIdentifier","src":"4127:9:36"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"4146:6:36","nodeType":"YulIdentifier","src":"4146:6:36"},{"kind":"number","nativeSrc":"4154:2:36","nodeType":"YulLiteral","src":"4154:2:36","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"4142:3:36","nodeType":"YulIdentifier","src":"4142:3:36"},"nativeSrc":"4142:15:36","nodeType":"YulFunctionCall","src":"4142:15:36"},{"arguments":[{"kind":"number","nativeSrc":"4163:2:36","nodeType":"YulLiteral","src":"4163:2:36","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"4159:3:36","nodeType":"YulIdentifier","src":"4159:3:36"},"nativeSrc":"4159:7:36","nodeType":"YulFunctionCall","src":"4159:7:36"}],"functionName":{"name":"and","nativeSrc":"4138:3:36","nodeType":"YulIdentifier","src":"4138:3:36"},"nativeSrc":"4138:29:36","nodeType":"YulFunctionCall","src":"4138:29:36"}],"functionName":{"name":"add","nativeSrc":"4123:3:36","nodeType":"YulIdentifier","src":"4123:3:36"},"nativeSrc":"4123:45:36","nodeType":"YulFunctionCall","src":"4123:45:36"},{"kind":"number","nativeSrc":"4170:2:36","nodeType":"YulLiteral","src":"4170:2:36","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4119:3:36","nodeType":"YulIdentifier","src":"4119:3:36"},"nativeSrc":"4119:54:36","nodeType":"YulFunctionCall","src":"4119:54:36"},"variableNames":[{"name":"tail","nativeSrc":"4111:4:36","nodeType":"YulIdentifier","src":"4111:4:36"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"3652:527:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3742:9:36","nodeType":"YulTypedName","src":"3742:9:36","type":""},{"name":"value0","nativeSrc":"3753:6:36","nodeType":"YulTypedName","src":"3753:6:36","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3764:4:36","nodeType":"YulTypedName","src":"3764:4:36","type":""}],"src":"3652:527:36"},{"body":{"nativeSrc":"4278:203:36","nodeType":"YulBlock","src":"4278:203:36","statements":[{"nativeSrc":"4288:26:36","nodeType":"YulVariableDeclaration","src":"4288:26:36","value":{"arguments":[{"name":"array","nativeSrc":"4308:5:36","nodeType":"YulIdentifier","src":"4308:5:36"}],"functionName":{"name":"mload","nativeSrc":"4302:5:36","nodeType":"YulIdentifier","src":"4302:5:36"},"nativeSrc":"4302:12:36","nodeType":"YulFunctionCall","src":"4302:12:36"},"variables":[{"name":"length","nativeSrc":"4292:6:36","nodeType":"YulTypedName","src":"4292:6:36","type":""}]},{"nativeSrc":"4323:32:36","nodeType":"YulAssignment","src":"4323:32:36","value":{"arguments":[{"arguments":[{"name":"array","nativeSrc":"4342:5:36","nodeType":"YulIdentifier","src":"4342:5:36"},{"kind":"number","nativeSrc":"4349:4:36","nodeType":"YulLiteral","src":"4349:4:36","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4338:3:36","nodeType":"YulIdentifier","src":"4338:3:36"},"nativeSrc":"4338:16:36","nodeType":"YulFunctionCall","src":"4338:16:36"}],"functionName":{"name":"mload","nativeSrc":"4332:5:36","nodeType":"YulIdentifier","src":"4332:5:36"},"nativeSrc":"4332:23:36","nodeType":"YulFunctionCall","src":"4332:23:36"},"variableNames":[{"name":"value","nativeSrc":"4323:5:36","nodeType":"YulIdentifier","src":"4323:5:36"}]},{"body":{"nativeSrc":"4392:83:36","nodeType":"YulBlock","src":"4392:83:36","statements":[{"nativeSrc":"4406:59:36","nodeType":"YulAssignment","src":"4406:59:36","value":{"arguments":[{"name":"value","nativeSrc":"4419:5:36","nodeType":"YulIdentifier","src":"4419:5:36"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4434:1:36","nodeType":"YulLiteral","src":"4434:1:36","type":"","value":"3"},{"arguments":[{"kind":"number","nativeSrc":"4441:4:36","nodeType":"YulLiteral","src":"4441:4:36","type":"","value":"0x20"},{"name":"length","nativeSrc":"4447:6:36","nodeType":"YulIdentifier","src":"4447:6:36"}],"functionName":{"name":"sub","nativeSrc":"4437:3:36","nodeType":"YulIdentifier","src":"4437:3:36"},"nativeSrc":"4437:17:36","nodeType":"YulFunctionCall","src":"4437:17:36"}],"functionName":{"name":"shl","nativeSrc":"4430:3:36","nodeType":"YulIdentifier","src":"4430:3:36"},"nativeSrc":"4430:25:36","nodeType":"YulFunctionCall","src":"4430:25:36"},{"arguments":[{"kind":"number","nativeSrc":"4461:1:36","nodeType":"YulLiteral","src":"4461:1:36","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"4457:3:36","nodeType":"YulIdentifier","src":"4457:3:36"},"nativeSrc":"4457:6:36","nodeType":"YulFunctionCall","src":"4457:6:36"}],"functionName":{"name":"shl","nativeSrc":"4426:3:36","nodeType":"YulIdentifier","src":"4426:3:36"},"nativeSrc":"4426:38:36","nodeType":"YulFunctionCall","src":"4426:38:36"}],"functionName":{"name":"and","nativeSrc":"4415:3:36","nodeType":"YulIdentifier","src":"4415:3:36"},"nativeSrc":"4415:50:36","nodeType":"YulFunctionCall","src":"4415:50:36"},"variableNames":[{"name":"value","nativeSrc":"4406:5:36","nodeType":"YulIdentifier","src":"4406:5:36"}]}]},"condition":{"arguments":[{"name":"length","nativeSrc":"4370:6:36","nodeType":"YulIdentifier","src":"4370:6:36"},{"kind":"number","nativeSrc":"4378:4:36","nodeType":"YulLiteral","src":"4378:4:36","type":"","value":"0x20"}],"functionName":{"name":"lt","nativeSrc":"4367:2:36","nodeType":"YulIdentifier","src":"4367:2:36"},"nativeSrc":"4367:16:36","nodeType":"YulFunctionCall","src":"4367:16:36"},"nativeSrc":"4364:111:36","nodeType":"YulIf","src":"4364:111:36"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32","nativeSrc":"4184:297:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"4258:5:36","nodeType":"YulTypedName","src":"4258:5:36","type":""}],"returnVariables":[{"name":"value","nativeSrc":"4268:5:36","nodeType":"YulTypedName","src":"4268:5:36","type":""}],"src":"4184:297:36"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), 32)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value\n    {\n        let length := mload(array)\n        value := mload(add(array, 0x20))\n        if lt(length, 0x20)\n        {\n            value := and(value, shl(shl(3, sub(0x20, length)), not(0)))\n        }\n    }\n}","id":36,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH2 0x160 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2236 CODESIZE SUB DUP1 PUSH2 0x2236 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x30 SWAP2 PUSH2 0x283 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0x4564754D657461 PUSH1 0xC8 SHL DUP2 MSTORE POP DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x31 PUSH1 0xF8 SHL DUP2 MSTORE POP DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0x4564754D657461 PUSH1 0xC8 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x115115 PUSH1 0xEA SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xB7 SWAP2 SWAP1 PUSH2 0x352 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0xC4 DUP3 DUP3 PUSH2 0x352 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xF6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFF DUP2 PUSH2 0x1B8 JUMP JUMPDEST POP PUSH2 0x10B DUP3 PUSH1 0x6 PUSH2 0x212 JUMP JUMPDEST PUSH2 0x120 MSTORE PUSH2 0x11A DUP2 PUSH1 0x7 PUSH2 0x212 JUMP JUMPDEST PUSH2 0x140 MSTORE DUP2 MLOAD PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0xE0 MSTORE DUP2 MLOAD SWAP1 DUP3 ADD KECCAK256 PUSH2 0x100 MSTORE CHAINID PUSH1 0xA0 MSTORE PUSH2 0x1A7 PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x80 MSTORE POP POP ADDRESS PUSH1 0xC0 MSTORE POP PUSH2 0x482 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH2 0x22E JUMPI PUSH2 0x227 DUP4 PUSH2 0x245 JUMP JUMPDEST SWAP1 POP PUSH2 0x23F JUMP JUMPDEST DUP2 PUSH2 0x239 DUP5 DUP3 PUSH2 0x352 JUMP JUMPDEST POP PUSH1 0xFF SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH2 0x270 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH4 0x305A27A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xED SWAP2 SWAP1 PUSH2 0x410 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x27B DUP3 PUSH2 0x45E JUMP JUMPDEST OR SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x295 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2DD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2FD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x34D JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x32A JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x34A JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x336 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x36B JUMPI PUSH2 0x36B PUSH2 0x2B3 JUMP JUMPDEST PUSH2 0x37F DUP2 PUSH2 0x379 DUP5 SLOAD PUSH2 0x2C9 JUMP JUMPDEST DUP5 PUSH2 0x303 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3B3 JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x39B JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x34A JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3E3 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x3C3 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x401 JUMPI DUP7 DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x43E JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD PUSH1 0x40 DUP7 DUP5 ADD ADD MSTORE ADD PUSH2 0x421 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x2FD JUMPI PUSH1 0x0 NOT PUSH1 0x20 SWAP2 SWAP1 SWAP2 SUB PUSH1 0x3 SHL SHL AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x1D5A PUSH2 0x4DC PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x1048 ADD MSTORE PUSH1 0x0 PUSH2 0x101B ADD MSTORE PUSH1 0x0 PUSH2 0xCEA ADD MSTORE PUSH1 0x0 PUSH2 0xCC2 ADD MSTORE PUSH1 0x0 PUSH2 0xC1D ADD MSTORE PUSH1 0x0 PUSH2 0xC47 ADD MSTORE PUSH1 0x0 PUSH2 0xC71 ADD MSTORE PUSH2 0x1D5A PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1F0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD8FBE994 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD8FBE994 EQ PUSH2 0x412 JUMPI DUP1 PUSH4 0xD9D98CE4 EQ PUSH2 0x425 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x438 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x471 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3C6 JUMPI DUP1 PUSH4 0xC1D34B89 EQ PUSH2 0x3D9 JUMPI DUP1 PUSH4 0xCAE9CA51 EQ PUSH2 0x3EC JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x3FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8456CB59 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x372 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x37A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x31B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x344 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x34C JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x35F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3644E515 GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x42966C68 GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2EA JUMPI DUP1 PUSH4 0x5CFFE9DE EQ PUSH2 0x2F5 JUMPI DUP1 PUSH4 0x613255AB EQ PUSH2 0x308 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3644E515 EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0x4000AEA0 EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0x3177029F EQ PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x1296EE62 EQ PUSH2 0x245 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x208 PUSH2 0x203 CALLDATASIZE PUSH1 0x4 PUSH2 0x171B JUMP JUMPDEST PUSH2 0x484 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x225 PUSH2 0x4BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x214 SWAP2 SWAP1 PUSH2 0x177E JUMP JUMPDEST PUSH2 0x208 PUSH2 0x240 CALLDATASIZE PUSH1 0x4 PUSH2 0x17A6 JUMP JUMPDEST PUSH2 0x54D JUMP JUMPDEST PUSH2 0x208 PUSH2 0x253 CALLDATASIZE PUSH1 0x4 PUSH2 0x17A6 JUMP JUMPDEST PUSH2 0x565 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x214 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x278 CALLDATASIZE PUSH1 0x4 PUSH2 0x17D2 JUMP JUMPDEST PUSH2 0x588 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x214 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x29A CALLDATASIZE PUSH1 0x4 PUSH2 0x17A6 JUMP JUMPDEST PUSH2 0x5AC JUMP JUMPDEST PUSH2 0x25C PUSH2 0x5C8 JUMP JUMPDEST PUSH2 0x2AF PUSH2 0x5D7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x208 PUSH2 0x2BF CALLDATASIZE PUSH1 0x4 PUSH2 0x18B8 JUMP JUMPDEST PUSH2 0x5E9 JUMP JUMPDEST PUSH2 0x2AF PUSH2 0x2D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x17A6 JUMP JUMPDEST PUSH2 0x636 JUMP JUMPDEST PUSH2 0x2AF PUSH2 0x2E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1911 JUMP JUMPDEST PUSH2 0x64C JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0x208 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x303 CALLDATASIZE PUSH1 0x4 PUSH2 0x192A JUMP JUMPDEST PUSH2 0x659 JUMP JUMPDEST PUSH2 0x25C PUSH2 0x316 CALLDATASIZE PUSH1 0x4 PUSH2 0x19CB JUMP JUMPDEST PUSH2 0x7D1 JUMP JUMPDEST PUSH2 0x25C PUSH2 0x329 CALLDATASIZE PUSH1 0x4 PUSH2 0x19CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2AF PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x2AF PUSH2 0x35A CALLDATASIZE PUSH1 0x4 PUSH2 0x17A6 JUMP JUMPDEST PUSH2 0x80B JUMP JUMPDEST PUSH2 0x25C PUSH2 0x36D CALLDATASIZE PUSH1 0x4 PUSH2 0x19CB JUMP JUMPDEST PUSH2 0x820 JUMP JUMPDEST PUSH2 0x2AF PUSH2 0x83E JUMP JUMPDEST PUSH2 0x382 PUSH2 0x84E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x214 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19E8 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x214 JUMP JUMPDEST PUSH2 0x225 PUSH2 0x894 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x3D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x17A6 JUMP JUMPDEST PUSH2 0x8A3 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x3E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A80 JUMP JUMPDEST PUSH2 0x8B1 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x3FA CALLDATASIZE PUSH1 0x4 PUSH2 0x18B8 JUMP JUMPDEST PUSH2 0x902 JUMP JUMPDEST PUSH2 0x2AF PUSH2 0x40D CALLDATASIZE PUSH1 0x4 PUSH2 0x1AEC JUMP JUMPDEST PUSH2 0x949 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x420 CALLDATASIZE PUSH1 0x4 PUSH2 0x17D2 JUMP JUMPDEST PUSH2 0xA83 JUMP JUMPDEST PUSH2 0x25C PUSH2 0x433 CALLDATASIZE PUSH1 0x4 PUSH2 0x17A6 JUMP JUMPDEST PUSH2 0xAA8 JUMP JUMPDEST PUSH2 0x25C PUSH2 0x446 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B63 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2AF PUSH2 0x47F CALLDATASIZE PUSH1 0x4 PUSH2 0x19CB JUMP JUMPDEST PUSH2 0xAE5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xB0202A11 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x4B5 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x4CA SWAP1 PUSH2 0x1B9C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4F6 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x543 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x518 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x543 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x526 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x55B DUP2 DUP6 DUP6 PUSH2 0xB20 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x581 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x5E9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x596 DUP6 DUP3 DUP6 PUSH2 0xB32 JUMP JUMPDEST PUSH2 0x5A1 DUP6 DUP6 DUP6 PUSH2 0xBB1 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x581 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x902 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5D2 PUSH2 0xC10 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5DF PUSH2 0xD3B JUMP JUMPDEST PUSH2 0x5E7 PUSH2 0xD6E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F5 DUP5 DUP5 PUSH2 0x8A3 JUMP JUMPDEST PUSH2 0x629 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118D81D7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x55B CALLER CALLER DUP7 DUP7 DUP7 PUSH2 0xDC0 JUMP JUMPDEST PUSH2 0x63E PUSH2 0xD3B JUMP JUMPDEST PUSH2 0x648 DUP3 DUP3 PUSH2 0xF11 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x656 CALLER DUP3 PUSH2 0xF47 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x665 DUP7 PUSH2 0x7D1 JUMP JUMPDEST SWAP1 POP DUP1 DUP6 GT ISZERO PUSH2 0x68B JUMPI PUSH1 0x40 MLOAD PUSH4 0xFD9A7609 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x620 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x697 DUP8 DUP8 PUSH2 0xAA8 JUMP JUMPDEST SWAP1 POP PUSH2 0x6A3 DUP9 DUP8 PUSH2 0xF11 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23E30C8B PUSH1 0xE0 SHL DUP2 MSTORE PUSH32 0x439148F0BBC682CA079E46D6E2C2F0C1E3B820F1A291B069D8882ABF8CF18DD9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP1 PUSH4 0x23E30C8B SWAP1 PUSH2 0x6FB SWAP1 CALLER SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP9 SWAP1 DUP14 SWAP1 DUP14 SWAP1 PUSH1 0x4 ADD PUSH2 0x1BD6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x71A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x73E SWAP2 SWAP1 PUSH2 0x1C2F JUMP JUMPDEST EQ PUSH2 0x766 JUMPI PUSH1 0x40 MLOAD PUSH3 0x678C5B PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x620 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77C DUP10 ADDRESS PUSH2 0x777 DUP6 DUP12 PUSH2 0x1C5E JUMP JUMPDEST PUSH2 0xB32 JUMP JUMPDEST DUP2 ISZERO DUP1 PUSH2 0x790 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO JUMPDEST ISZERO PUSH2 0x7AD JUMPI PUSH2 0x7A8 DUP10 PUSH2 0x7A3 DUP5 DUP11 PUSH2 0x1C5E JUMP JUMPDEST PUSH2 0xF47 JUMP JUMPDEST PUSH2 0x7C2 JUMP JUMPDEST PUSH2 0x7B7 DUP10 DUP9 PUSH2 0xF47 JUMP JUMPDEST PUSH2 0x7C2 DUP10 DUP3 DUP5 PUSH2 0xBB1 JUMP JUMPDEST POP PUSH1 0x1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ADDRESS EQ PUSH2 0x7EA JUMPI PUSH1 0x0 PUSH2 0x4B5 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x4B5 SWAP1 PUSH1 0x0 NOT PUSH2 0x1C71 JUMP JUMPDEST PUSH2 0x801 PUSH2 0xD3B JUMP JUMPDEST PUSH2 0x5E7 PUSH1 0x0 PUSH2 0xF7D JUMP JUMPDEST PUSH2 0x816 DUP3 CALLER DUP4 PUSH2 0xB32 JUMP JUMPDEST PUSH2 0x648 DUP3 DUP3 PUSH2 0xF47 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x4B5 JUMP JUMPDEST PUSH2 0x846 PUSH2 0xD3B JUMP JUMPDEST PUSH2 0x5E7 PUSH2 0xFD7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0x862 PUSH2 0x1014 JUMP JUMPDEST PUSH2 0x86A PUSH2 0x1041 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0xF PUSH1 0xF8 SHL SWAP12 SWAP4 SWAP11 POP SWAP2 SWAP9 POP CHAINID SWAP8 POP ADDRESS SWAP7 POP SWAP5 POP SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x4CA SWAP1 PUSH2 0x1B9C JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x55B DUP2 DUP6 DUP6 PUSH2 0xBB1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8BE DUP6 DUP6 DUP6 PUSH2 0x588 JUMP JUMPDEST PUSH2 0x8F5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5AB42AF3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x4 DUP4 ADD MSTORE DUP6 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x620 JUMP JUMPDEST PUSH2 0x5A1 CALLER DUP7 DUP7 DUP7 DUP7 PUSH2 0xDC0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x90E DUP5 DUP5 PUSH2 0x54D JUMP JUMPDEST PUSH2 0x93D JUMPI PUSH1 0x40 MLOAD PUSH4 0x14395571 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x620 JUMP JUMPDEST PUSH2 0x55B CALLER DUP6 DUP6 DUP6 PUSH2 0x106E JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x96D JUMPI PUSH1 0x40 MLOAD PUSH4 0x313C8981 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x620 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x9BA DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP1 DUP7 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0xE0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0xA15 DUP3 PUSH2 0x11AC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xA25 DUP3 DUP8 DUP8 DUP8 PUSH2 0x11D9 JUMP JUMPDEST SWAP1 POP DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xA6C JUMPI PUSH1 0x40 MLOAD PUSH4 0x25C00723 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP12 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x620 JUMP JUMPDEST PUSH2 0xA77 DUP11 DUP11 DUP11 PUSH2 0xB20 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAA0 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8B1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ADDRESS EQ PUSH2 0xADE JUMPI PUSH1 0x40 MLOAD PUSH4 0x5AD3EDC9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x620 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x581 JUMP JUMPDEST PUSH2 0xAED PUSH2 0xD3B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB17 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x620 JUMP JUMPDEST PUSH2 0x656 DUP2 PUSH2 0xF7D JUMP JUMPDEST PUSH2 0xB2D DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1207 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 LT ISZERO PUSH2 0xBAB JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xB9C JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x620 JUMP JUMPDEST PUSH2 0xBAB DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x1207 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xBDB JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x620 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC05 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x620 JUMP JUMPDEST PUSH2 0xB2D DUP4 DUP4 DUP4 PUSH2 0x12DC JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 ISZERO PUSH2 0xC69 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0xC93 JUMPI POP PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x5D2 PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x0 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x5E7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x620 JUMP JUMPDEST PUSH2 0xD76 PUSH2 0x12E7 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH1 0x0 SUB PUSH2 0xDF6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x22A5B367 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x620 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2229F297 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x88A7CA5C SWAP1 PUSH2 0xE28 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1C84 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xE63 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xE60 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1CC1 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xECC JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xE91 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xE96 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xEC4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x22A5B367 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x620 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0x2229F297 PUSH1 0xE2 SHL EQ PUSH2 0xF08 JUMPI PUSH1 0x40 MLOAD PUSH4 0x22A5B367 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x620 JUMP JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF3B JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x620 JUMP JUMPDEST PUSH2 0x648 PUSH1 0x0 DUP4 DUP4 PUSH2 0x12DC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF71 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x620 JUMP JUMPDEST PUSH2 0x648 DUP3 PUSH1 0x0 DUP4 PUSH2 0x12DC JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xFDF PUSH2 0x130A JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xDA3 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x5D2 PUSH32 0x0 PUSH1 0x6 PUSH2 0x132E JUMP JUMPDEST PUSH1 0x60 PUSH2 0x5D2 PUSH32 0x0 PUSH1 0x7 PUSH2 0x132E JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH1 0x0 SUB PUSH2 0x10A4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xDEB6D3ED PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x620 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7B04A2D PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x7B04A2D0 SWAP1 PUSH2 0x10D4 SWAP1 DUP8 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x1CDE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x110F JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x110C SWAP2 DUP2 ADD SWAP1 PUSH2 0x1CC1 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1170 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x113D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1142 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xEC4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xDEB6D3ED PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x620 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0x7B04A2D PUSH1 0xE4 SHL EQ PUSH2 0xF0A JUMPI PUSH1 0x40 MLOAD PUSH4 0xDEB6D3ED PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x620 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B5 PUSH2 0x11B9 PUSH2 0xC10 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x11EB DUP9 DUP9 DUP9 DUP9 PUSH2 0x13D9 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x11FB DUP3 DUP3 PUSH2 0x14A8 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1231 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x620 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x125B JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x620 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0xBAB JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x12CE SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0xB2D DUP4 DUP4 DUP4 PUSH2 0x1561 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0x5E7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x5E7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH1 0xFF DUP4 EQ PUSH2 0x1348 JUMPI PUSH2 0x1341 DUP4 PUSH2 0x1574 JUMP JUMPDEST SWAP1 POP PUSH2 0x4B5 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x1354 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1380 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x13CD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x13A2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x13CD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x13B0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH2 0x4B5 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0x1414 JUMPI POP PUSH1 0x0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0x149E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1468 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1494 JUMPI POP PUSH1 0x0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0x149E JUMP JUMPDEST SWAP3 POP PUSH1 0x0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x14BC JUMPI PUSH2 0x14BC PUSH2 0x1D0E JUMP JUMPDEST SUB PUSH2 0x14C5 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x14D9 JUMPI PUSH2 0x14D9 PUSH2 0x1D0E JUMP JUMPDEST SUB PUSH2 0x14F7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x150B JUMPI PUSH2 0x150B PUSH2 0x1D0E JUMP JUMPDEST SUB PUSH2 0x152C JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x620 JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1540 JUMPI PUSH2 0x1540 PUSH2 0x1D0E JUMP JUMPDEST SUB PUSH2 0x648 JUMPI PUSH1 0x40 MLOAD PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x620 JUMP JUMPDEST PUSH2 0x1569 PUSH2 0x130A JUMP JUMPDEST PUSH2 0xB2D DUP4 DUP4 DUP4 PUSH2 0x15B3 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1581 DUP4 PUSH2 0x16DD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP POP SWAP2 DUP3 MSTORE POP PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x15DE JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x15D3 SWAP2 SWAP1 PUSH2 0x1C5E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1650 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1631 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x620 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x166C JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x168B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x16D0 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x4B5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CD44AC3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x656 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x172D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x581 DUP2 PUSH2 0x1705 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x175E JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1742 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x581 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1738 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x656 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x17C4 DUP2 PUSH2 0x1791 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x17E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x17F2 DUP2 PUSH2 0x1791 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1802 DUP2 PUSH2 0x1791 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x183A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1854 JUMPI PUSH2 0x1854 PUSH2 0x1813 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1883 JUMPI PUSH2 0x1883 PUSH2 0x1813 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD PUSH1 0x20 ADD DUP6 LT ISZERO PUSH2 0x189B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x18CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x18D8 DUP2 PUSH2 0x1791 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1907 DUP7 DUP3 DUP8 ADD PUSH2 0x1829 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1923 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1942 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x194D DUP2 PUSH2 0x1791 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x195D DUP2 PUSH2 0x1791 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1980 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 ADD PUSH1 0x1F DUP2 ADD DUP9 SGT PUSH2 0x1991 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 PUSH1 0x20 DUP3 DUP5 ADD ADD GT ISZERO PUSH2 0x19BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP3 SWAP6 POP POP POP PUSH1 0x20 ADD SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x581 DUP2 PUSH2 0x1791 JUMP JUMPDEST PUSH1 0xFF PUSH1 0xF8 SHL DUP9 AND DUP2 MSTORE PUSH1 0xE0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1A07 PUSH1 0xE0 DUP4 ADD DUP10 PUSH2 0x1738 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x1A19 DUP2 DUP10 PUSH2 0x1738 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD DUP7 SWAP1 MSTORE DUP4 DUP2 SUB PUSH1 0xC0 DUP6 ADD MSTORE DUP5 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP8 ADD SWAP4 POP SWAP1 SWAP2 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1A6F JUMPI DUP4 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1A51 JUMP JUMPDEST POP SWAP1 SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1A96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x1AA1 DUP2 PUSH2 0x1791 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x1AB1 DUP2 PUSH2 0x1791 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1AD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AE0 DUP8 DUP3 DUP9 ADD PUSH2 0x1829 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1B07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x1B12 DUP2 PUSH2 0x1791 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH2 0x1B22 DUP2 PUSH2 0x1791 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1B46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 SWAP1 SWAP4 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1B81 DUP2 PUSH2 0x1791 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1B91 DUP2 PUSH2 0x1791 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1BB0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1BD0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP3 MSTORE DUP7 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE DUP2 ADD DUP3 SWAP1 MSTORE DUP2 DUP4 PUSH1 0xC0 DUP4 ADD CALLDATACOPY PUSH1 0x0 DUP2 DUP4 ADD PUSH1 0xC0 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND ADD ADD SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x4B5 JUMPI PUSH2 0x4B5 PUSH2 0x1C48 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x4B5 JUMPI PUSH2 0x4B5 PUSH2 0x1C48 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1CB7 SWAP1 DUP4 ADD DUP5 PUSH2 0x1738 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x581 DUP2 PUSH2 0x1705 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1D05 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1738 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A 0x2D BLOCKHASH BLOBBASEFEE 0xCC 0xE DUP2 SWAP16 CODECOPY SELFBALANCE SIGNEXTEND PUSH5 0x3E17960834 GASLIMIT 0x25 PUSH4 0xEA82333A 0xBB STOP 0xB9 MULMOD 0xEE SWAP5 0x2B DUP14 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"711:739:35:-:0;;;848:119;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1577:52:16;;;;;;;;;;;;;-1:-1:-1;;;1577:52:16;;;1616:4;3428:431:28;;;;;;;;;;;;;-1:-1:-1;;;3428:431:28;;;928:12:35;1582:113:10;;;;;;;;;;;;;-1:-1:-1;;;1582:113:10;;;;;;;;;;;;;;;;-1:-1:-1;;;1582:113:10;;;1656:5;1648;:13;;;;;;:::i;:::-;-1:-1:-1;1671:7:10;:17;1681:7;1671;:17;:::i;:::-;-1:-1:-1;;;;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;3096:51:36;3069:18;;1322:31:0;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;3501:45:28;:4;3532:13;3501:30;:45::i;:::-;3493:53;;3567:51;:7;3601:16;3567:33;:51::i;:::-;3556:62;;3642:22;;;;;;;;;;3628:36;;3691:25;;;;;;3674:42;;3744:13;3727:30;;3792:23;4326:11;;4339:14;;4304:80;;;2079:95;4304:80;;;3417:25:36;3458:18;;;3451:34;;;;3501:18;;;3494:34;4355:13:28;3544:18:36;;;3537:34;4378:4:28;3587:19:36;;;3580:61;4268:7:28;;3389:19:36;;4304:80:28;;;;;;;;;;;;4294:91;;;;;;4287:98;;4213:179;;3792:23;3767:48;;-1:-1:-1;;3847:4:28;3825:27;;-1:-1:-1;711:739:35;;-1:-1:-1;711:739:35;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;3004:6;3020:17;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;2887:340:24:-;2983:11;3032:2;3016:5;3010:19;:24;3006:215;;;3057:20;3071:5;3057:13;:20::i;:::-;3050:27;;;;3006:215;3134:5;3108:46;3149:5;3134;3108:46;:::i;:::-;-1:-1:-1;1390:66:24;;-1:-1:-1;3006:215:24;2887:340;;;;:::o;1708:286::-;1773:11;1796:17;1822:3;1796:30;;1854:2;1840:4;:11;:16;1836:72;;;1893:3;1879:18;;-1:-1:-1;;;1879:18:24;;;;;;;;:::i;1836:72::-;1974:11;;1957:13;1974:4;1957:13;:::i;:::-;1949:36;;1708:286;-1:-1:-1;;;1708:286:24:o;14:290:36:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:36;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:36:o;309:127::-;370:10;365:3;361:20;358:1;351:31;401:4;398:1;391:15;425:4;422:1;415:15;441:380;520:1;516:12;;;;563;;;584:61;;638:4;630:6;626:17;616:27;;584:61;691:2;683:6;680:14;660:18;657:38;654:161;;737:10;732:3;728:20;725:1;718:31;772:4;769:1;762:15;800:4;797:1;790:15;654:161;;441:380;;;:::o;952:518::-;1054:2;1049:3;1046:11;1043:421;;;1090:5;1087:1;1080:16;1134:4;1131:1;1121:18;1204:2;1192:10;1188:19;1185:1;1181:27;1175:4;1171:38;1240:4;1228:10;1225:20;1222:47;;;-1:-1:-1;1263:4:36;1222:47;1318:2;1313:3;1309:12;1306:1;1302:20;1296:4;1292:31;1282:41;;1373:81;1391:2;1384:5;1381:13;1373:81;;;1450:1;1436:16;;1417:1;1406:13;1373:81;;;1377:3;;1043:421;952:518;;;:::o;1646:1299::-;1766:10;;-1:-1:-1;;;;;1788:30:36;;1785:56;;;1821:18;;:::i;:::-;1850:97;1940:6;1900:38;1932:4;1926:11;1900:38;:::i;:::-;1894:4;1850:97;:::i;:::-;1996:4;2027:2;2016:14;;2044:1;2039:649;;;;2732:1;2749:6;2746:89;;;-1:-1:-1;2801:19:36;;;2795:26;2746:89;-1:-1:-1;;1603:1:36;1599:11;;;1595:24;1591:29;1581:40;1627:1;1623:11;;;1578:57;2848:81;;2009:930;;2039:649;899:1;892:14;;;936:4;923:18;;-1:-1:-1;;2075:20:36;;;2193:222;2207:7;2204:1;2201:14;2193:222;;;2289:19;;;2283:26;2268:42;;2396:4;2381:20;;;;2349:1;2337:14;;;;2223:12;2193:222;;;2197:3;2443:6;2434:7;2431:19;2428:201;;;2504:19;;;2498:26;-1:-1:-1;;2587:1:36;2583:14;;;2599:3;2579:24;2575:37;2571:42;2556:58;2541:74;;2428:201;-1:-1:-1;;;;2675:1:36;2659:14;;;2655:22;2642:36;;-1:-1:-1;1646:1299:36:o;3652:527::-;3801:2;3790:9;3783:21;3764:4;3833:6;3827:13;3876:6;3871:2;3860:9;3856:18;3849:34;3901:1;3911:140;3925:6;3922:1;3919:13;3911:140;;;4036:2;4020:14;;;4016:23;;4010:30;4005:2;3986:17;;;3982:26;3975:66;3940:10;3911:140;;;3915:3;4100:1;4095:2;4086:6;4075:9;4071:22;4067:31;4060:42;4170:2;4163;4159:7;4154:2;4146:6;4142:15;4138:29;4127:9;4123:45;4119:54;4111:62;;;3652:527;;;;:::o;4184:297::-;4302:12;;4349:4;4338:16;;;4332:23;;4302:12;4367:16;;4364:111;;;-1:-1:-1;;4441:4:36;4437:17;;;;4434:1;4430:25;4426:38;4415:50;;4184:297;-1:-1:-1;4184:297:36:o;:::-;711:739:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DOMAIN_SEPARATOR_1800":{"entryPoint":1480,"id":1800,"parameterSlots":0,"returnSlots":1},"@_EIP712Name_4579":{"entryPoint":4116,"id":4579,"parameterSlots":0,"returnSlots":1},"@_EIP712Version_4591":{"entryPoint":4161,"id":4591,"parameterSlots":0,"returnSlots":1},"@_approve_898":{"entryPoint":2848,"id":898,"parameterSlots":3,"returnSlots":0},"@_approve_958":{"entryPoint":4615,"id":958,"parameterSlots":4,"returnSlots":0},"@_buildDomainSeparator_4509":{"entryPoint":null,"id":4509,"parameterSlots":0,"returnSlots":1},"@_burn_880":{"entryPoint":3911,"id":880,"parameterSlots":2,"returnSlots":0},"@_checkOwner_84":{"entryPoint":3387,"id":84,"parameterSlots":0,"returnSlots":0},"@_domainSeparatorV4_4488":{"entryPoint":3088,"id":4488,"parameterSlots":0,"returnSlots":1},"@_flashFeeReceiver_1485":{"entryPoint":null,"id":1485,"parameterSlots":0,"returnSlots":1},"@_flashFee_1473":{"entryPoint":null,"id":1473,"parameterSlots":2,"returnSlots":1},"@_hashTypedDataV4_4525":{"entryPoint":4524,"id":4525,"parameterSlots":1,"returnSlots":1},"@_mint_847":{"entryPoint":3857,"id":847,"parameterSlots":2,"returnSlots":0},"@_msgSender_2028":{"entryPoint":null,"id":2028,"parameterSlots":0,"returnSlots":1},"@_pause_2257":{"entryPoint":4055,"id":2257,"parameterSlots":0,"returnSlots":0},"@_requireNotPaused_2228":{"entryPoint":4874,"id":2228,"parameterSlots":0,"returnSlots":0},"@_requirePaused_2241":{"entryPoint":4839,"id":2241,"parameterSlots":0,"returnSlots":0},"@_spendAllowance_1006":{"entryPoint":2866,"id":1006,"parameterSlots":3,"returnSlots":0},"@_throwError_4364":{"entryPoint":5288,"id":4364,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":3965,"id":146,"parameterSlots":1,"returnSlots":0},"@_transfer_737":{"entryPoint":2993,"id":737,"parameterSlots":3,"returnSlots":0},"@_unpause_2273":{"entryPoint":3438,"id":2273,"parameterSlots":0,"returnSlots":0},"@_update_1646":{"entryPoint":5473,"id":1646,"parameterSlots":3,"returnSlots":0},"@_update_814":{"entryPoint":5555,"id":814,"parameterSlots":3,"returnSlots":0},"@_update_8344":{"entryPoint":4828,"id":8344,"parameterSlots":3,"returnSlots":0},"@_useNonce_2088":{"entryPoint":null,"id":2088,"parameterSlots":1,"returnSlots":1},"@allowance_634":{"entryPoint":null,"id":634,"parameterSlots":2,"returnSlots":1},"@approveAndCall_1285":{"entryPoint":1452,"id":1285,"parameterSlots":2,"returnSlots":1},"@approveAndCall_1322":{"entryPoint":2306,"id":1322,"parameterSlots":3,"returnSlots":1},"@approve_658":{"entryPoint":1357,"id":658,"parameterSlots":2,"returnSlots":1},"@balanceOf_593":{"entryPoint":null,"id":593,"parameterSlots":1,"returnSlots":1},"@burnFrom_1368":{"entryPoint":2059,"id":1368,"parameterSlots":2,"returnSlots":0},"@burn_1347":{"entryPoint":1612,"id":1347,"parameterSlots":1,"returnSlots":0},"@byteLength_2392":{"entryPoint":5853,"id":2392,"parameterSlots":1,"returnSlots":1},"@checkOnERC1363ApprovalReceived_2015":{"entryPoint":4206,"id":2015,"parameterSlots":4,"returnSlots":0},"@checkOnERC1363TransferReceived_1949":{"entryPoint":3520,"id":1949,"parameterSlots":5,"returnSlots":0},"@decimals_571":{"entryPoint":null,"id":571,"parameterSlots":0,"returnSlots":1},"@eip712Domain_4567":{"entryPoint":2126,"id":4567,"parameterSlots":0,"returnSlots":7},"@flashFee_1456":{"entryPoint":2728,"id":1456,"parameterSlots":2,"returnSlots":1},"@flashLoan_1612":{"entryPoint":1625,"id":1612,"parameterSlots":5,"returnSlots":1},"@maxFlashLoan_1428":{"entryPoint":2001,"id":1428,"parameterSlots":1,"returnSlots":1},"@mint_8323":{"entryPoint":1590,"id":8323,"parameterSlots":2,"returnSlots":0},"@name_553":{"entryPoint":1211,"id":553,"parameterSlots":0,"returnSlots":1},"@nonces_1790":{"entryPoint":2080,"id":1790,"parameterSlots":1,"returnSlots":1},"@nonces_2073":{"entryPoint":null,"id":2073,"parameterSlots":1,"returnSlots":1},"@owner_67":{"entryPoint":null,"id":67,"parameterSlots":0,"returnSlots":1},"@pause_8299":{"entryPoint":2110,"id":8299,"parameterSlots":0,"returnSlots":0},"@paused_2216":{"entryPoint":null,"id":2216,"parameterSlots":0,"returnSlots":1},"@permit_1773":{"entryPoint":2377,"id":1773,"parameterSlots":7,"returnSlots":0},"@recover_4315":{"entryPoint":4569,"id":4315,"parameterSlots":4,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":2041,"id":98,"parameterSlots":0,"returnSlots":0},"@supportsInterface_1150":{"entryPoint":1156,"id":1150,"parameterSlots":1,"returnSlots":1},"@supportsInterface_4701":{"entryPoint":null,"id":4701,"parameterSlots":1,"returnSlots":1},"@symbol_562":{"entryPoint":2196,"id":562,"parameterSlots":0,"returnSlots":1},"@toStringWithFallback_2459":{"entryPoint":4910,"id":2459,"parameterSlots":2,"returnSlots":1},"@toString_2360":{"entryPoint":5492,"id":2360,"parameterSlots":1,"returnSlots":1},"@toTypedDataHash_4677":{"entryPoint":null,"id":4677,"parameterSlots":2,"returnSlots":1},"@totalSupply_580":{"entryPoint":null,"id":580,"parameterSlots":0,"returnSlots":1},"@transferAndCall_1167":{"entryPoint":1381,"id":1167,"parameterSlots":2,"returnSlots":1},"@transferAndCall_1206":{"entryPoint":1513,"id":1206,"parameterSlots":3,"returnSlots":1},"@transferFromAndCall_1226":{"entryPoint":2691,"id":1226,"parameterSlots":3,"returnSlots":1},"@transferFromAndCall_1268":{"entryPoint":2225,"id":1268,"parameterSlots":4,"returnSlots":1},"@transferFrom_690":{"entryPoint":1416,"id":690,"parameterSlots":3,"returnSlots":1},"@transferOwnership_126":{"entryPoint":2789,"id":126,"parameterSlots":1,"returnSlots":0},"@transfer_617":{"entryPoint":2211,"id":617,"parameterSlots":2,"returnSlots":1},"@tryRecover_4279":{"entryPoint":5081,"id":4279,"parameterSlots":4,"returnSlots":3},"@unpause_8308":{"entryPoint":1495,"id":8308,"parameterSlots":0,"returnSlots":0},"abi_decode_bytes":{"entryPoint":6185,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":6603,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":7011,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":6098,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":6784,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":6892,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":6054,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr":{"entryPoint":6328,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_bytes32_fromMemory":{"entryPoint":7215,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4":{"entryPoint":5915,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":7361,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_IERC3156FlashBorrower_$291t_addresst_uint256t_bytes_calldata_ptr":{"entryPoint":6442,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_uint256":{"entryPoint":6417,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":5944,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":7300,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_calldata_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":7126,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":7390,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":6632,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6014,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":7262,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":7281,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":7068,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":7240,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":7438,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":6163,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_address":{"entryPoint":6033,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bytes4":{"entryPoint":5893,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:15113:36","nodeType":"YulBlock","src":"0:15113:36","statements":[{"nativeSrc":"6:3:36","nodeType":"YulBlock","src":"6:3:36","statements":[]},{"body":{"nativeSrc":"58:87:36","nodeType":"YulBlock","src":"58:87:36","statements":[{"body":{"nativeSrc":"123:16:36","nodeType":"YulBlock","src":"123:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"132:1:36","nodeType":"YulLiteral","src":"132:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"135:1:36","nodeType":"YulLiteral","src":"135:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"125:6:36","nodeType":"YulIdentifier","src":"125:6:36"},"nativeSrc":"125:12:36","nodeType":"YulFunctionCall","src":"125:12:36"},"nativeSrc":"125:12:36","nodeType":"YulExpressionStatement","src":"125:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"81:5:36","nodeType":"YulIdentifier","src":"81:5:36"},{"arguments":[{"name":"value","nativeSrc":"92:5:36","nodeType":"YulIdentifier","src":"92:5:36"},{"arguments":[{"kind":"number","nativeSrc":"103:3:36","nodeType":"YulLiteral","src":"103:3:36","type":"","value":"224"},{"kind":"number","nativeSrc":"108:10:36","nodeType":"YulLiteral","src":"108:10:36","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nativeSrc":"99:3:36","nodeType":"YulIdentifier","src":"99:3:36"},"nativeSrc":"99:20:36","nodeType":"YulFunctionCall","src":"99:20:36"}],"functionName":{"name":"and","nativeSrc":"88:3:36","nodeType":"YulIdentifier","src":"88:3:36"},"nativeSrc":"88:32:36","nodeType":"YulFunctionCall","src":"88:32:36"}],"functionName":{"name":"eq","nativeSrc":"78:2:36","nodeType":"YulIdentifier","src":"78:2:36"},"nativeSrc":"78:43:36","nodeType":"YulFunctionCall","src":"78:43:36"}],"functionName":{"name":"iszero","nativeSrc":"71:6:36","nodeType":"YulIdentifier","src":"71:6:36"},"nativeSrc":"71:51:36","nodeType":"YulFunctionCall","src":"71:51:36"},"nativeSrc":"68:71:36","nodeType":"YulIf","src":"68:71:36"}]},"name":"validator_revert_bytes4","nativeSrc":"14:131:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"47:5:36","nodeType":"YulTypedName","src":"47:5:36","type":""}],"src":"14:131:36"},{"body":{"nativeSrc":"219:176:36","nodeType":"YulBlock","src":"219:176:36","statements":[{"body":{"nativeSrc":"265:16:36","nodeType":"YulBlock","src":"265:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"274:1:36","nodeType":"YulLiteral","src":"274:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"277:1:36","nodeType":"YulLiteral","src":"277:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"267:6:36","nodeType":"YulIdentifier","src":"267:6:36"},"nativeSrc":"267:12:36","nodeType":"YulFunctionCall","src":"267:12:36"},"nativeSrc":"267:12:36","nodeType":"YulExpressionStatement","src":"267:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"240:7:36","nodeType":"YulIdentifier","src":"240:7:36"},{"name":"headStart","nativeSrc":"249:9:36","nodeType":"YulIdentifier","src":"249:9:36"}],"functionName":{"name":"sub","nativeSrc":"236:3:36","nodeType":"YulIdentifier","src":"236:3:36"},"nativeSrc":"236:23:36","nodeType":"YulFunctionCall","src":"236:23:36"},{"kind":"number","nativeSrc":"261:2:36","nodeType":"YulLiteral","src":"261:2:36","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"232:3:36","nodeType":"YulIdentifier","src":"232:3:36"},"nativeSrc":"232:32:36","nodeType":"YulFunctionCall","src":"232:32:36"},"nativeSrc":"229:52:36","nodeType":"YulIf","src":"229:52:36"},{"nativeSrc":"290:36:36","nodeType":"YulVariableDeclaration","src":"290:36:36","value":{"arguments":[{"name":"headStart","nativeSrc":"316:9:36","nodeType":"YulIdentifier","src":"316:9:36"}],"functionName":{"name":"calldataload","nativeSrc":"303:12:36","nodeType":"YulIdentifier","src":"303:12:36"},"nativeSrc":"303:23:36","nodeType":"YulFunctionCall","src":"303:23:36"},"variables":[{"name":"value","nativeSrc":"294:5:36","nodeType":"YulTypedName","src":"294:5:36","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"359:5:36","nodeType":"YulIdentifier","src":"359:5:36"}],"functionName":{"name":"validator_revert_bytes4","nativeSrc":"335:23:36","nodeType":"YulIdentifier","src":"335:23:36"},"nativeSrc":"335:30:36","nodeType":"YulFunctionCall","src":"335:30:36"},"nativeSrc":"335:30:36","nodeType":"YulExpressionStatement","src":"335:30:36"},{"nativeSrc":"374:15:36","nodeType":"YulAssignment","src":"374:15:36","value":{"name":"value","nativeSrc":"384:5:36","nodeType":"YulIdentifier","src":"384:5:36"},"variableNames":[{"name":"value0","nativeSrc":"374:6:36","nodeType":"YulIdentifier","src":"374:6:36"}]}]},"name":"abi_decode_tuple_t_bytes4","nativeSrc":"150:245:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"185:9:36","nodeType":"YulTypedName","src":"185:9:36","type":""},{"name":"dataEnd","nativeSrc":"196:7:36","nodeType":"YulTypedName","src":"196:7:36","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"208:6:36","nodeType":"YulTypedName","src":"208:6:36","type":""}],"src":"150:245:36"},{"body":{"nativeSrc":"495:92:36","nodeType":"YulBlock","src":"495:92:36","statements":[{"nativeSrc":"505:26:36","nodeType":"YulAssignment","src":"505:26:36","value":{"arguments":[{"name":"headStart","nativeSrc":"517:9:36","nodeType":"YulIdentifier","src":"517:9:36"},{"kind":"number","nativeSrc":"528:2:36","nodeType":"YulLiteral","src":"528:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"513:3:36","nodeType":"YulIdentifier","src":"513:3:36"},"nativeSrc":"513:18:36","nodeType":"YulFunctionCall","src":"513:18:36"},"variableNames":[{"name":"tail","nativeSrc":"505:4:36","nodeType":"YulIdentifier","src":"505:4:36"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"547:9:36","nodeType":"YulIdentifier","src":"547:9:36"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"572:6:36","nodeType":"YulIdentifier","src":"572:6:36"}],"functionName":{"name":"iszero","nativeSrc":"565:6:36","nodeType":"YulIdentifier","src":"565:6:36"},"nativeSrc":"565:14:36","nodeType":"YulFunctionCall","src":"565:14:36"}],"functionName":{"name":"iszero","nativeSrc":"558:6:36","nodeType":"YulIdentifier","src":"558:6:36"},"nativeSrc":"558:22:36","nodeType":"YulFunctionCall","src":"558:22:36"}],"functionName":{"name":"mstore","nativeSrc":"540:6:36","nodeType":"YulIdentifier","src":"540:6:36"},"nativeSrc":"540:41:36","nodeType":"YulFunctionCall","src":"540:41:36"},"nativeSrc":"540:41:36","nodeType":"YulExpressionStatement","src":"540:41:36"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"400:187:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"464:9:36","nodeType":"YulTypedName","src":"464:9:36","type":""},{"name":"value0","nativeSrc":"475:6:36","nodeType":"YulTypedName","src":"475:6:36","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"486:4:36","nodeType":"YulTypedName","src":"486:4:36","type":""}],"src":"400:187:36"},{"body":{"nativeSrc":"642:350:36","nodeType":"YulBlock","src":"642:350:36","statements":[{"nativeSrc":"652:26:36","nodeType":"YulVariableDeclaration","src":"652:26:36","value":{"arguments":[{"name":"value","nativeSrc":"672:5:36","nodeType":"YulIdentifier","src":"672:5:36"}],"functionName":{"name":"mload","nativeSrc":"666:5:36","nodeType":"YulIdentifier","src":"666:5:36"},"nativeSrc":"666:12:36","nodeType":"YulFunctionCall","src":"666:12:36"},"variables":[{"name":"length","nativeSrc":"656:6:36","nodeType":"YulTypedName","src":"656:6:36","type":""}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"694:3:36","nodeType":"YulIdentifier","src":"694:3:36"},{"name":"length","nativeSrc":"699:6:36","nodeType":"YulIdentifier","src":"699:6:36"}],"functionName":{"name":"mstore","nativeSrc":"687:6:36","nodeType":"YulIdentifier","src":"687:6:36"},"nativeSrc":"687:19:36","nodeType":"YulFunctionCall","src":"687:19:36"},"nativeSrc":"687:19:36","nodeType":"YulExpressionStatement","src":"687:19:36"},{"nativeSrc":"715:10:36","nodeType":"YulVariableDeclaration","src":"715:10:36","value":{"kind":"number","nativeSrc":"724:1:36","nodeType":"YulLiteral","src":"724:1:36","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"719:1:36","nodeType":"YulTypedName","src":"719:1:36","type":""}]},{"body":{"nativeSrc":"786:87:36","nodeType":"YulBlock","src":"786:87:36","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"815:3:36","nodeType":"YulIdentifier","src":"815:3:36"},{"name":"i","nativeSrc":"820:1:36","nodeType":"YulIdentifier","src":"820:1:36"}],"functionName":{"name":"add","nativeSrc":"811:3:36","nodeType":"YulIdentifier","src":"811:3:36"},"nativeSrc":"811:11:36","nodeType":"YulFunctionCall","src":"811:11:36"},{"kind":"number","nativeSrc":"824:4:36","nodeType":"YulLiteral","src":"824:4:36","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"807:3:36","nodeType":"YulIdentifier","src":"807:3:36"},"nativeSrc":"807:22:36","nodeType":"YulFunctionCall","src":"807:22:36"},{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"845:5:36","nodeType":"YulIdentifier","src":"845:5:36"},{"name":"i","nativeSrc":"852:1:36","nodeType":"YulIdentifier","src":"852:1:36"}],"functionName":{"name":"add","nativeSrc":"841:3:36","nodeType":"YulIdentifier","src":"841:3:36"},"nativeSrc":"841:13:36","nodeType":"YulFunctionCall","src":"841:13:36"},{"kind":"number","nativeSrc":"856:4:36","nodeType":"YulLiteral","src":"856:4:36","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"837:3:36","nodeType":"YulIdentifier","src":"837:3:36"},"nativeSrc":"837:24:36","nodeType":"YulFunctionCall","src":"837:24:36"}],"functionName":{"name":"mload","nativeSrc":"831:5:36","nodeType":"YulIdentifier","src":"831:5:36"},"nativeSrc":"831:31:36","nodeType":"YulFunctionCall","src":"831:31:36"}],"functionName":{"name":"mstore","nativeSrc":"800:6:36","nodeType":"YulIdentifier","src":"800:6:36"},"nativeSrc":"800:63:36","nodeType":"YulFunctionCall","src":"800:63:36"},"nativeSrc":"800:63:36","nodeType":"YulExpressionStatement","src":"800:63:36"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"745:1:36","nodeType":"YulIdentifier","src":"745:1:36"},{"name":"length","nativeSrc":"748:6:36","nodeType":"YulIdentifier","src":"748:6:36"}],"functionName":{"name":"lt","nativeSrc":"742:2:36","nodeType":"YulIdentifier","src":"742:2:36"},"nativeSrc":"742:13:36","nodeType":"YulFunctionCall","src":"742:13:36"},"nativeSrc":"734:139:36","nodeType":"YulForLoop","post":{"nativeSrc":"756:21:36","nodeType":"YulBlock","src":"756:21:36","statements":[{"nativeSrc":"758:17:36","nodeType":"YulAssignment","src":"758:17:36","value":{"arguments":[{"name":"i","nativeSrc":"767:1:36","nodeType":"YulIdentifier","src":"767:1:36"},{"kind":"number","nativeSrc":"770:4:36","nodeType":"YulLiteral","src":"770:4:36","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"763:3:36","nodeType":"YulIdentifier","src":"763:3:36"},"nativeSrc":"763:12:36","nodeType":"YulFunctionCall","src":"763:12:36"},"variableNames":[{"name":"i","nativeSrc":"758:1:36","nodeType":"YulIdentifier","src":"758:1:36"}]}]},"pre":{"nativeSrc":"738:3:36","nodeType":"YulBlock","src":"738:3:36","statements":[]},"src":"734:139:36"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"897:3:36","nodeType":"YulIdentifier","src":"897:3:36"},{"name":"length","nativeSrc":"902:6:36","nodeType":"YulIdentifier","src":"902:6:36"}],"functionName":{"name":"add","nativeSrc":"893:3:36","nodeType":"YulIdentifier","src":"893:3:36"},"nativeSrc":"893:16:36","nodeType":"YulFunctionCall","src":"893:16:36"},{"kind":"number","nativeSrc":"911:4:36","nodeType":"YulLiteral","src":"911:4:36","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"889:3:36","nodeType":"YulIdentifier","src":"889:3:36"},"nativeSrc":"889:27:36","nodeType":"YulFunctionCall","src":"889:27:36"},{"kind":"number","nativeSrc":"918:1:36","nodeType":"YulLiteral","src":"918:1:36","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"882:6:36","nodeType":"YulIdentifier","src":"882:6:36"},"nativeSrc":"882:38:36","nodeType":"YulFunctionCall","src":"882:38:36"},"nativeSrc":"882:38:36","nodeType":"YulExpressionStatement","src":"882:38:36"},{"nativeSrc":"929:57:36","nodeType":"YulAssignment","src":"929:57:36","value":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"944:3:36","nodeType":"YulIdentifier","src":"944:3:36"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"957:6:36","nodeType":"YulIdentifier","src":"957:6:36"},{"kind":"number","nativeSrc":"965:2:36","nodeType":"YulLiteral","src":"965:2:36","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"953:3:36","nodeType":"YulIdentifier","src":"953:3:36"},"nativeSrc":"953:15:36","nodeType":"YulFunctionCall","src":"953:15:36"},{"arguments":[{"kind":"number","nativeSrc":"974:2:36","nodeType":"YulLiteral","src":"974:2:36","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"970:3:36","nodeType":"YulIdentifier","src":"970:3:36"},"nativeSrc":"970:7:36","nodeType":"YulFunctionCall","src":"970:7:36"}],"functionName":{"name":"and","nativeSrc":"949:3:36","nodeType":"YulIdentifier","src":"949:3:36"},"nativeSrc":"949:29:36","nodeType":"YulFunctionCall","src":"949:29:36"}],"functionName":{"name":"add","nativeSrc":"940:3:36","nodeType":"YulIdentifier","src":"940:3:36"},"nativeSrc":"940:39:36","nodeType":"YulFunctionCall","src":"940:39:36"},{"kind":"number","nativeSrc":"981:4:36","nodeType":"YulLiteral","src":"981:4:36","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"936:3:36","nodeType":"YulIdentifier","src":"936:3:36"},"nativeSrc":"936:50:36","nodeType":"YulFunctionCall","src":"936:50:36"},"variableNames":[{"name":"end","nativeSrc":"929:3:36","nodeType":"YulIdentifier","src":"929:3:36"}]}]},"name":"abi_encode_string","nativeSrc":"592:400:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"619:5:36","nodeType":"YulTypedName","src":"619:5:36","type":""},{"name":"pos","nativeSrc":"626:3:36","nodeType":"YulTypedName","src":"626:3:36","type":""}],"returnVariables":[{"name":"end","nativeSrc":"634:3:36","nodeType":"YulTypedName","src":"634:3:36","type":""}],"src":"592:400:36"},{"body":{"nativeSrc":"1118:99:36","nodeType":"YulBlock","src":"1118:99:36","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1135:9:36","nodeType":"YulIdentifier","src":"1135:9:36"},{"kind":"number","nativeSrc":"1146:2:36","nodeType":"YulLiteral","src":"1146:2:36","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"1128:6:36","nodeType":"YulIdentifier","src":"1128:6:36"},"nativeSrc":"1128:21:36","nodeType":"YulFunctionCall","src":"1128:21:36"},"nativeSrc":"1128:21:36","nodeType":"YulExpressionStatement","src":"1128:21:36"},{"nativeSrc":"1158:53:36","nodeType":"YulAssignment","src":"1158:53:36","value":{"arguments":[{"name":"value0","nativeSrc":"1184:6:36","nodeType":"YulIdentifier","src":"1184:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"1196:9:36","nodeType":"YulIdentifier","src":"1196:9:36"},{"kind":"number","nativeSrc":"1207:2:36","nodeType":"YulLiteral","src":"1207:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1192:3:36","nodeType":"YulIdentifier","src":"1192:3:36"},"nativeSrc":"1192:18:36","nodeType":"YulFunctionCall","src":"1192:18:36"}],"functionName":{"name":"abi_encode_string","nativeSrc":"1166:17:36","nodeType":"YulIdentifier","src":"1166:17:36"},"nativeSrc":"1166:45:36","nodeType":"YulFunctionCall","src":"1166:45:36"},"variableNames":[{"name":"tail","nativeSrc":"1158:4:36","nodeType":"YulIdentifier","src":"1158:4:36"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"997:220:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1087:9:36","nodeType":"YulTypedName","src":"1087:9:36","type":""},{"name":"value0","nativeSrc":"1098:6:36","nodeType":"YulTypedName","src":"1098:6:36","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1109:4:36","nodeType":"YulTypedName","src":"1109:4:36","type":""}],"src":"997:220:36"},{"body":{"nativeSrc":"1267:86:36","nodeType":"YulBlock","src":"1267:86:36","statements":[{"body":{"nativeSrc":"1331:16:36","nodeType":"YulBlock","src":"1331:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1340:1:36","nodeType":"YulLiteral","src":"1340:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"1343:1:36","nodeType":"YulLiteral","src":"1343:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1333:6:36","nodeType":"YulIdentifier","src":"1333:6:36"},"nativeSrc":"1333:12:36","nodeType":"YulFunctionCall","src":"1333:12:36"},"nativeSrc":"1333:12:36","nodeType":"YulExpressionStatement","src":"1333:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1290:5:36","nodeType":"YulIdentifier","src":"1290:5:36"},{"arguments":[{"name":"value","nativeSrc":"1301:5:36","nodeType":"YulIdentifier","src":"1301:5:36"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1316:3:36","nodeType":"YulLiteral","src":"1316:3:36","type":"","value":"160"},{"kind":"number","nativeSrc":"1321:1:36","nodeType":"YulLiteral","src":"1321:1:36","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1312:3:36","nodeType":"YulIdentifier","src":"1312:3:36"},"nativeSrc":"1312:11:36","nodeType":"YulFunctionCall","src":"1312:11:36"},{"kind":"number","nativeSrc":"1325:1:36","nodeType":"YulLiteral","src":"1325:1:36","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1308:3:36","nodeType":"YulIdentifier","src":"1308:3:36"},"nativeSrc":"1308:19:36","nodeType":"YulFunctionCall","src":"1308:19:36"}],"functionName":{"name":"and","nativeSrc":"1297:3:36","nodeType":"YulIdentifier","src":"1297:3:36"},"nativeSrc":"1297:31:36","nodeType":"YulFunctionCall","src":"1297:31:36"}],"functionName":{"name":"eq","nativeSrc":"1287:2:36","nodeType":"YulIdentifier","src":"1287:2:36"},"nativeSrc":"1287:42:36","nodeType":"YulFunctionCall","src":"1287:42:36"}],"functionName":{"name":"iszero","nativeSrc":"1280:6:36","nodeType":"YulIdentifier","src":"1280:6:36"},"nativeSrc":"1280:50:36","nodeType":"YulFunctionCall","src":"1280:50:36"},"nativeSrc":"1277:70:36","nodeType":"YulIf","src":"1277:70:36"}]},"name":"validator_revert_address","nativeSrc":"1222:131:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1256:5:36","nodeType":"YulTypedName","src":"1256:5:36","type":""}],"src":"1222:131:36"},{"body":{"nativeSrc":"1445:280:36","nodeType":"YulBlock","src":"1445:280:36","statements":[{"body":{"nativeSrc":"1491:16:36","nodeType":"YulBlock","src":"1491:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1500:1:36","nodeType":"YulLiteral","src":"1500:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"1503:1:36","nodeType":"YulLiteral","src":"1503:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1493:6:36","nodeType":"YulIdentifier","src":"1493:6:36"},"nativeSrc":"1493:12:36","nodeType":"YulFunctionCall","src":"1493:12:36"},"nativeSrc":"1493:12:36","nodeType":"YulExpressionStatement","src":"1493:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1466:7:36","nodeType":"YulIdentifier","src":"1466:7:36"},{"name":"headStart","nativeSrc":"1475:9:36","nodeType":"YulIdentifier","src":"1475:9:36"}],"functionName":{"name":"sub","nativeSrc":"1462:3:36","nodeType":"YulIdentifier","src":"1462:3:36"},"nativeSrc":"1462:23:36","nodeType":"YulFunctionCall","src":"1462:23:36"},{"kind":"number","nativeSrc":"1487:2:36","nodeType":"YulLiteral","src":"1487:2:36","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"1458:3:36","nodeType":"YulIdentifier","src":"1458:3:36"},"nativeSrc":"1458:32:36","nodeType":"YulFunctionCall","src":"1458:32:36"},"nativeSrc":"1455:52:36","nodeType":"YulIf","src":"1455:52:36"},{"nativeSrc":"1516:36:36","nodeType":"YulVariableDeclaration","src":"1516:36:36","value":{"arguments":[{"name":"headStart","nativeSrc":"1542:9:36","nodeType":"YulIdentifier","src":"1542:9:36"}],"functionName":{"name":"calldataload","nativeSrc":"1529:12:36","nodeType":"YulIdentifier","src":"1529:12:36"},"nativeSrc":"1529:23:36","nodeType":"YulFunctionCall","src":"1529:23:36"},"variables":[{"name":"value","nativeSrc":"1520:5:36","nodeType":"YulTypedName","src":"1520:5:36","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1586:5:36","nodeType":"YulIdentifier","src":"1586:5:36"}],"functionName":{"name":"validator_revert_address","nativeSrc":"1561:24:36","nodeType":"YulIdentifier","src":"1561:24:36"},"nativeSrc":"1561:31:36","nodeType":"YulFunctionCall","src":"1561:31:36"},"nativeSrc":"1561:31:36","nodeType":"YulExpressionStatement","src":"1561:31:36"},{"nativeSrc":"1601:15:36","nodeType":"YulAssignment","src":"1601:15:36","value":{"name":"value","nativeSrc":"1611:5:36","nodeType":"YulIdentifier","src":"1611:5:36"},"variableNames":[{"name":"value0","nativeSrc":"1601:6:36","nodeType":"YulIdentifier","src":"1601:6:36"}]},{"nativeSrc":"1625:16:36","nodeType":"YulVariableDeclaration","src":"1625:16:36","value":{"kind":"number","nativeSrc":"1640:1:36","nodeType":"YulLiteral","src":"1640:1:36","type":"","value":"0"},"variables":[{"name":"value_1","nativeSrc":"1629:7:36","nodeType":"YulTypedName","src":"1629:7:36","type":""}]},{"nativeSrc":"1650:43:36","nodeType":"YulAssignment","src":"1650:43:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1678:9:36","nodeType":"YulIdentifier","src":"1678:9:36"},{"kind":"number","nativeSrc":"1689:2:36","nodeType":"YulLiteral","src":"1689:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1674:3:36","nodeType":"YulIdentifier","src":"1674:3:36"},"nativeSrc":"1674:18:36","nodeType":"YulFunctionCall","src":"1674:18:36"}],"functionName":{"name":"calldataload","nativeSrc":"1661:12:36","nodeType":"YulIdentifier","src":"1661:12:36"},"nativeSrc":"1661:32:36","nodeType":"YulFunctionCall","src":"1661:32:36"},"variableNames":[{"name":"value_1","nativeSrc":"1650:7:36","nodeType":"YulIdentifier","src":"1650:7:36"}]},{"nativeSrc":"1702:17:36","nodeType":"YulAssignment","src":"1702:17:36","value":{"name":"value_1","nativeSrc":"1712:7:36","nodeType":"YulIdentifier","src":"1712:7:36"},"variableNames":[{"name":"value1","nativeSrc":"1702:6:36","nodeType":"YulIdentifier","src":"1702:6:36"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"1358:367:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1403:9:36","nodeType":"YulTypedName","src":"1403:9:36","type":""},{"name":"dataEnd","nativeSrc":"1414:7:36","nodeType":"YulTypedName","src":"1414:7:36","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1426:6:36","nodeType":"YulTypedName","src":"1426:6:36","type":""},{"name":"value1","nativeSrc":"1434:6:36","nodeType":"YulTypedName","src":"1434:6:36","type":""}],"src":"1358:367:36"},{"body":{"nativeSrc":"1831:76:36","nodeType":"YulBlock","src":"1831:76:36","statements":[{"nativeSrc":"1841:26:36","nodeType":"YulAssignment","src":"1841:26:36","value":{"arguments":[{"name":"headStart","nativeSrc":"1853:9:36","nodeType":"YulIdentifier","src":"1853:9:36"},{"kind":"number","nativeSrc":"1864:2:36","nodeType":"YulLiteral","src":"1864:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1849:3:36","nodeType":"YulIdentifier","src":"1849:3:36"},"nativeSrc":"1849:18:36","nodeType":"YulFunctionCall","src":"1849:18:36"},"variableNames":[{"name":"tail","nativeSrc":"1841:4:36","nodeType":"YulIdentifier","src":"1841:4:36"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1883:9:36","nodeType":"YulIdentifier","src":"1883:9:36"},{"name":"value0","nativeSrc":"1894:6:36","nodeType":"YulIdentifier","src":"1894:6:36"}],"functionName":{"name":"mstore","nativeSrc":"1876:6:36","nodeType":"YulIdentifier","src":"1876:6:36"},"nativeSrc":"1876:25:36","nodeType":"YulFunctionCall","src":"1876:25:36"},"nativeSrc":"1876:25:36","nodeType":"YulExpressionStatement","src":"1876:25:36"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"1730:177:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1800:9:36","nodeType":"YulTypedName","src":"1800:9:36","type":""},{"name":"value0","nativeSrc":"1811:6:36","nodeType":"YulTypedName","src":"1811:6:36","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1822:4:36","nodeType":"YulTypedName","src":"1822:4:36","type":""}],"src":"1730:177:36"},{"body":{"nativeSrc":"2016:404:36","nodeType":"YulBlock","src":"2016:404:36","statements":[{"body":{"nativeSrc":"2062:16:36","nodeType":"YulBlock","src":"2062:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2071:1:36","nodeType":"YulLiteral","src":"2071:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"2074:1:36","nodeType":"YulLiteral","src":"2074:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2064:6:36","nodeType":"YulIdentifier","src":"2064:6:36"},"nativeSrc":"2064:12:36","nodeType":"YulFunctionCall","src":"2064:12:36"},"nativeSrc":"2064:12:36","nodeType":"YulExpressionStatement","src":"2064:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2037:7:36","nodeType":"YulIdentifier","src":"2037:7:36"},{"name":"headStart","nativeSrc":"2046:9:36","nodeType":"YulIdentifier","src":"2046:9:36"}],"functionName":{"name":"sub","nativeSrc":"2033:3:36","nodeType":"YulIdentifier","src":"2033:3:36"},"nativeSrc":"2033:23:36","nodeType":"YulFunctionCall","src":"2033:23:36"},{"kind":"number","nativeSrc":"2058:2:36","nodeType":"YulLiteral","src":"2058:2:36","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"2029:3:36","nodeType":"YulIdentifier","src":"2029:3:36"},"nativeSrc":"2029:32:36","nodeType":"YulFunctionCall","src":"2029:32:36"},"nativeSrc":"2026:52:36","nodeType":"YulIf","src":"2026:52:36"},{"nativeSrc":"2087:36:36","nodeType":"YulVariableDeclaration","src":"2087:36:36","value":{"arguments":[{"name":"headStart","nativeSrc":"2113:9:36","nodeType":"YulIdentifier","src":"2113:9:36"}],"functionName":{"name":"calldataload","nativeSrc":"2100:12:36","nodeType":"YulIdentifier","src":"2100:12:36"},"nativeSrc":"2100:23:36","nodeType":"YulFunctionCall","src":"2100:23:36"},"variables":[{"name":"value","nativeSrc":"2091:5:36","nodeType":"YulTypedName","src":"2091:5:36","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2157:5:36","nodeType":"YulIdentifier","src":"2157:5:36"}],"functionName":{"name":"validator_revert_address","nativeSrc":"2132:24:36","nodeType":"YulIdentifier","src":"2132:24:36"},"nativeSrc":"2132:31:36","nodeType":"YulFunctionCall","src":"2132:31:36"},"nativeSrc":"2132:31:36","nodeType":"YulExpressionStatement","src":"2132:31:36"},{"nativeSrc":"2172:15:36","nodeType":"YulAssignment","src":"2172:15:36","value":{"name":"value","nativeSrc":"2182:5:36","nodeType":"YulIdentifier","src":"2182:5:36"},"variableNames":[{"name":"value0","nativeSrc":"2172:6:36","nodeType":"YulIdentifier","src":"2172:6:36"}]},{"nativeSrc":"2196:47:36","nodeType":"YulVariableDeclaration","src":"2196:47:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2228:9:36","nodeType":"YulIdentifier","src":"2228:9:36"},{"kind":"number","nativeSrc":"2239:2:36","nodeType":"YulLiteral","src":"2239:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2224:3:36","nodeType":"YulIdentifier","src":"2224:3:36"},"nativeSrc":"2224:18:36","nodeType":"YulFunctionCall","src":"2224:18:36"}],"functionName":{"name":"calldataload","nativeSrc":"2211:12:36","nodeType":"YulIdentifier","src":"2211:12:36"},"nativeSrc":"2211:32:36","nodeType":"YulFunctionCall","src":"2211:32:36"},"variables":[{"name":"value_1","nativeSrc":"2200:7:36","nodeType":"YulTypedName","src":"2200:7:36","type":""}]},{"expression":{"arguments":[{"name":"value_1","nativeSrc":"2277:7:36","nodeType":"YulIdentifier","src":"2277:7:36"}],"functionName":{"name":"validator_revert_address","nativeSrc":"2252:24:36","nodeType":"YulIdentifier","src":"2252:24:36"},"nativeSrc":"2252:33:36","nodeType":"YulFunctionCall","src":"2252:33:36"},"nativeSrc":"2252:33:36","nodeType":"YulExpressionStatement","src":"2252:33:36"},{"nativeSrc":"2294:17:36","nodeType":"YulAssignment","src":"2294:17:36","value":{"name":"value_1","nativeSrc":"2304:7:36","nodeType":"YulIdentifier","src":"2304:7:36"},"variableNames":[{"name":"value1","nativeSrc":"2294:6:36","nodeType":"YulIdentifier","src":"2294:6:36"}]},{"nativeSrc":"2320:16:36","nodeType":"YulVariableDeclaration","src":"2320:16:36","value":{"kind":"number","nativeSrc":"2335:1:36","nodeType":"YulLiteral","src":"2335:1:36","type":"","value":"0"},"variables":[{"name":"value_2","nativeSrc":"2324:7:36","nodeType":"YulTypedName","src":"2324:7:36","type":""}]},{"nativeSrc":"2345:43:36","nodeType":"YulAssignment","src":"2345:43:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2373:9:36","nodeType":"YulIdentifier","src":"2373:9:36"},{"kind":"number","nativeSrc":"2384:2:36","nodeType":"YulLiteral","src":"2384:2:36","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2369:3:36","nodeType":"YulIdentifier","src":"2369:3:36"},"nativeSrc":"2369:18:36","nodeType":"YulFunctionCall","src":"2369:18:36"}],"functionName":{"name":"calldataload","nativeSrc":"2356:12:36","nodeType":"YulIdentifier","src":"2356:12:36"},"nativeSrc":"2356:32:36","nodeType":"YulFunctionCall","src":"2356:32:36"},"variableNames":[{"name":"value_2","nativeSrc":"2345:7:36","nodeType":"YulIdentifier","src":"2345:7:36"}]},{"nativeSrc":"2397:17:36","nodeType":"YulAssignment","src":"2397:17:36","value":{"name":"value_2","nativeSrc":"2407:7:36","nodeType":"YulIdentifier","src":"2407:7:36"},"variableNames":[{"name":"value2","nativeSrc":"2397:6:36","nodeType":"YulIdentifier","src":"2397:6:36"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"1912:508:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1966:9:36","nodeType":"YulTypedName","src":"1966:9:36","type":""},{"name":"dataEnd","nativeSrc":"1977:7:36","nodeType":"YulTypedName","src":"1977:7:36","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1989:6:36","nodeType":"YulTypedName","src":"1989:6:36","type":""},{"name":"value1","nativeSrc":"1997:6:36","nodeType":"YulTypedName","src":"1997:6:36","type":""},{"name":"value2","nativeSrc":"2005:6:36","nodeType":"YulTypedName","src":"2005:6:36","type":""}],"src":"1912:508:36"},{"body":{"nativeSrc":"2522:87:36","nodeType":"YulBlock","src":"2522:87:36","statements":[{"nativeSrc":"2532:26:36","nodeType":"YulAssignment","src":"2532:26:36","value":{"arguments":[{"name":"headStart","nativeSrc":"2544:9:36","nodeType":"YulIdentifier","src":"2544:9:36"},{"kind":"number","nativeSrc":"2555:2:36","nodeType":"YulLiteral","src":"2555:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2540:3:36","nodeType":"YulIdentifier","src":"2540:3:36"},"nativeSrc":"2540:18:36","nodeType":"YulFunctionCall","src":"2540:18:36"},"variableNames":[{"name":"tail","nativeSrc":"2532:4:36","nodeType":"YulIdentifier","src":"2532:4:36"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2574:9:36","nodeType":"YulIdentifier","src":"2574:9:36"},{"arguments":[{"name":"value0","nativeSrc":"2589:6:36","nodeType":"YulIdentifier","src":"2589:6:36"},{"kind":"number","nativeSrc":"2597:4:36","nodeType":"YulLiteral","src":"2597:4:36","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"2585:3:36","nodeType":"YulIdentifier","src":"2585:3:36"},"nativeSrc":"2585:17:36","nodeType":"YulFunctionCall","src":"2585:17:36"}],"functionName":{"name":"mstore","nativeSrc":"2567:6:36","nodeType":"YulIdentifier","src":"2567:6:36"},"nativeSrc":"2567:36:36","nodeType":"YulFunctionCall","src":"2567:36:36"},"nativeSrc":"2567:36:36","nodeType":"YulExpressionStatement","src":"2567:36:36"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nativeSrc":"2425:184:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2491:9:36","nodeType":"YulTypedName","src":"2491:9:36","type":""},{"name":"value0","nativeSrc":"2502:6:36","nodeType":"YulTypedName","src":"2502:6:36","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2513:4:36","nodeType":"YulTypedName","src":"2513:4:36","type":""}],"src":"2425:184:36"},{"body":{"nativeSrc":"2715:76:36","nodeType":"YulBlock","src":"2715:76:36","statements":[{"nativeSrc":"2725:26:36","nodeType":"YulAssignment","src":"2725:26:36","value":{"arguments":[{"name":"headStart","nativeSrc":"2737:9:36","nodeType":"YulIdentifier","src":"2737:9:36"},{"kind":"number","nativeSrc":"2748:2:36","nodeType":"YulLiteral","src":"2748:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2733:3:36","nodeType":"YulIdentifier","src":"2733:3:36"},"nativeSrc":"2733:18:36","nodeType":"YulFunctionCall","src":"2733:18:36"},"variableNames":[{"name":"tail","nativeSrc":"2725:4:36","nodeType":"YulIdentifier","src":"2725:4:36"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2767:9:36","nodeType":"YulIdentifier","src":"2767:9:36"},{"name":"value0","nativeSrc":"2778:6:36","nodeType":"YulIdentifier","src":"2778:6:36"}],"functionName":{"name":"mstore","nativeSrc":"2760:6:36","nodeType":"YulIdentifier","src":"2760:6:36"},"nativeSrc":"2760:25:36","nodeType":"YulFunctionCall","src":"2760:25:36"},"nativeSrc":"2760:25:36","nodeType":"YulExpressionStatement","src":"2760:25:36"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"2614:177:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2684:9:36","nodeType":"YulTypedName","src":"2684:9:36","type":""},{"name":"value0","nativeSrc":"2695:6:36","nodeType":"YulTypedName","src":"2695:6:36","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2706:4:36","nodeType":"YulTypedName","src":"2706:4:36","type":""}],"src":"2614:177:36"},{"body":{"nativeSrc":"2828:95:36","nodeType":"YulBlock","src":"2828:95:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2845:1:36","nodeType":"YulLiteral","src":"2845:1:36","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"2852:3:36","nodeType":"YulLiteral","src":"2852:3:36","type":"","value":"224"},{"kind":"number","nativeSrc":"2857:10:36","nodeType":"YulLiteral","src":"2857:10:36","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"2848:3:36","nodeType":"YulIdentifier","src":"2848:3:36"},"nativeSrc":"2848:20:36","nodeType":"YulFunctionCall","src":"2848:20:36"}],"functionName":{"name":"mstore","nativeSrc":"2838:6:36","nodeType":"YulIdentifier","src":"2838:6:36"},"nativeSrc":"2838:31:36","nodeType":"YulFunctionCall","src":"2838:31:36"},"nativeSrc":"2838:31:36","nodeType":"YulExpressionStatement","src":"2838:31:36"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2885:1:36","nodeType":"YulLiteral","src":"2885:1:36","type":"","value":"4"},{"kind":"number","nativeSrc":"2888:4:36","nodeType":"YulLiteral","src":"2888:4:36","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"2878:6:36","nodeType":"YulIdentifier","src":"2878:6:36"},"nativeSrc":"2878:15:36","nodeType":"YulFunctionCall","src":"2878:15:36"},"nativeSrc":"2878:15:36","nodeType":"YulExpressionStatement","src":"2878:15:36"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2909:1:36","nodeType":"YulLiteral","src":"2909:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"2912:4:36","nodeType":"YulLiteral","src":"2912:4:36","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"2902:6:36","nodeType":"YulIdentifier","src":"2902:6:36"},"nativeSrc":"2902:15:36","nodeType":"YulFunctionCall","src":"2902:15:36"},"nativeSrc":"2902:15:36","nodeType":"YulExpressionStatement","src":"2902:15:36"}]},"name":"panic_error_0x41","nativeSrc":"2796:127:36","nodeType":"YulFunctionDefinition","src":"2796:127:36"},{"body":{"nativeSrc":"2980:673:36","nodeType":"YulBlock","src":"2980:673:36","statements":[{"body":{"nativeSrc":"3029:16:36","nodeType":"YulBlock","src":"3029:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3038:1:36","nodeType":"YulLiteral","src":"3038:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"3041:1:36","nodeType":"YulLiteral","src":"3041:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3031:6:36","nodeType":"YulIdentifier","src":"3031:6:36"},"nativeSrc":"3031:12:36","nodeType":"YulFunctionCall","src":"3031:12:36"},"nativeSrc":"3031:12:36","nodeType":"YulExpressionStatement","src":"3031:12:36"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"3008:6:36","nodeType":"YulIdentifier","src":"3008:6:36"},{"kind":"number","nativeSrc":"3016:4:36","nodeType":"YulLiteral","src":"3016:4:36","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"3004:3:36","nodeType":"YulIdentifier","src":"3004:3:36"},"nativeSrc":"3004:17:36","nodeType":"YulFunctionCall","src":"3004:17:36"},{"name":"end","nativeSrc":"3023:3:36","nodeType":"YulIdentifier","src":"3023:3:36"}],"functionName":{"name":"slt","nativeSrc":"3000:3:36","nodeType":"YulIdentifier","src":"3000:3:36"},"nativeSrc":"3000:27:36","nodeType":"YulFunctionCall","src":"3000:27:36"}],"functionName":{"name":"iszero","nativeSrc":"2993:6:36","nodeType":"YulIdentifier","src":"2993:6:36"},"nativeSrc":"2993:35:36","nodeType":"YulFunctionCall","src":"2993:35:36"},"nativeSrc":"2990:55:36","nodeType":"YulIf","src":"2990:55:36"},{"nativeSrc":"3054:34:36","nodeType":"YulVariableDeclaration","src":"3054:34:36","value":{"arguments":[{"name":"offset","nativeSrc":"3081:6:36","nodeType":"YulIdentifier","src":"3081:6:36"}],"functionName":{"name":"calldataload","nativeSrc":"3068:12:36","nodeType":"YulIdentifier","src":"3068:12:36"},"nativeSrc":"3068:20:36","nodeType":"YulFunctionCall","src":"3068:20:36"},"variables":[{"name":"length","nativeSrc":"3058:6:36","nodeType":"YulTypedName","src":"3058:6:36","type":""}]},{"body":{"nativeSrc":"3131:22:36","nodeType":"YulBlock","src":"3131:22:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"3133:16:36","nodeType":"YulIdentifier","src":"3133:16:36"},"nativeSrc":"3133:18:36","nodeType":"YulFunctionCall","src":"3133:18:36"},"nativeSrc":"3133:18:36","nodeType":"YulExpressionStatement","src":"3133:18:36"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"3103:6:36","nodeType":"YulIdentifier","src":"3103:6:36"},{"kind":"number","nativeSrc":"3111:18:36","nodeType":"YulLiteral","src":"3111:18:36","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"3100:2:36","nodeType":"YulIdentifier","src":"3100:2:36"},"nativeSrc":"3100:30:36","nodeType":"YulFunctionCall","src":"3100:30:36"},"nativeSrc":"3097:56:36","nodeType":"YulIf","src":"3097:56:36"},{"nativeSrc":"3162:23:36","nodeType":"YulVariableDeclaration","src":"3162:23:36","value":{"arguments":[{"kind":"number","nativeSrc":"3182:2:36","nodeType":"YulLiteral","src":"3182:2:36","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"3176:5:36","nodeType":"YulIdentifier","src":"3176:5:36"},"nativeSrc":"3176:9:36","nodeType":"YulFunctionCall","src":"3176:9:36"},"variables":[{"name":"memPtr","nativeSrc":"3166:6:36","nodeType":"YulTypedName","src":"3166:6:36","type":""}]},{"nativeSrc":"3194:85:36","nodeType":"YulVariableDeclaration","src":"3194:85:36","value":{"arguments":[{"name":"memPtr","nativeSrc":"3216:6:36","nodeType":"YulIdentifier","src":"3216:6:36"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"length","nativeSrc":"3240:6:36","nodeType":"YulIdentifier","src":"3240:6:36"},{"kind":"number","nativeSrc":"3248:4:36","nodeType":"YulLiteral","src":"3248:4:36","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"3236:3:36","nodeType":"YulIdentifier","src":"3236:3:36"},"nativeSrc":"3236:17:36","nodeType":"YulFunctionCall","src":"3236:17:36"},{"arguments":[{"kind":"number","nativeSrc":"3259:2:36","nodeType":"YulLiteral","src":"3259:2:36","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"3255:3:36","nodeType":"YulIdentifier","src":"3255:3:36"},"nativeSrc":"3255:7:36","nodeType":"YulFunctionCall","src":"3255:7:36"}],"functionName":{"name":"and","nativeSrc":"3232:3:36","nodeType":"YulIdentifier","src":"3232:3:36"},"nativeSrc":"3232:31:36","nodeType":"YulFunctionCall","src":"3232:31:36"},{"kind":"number","nativeSrc":"3265:2:36","nodeType":"YulLiteral","src":"3265:2:36","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"3228:3:36","nodeType":"YulIdentifier","src":"3228:3:36"},"nativeSrc":"3228:40:36","nodeType":"YulFunctionCall","src":"3228:40:36"},{"arguments":[{"kind":"number","nativeSrc":"3274:2:36","nodeType":"YulLiteral","src":"3274:2:36","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"3270:3:36","nodeType":"YulIdentifier","src":"3270:3:36"},"nativeSrc":"3270:7:36","nodeType":"YulFunctionCall","src":"3270:7:36"}],"functionName":{"name":"and","nativeSrc":"3224:3:36","nodeType":"YulIdentifier","src":"3224:3:36"},"nativeSrc":"3224:54:36","nodeType":"YulFunctionCall","src":"3224:54:36"}],"functionName":{"name":"add","nativeSrc":"3212:3:36","nodeType":"YulIdentifier","src":"3212:3:36"},"nativeSrc":"3212:67:36","nodeType":"YulFunctionCall","src":"3212:67:36"},"variables":[{"name":"newFreePtr","nativeSrc":"3198:10:36","nodeType":"YulTypedName","src":"3198:10:36","type":""}]},{"body":{"nativeSrc":"3354:22:36","nodeType":"YulBlock","src":"3354:22:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"3356:16:36","nodeType":"YulIdentifier","src":"3356:16:36"},"nativeSrc":"3356:18:36","nodeType":"YulFunctionCall","src":"3356:18:36"},"nativeSrc":"3356:18:36","nodeType":"YulExpressionStatement","src":"3356:18:36"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"3297:10:36","nodeType":"YulIdentifier","src":"3297:10:36"},{"kind":"number","nativeSrc":"3309:18:36","nodeType":"YulLiteral","src":"3309:18:36","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"3294:2:36","nodeType":"YulIdentifier","src":"3294:2:36"},"nativeSrc":"3294:34:36","nodeType":"YulFunctionCall","src":"3294:34:36"},{"arguments":[{"name":"newFreePtr","nativeSrc":"3333:10:36","nodeType":"YulIdentifier","src":"3333:10:36"},{"name":"memPtr","nativeSrc":"3345:6:36","nodeType":"YulIdentifier","src":"3345:6:36"}],"functionName":{"name":"lt","nativeSrc":"3330:2:36","nodeType":"YulIdentifier","src":"3330:2:36"},"nativeSrc":"3330:22:36","nodeType":"YulFunctionCall","src":"3330:22:36"}],"functionName":{"name":"or","nativeSrc":"3291:2:36","nodeType":"YulIdentifier","src":"3291:2:36"},"nativeSrc":"3291:62:36","nodeType":"YulFunctionCall","src":"3291:62:36"},"nativeSrc":"3288:88:36","nodeType":"YulIf","src":"3288:88:36"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3392:2:36","nodeType":"YulLiteral","src":"3392:2:36","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"3396:10:36","nodeType":"YulIdentifier","src":"3396:10:36"}],"functionName":{"name":"mstore","nativeSrc":"3385:6:36","nodeType":"YulIdentifier","src":"3385:6:36"},"nativeSrc":"3385:22:36","nodeType":"YulFunctionCall","src":"3385:22:36"},"nativeSrc":"3385:22:36","nodeType":"YulExpressionStatement","src":"3385:22:36"},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"3423:6:36","nodeType":"YulIdentifier","src":"3423:6:36"},{"name":"length","nativeSrc":"3431:6:36","nodeType":"YulIdentifier","src":"3431:6:36"}],"functionName":{"name":"mstore","nativeSrc":"3416:6:36","nodeType":"YulIdentifier","src":"3416:6:36"},"nativeSrc":"3416:22:36","nodeType":"YulFunctionCall","src":"3416:22:36"},"nativeSrc":"3416:22:36","nodeType":"YulExpressionStatement","src":"3416:22:36"},{"body":{"nativeSrc":"3490:16:36","nodeType":"YulBlock","src":"3490:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3499:1:36","nodeType":"YulLiteral","src":"3499:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"3502:1:36","nodeType":"YulLiteral","src":"3502:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3492:6:36","nodeType":"YulIdentifier","src":"3492:6:36"},"nativeSrc":"3492:12:36","nodeType":"YulFunctionCall","src":"3492:12:36"},"nativeSrc":"3492:12:36","nodeType":"YulExpressionStatement","src":"3492:12:36"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"3461:6:36","nodeType":"YulIdentifier","src":"3461:6:36"},{"name":"length","nativeSrc":"3469:6:36","nodeType":"YulIdentifier","src":"3469:6:36"}],"functionName":{"name":"add","nativeSrc":"3457:3:36","nodeType":"YulIdentifier","src":"3457:3:36"},"nativeSrc":"3457:19:36","nodeType":"YulFunctionCall","src":"3457:19:36"},{"kind":"number","nativeSrc":"3478:4:36","nodeType":"YulLiteral","src":"3478:4:36","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3453:3:36","nodeType":"YulIdentifier","src":"3453:3:36"},"nativeSrc":"3453:30:36","nodeType":"YulFunctionCall","src":"3453:30:36"},{"name":"end","nativeSrc":"3485:3:36","nodeType":"YulIdentifier","src":"3485:3:36"}],"functionName":{"name":"gt","nativeSrc":"3450:2:36","nodeType":"YulIdentifier","src":"3450:2:36"},"nativeSrc":"3450:39:36","nodeType":"YulFunctionCall","src":"3450:39:36"},"nativeSrc":"3447:59:36","nodeType":"YulIf","src":"3447:59:36"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"3532:6:36","nodeType":"YulIdentifier","src":"3532:6:36"},{"kind":"number","nativeSrc":"3540:4:36","nodeType":"YulLiteral","src":"3540:4:36","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3528:3:36","nodeType":"YulIdentifier","src":"3528:3:36"},"nativeSrc":"3528:17:36","nodeType":"YulFunctionCall","src":"3528:17:36"},{"arguments":[{"name":"offset","nativeSrc":"3551:6:36","nodeType":"YulIdentifier","src":"3551:6:36"},{"kind":"number","nativeSrc":"3559:4:36","nodeType":"YulLiteral","src":"3559:4:36","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3547:3:36","nodeType":"YulIdentifier","src":"3547:3:36"},"nativeSrc":"3547:17:36","nodeType":"YulFunctionCall","src":"3547:17:36"},{"name":"length","nativeSrc":"3566:6:36","nodeType":"YulIdentifier","src":"3566:6:36"}],"functionName":{"name":"calldatacopy","nativeSrc":"3515:12:36","nodeType":"YulIdentifier","src":"3515:12:36"},"nativeSrc":"3515:58:36","nodeType":"YulFunctionCall","src":"3515:58:36"},"nativeSrc":"3515:58:36","nodeType":"YulExpressionStatement","src":"3515:58:36"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"3597:6:36","nodeType":"YulIdentifier","src":"3597:6:36"},{"name":"length","nativeSrc":"3605:6:36","nodeType":"YulIdentifier","src":"3605:6:36"}],"functionName":{"name":"add","nativeSrc":"3593:3:36","nodeType":"YulIdentifier","src":"3593:3:36"},"nativeSrc":"3593:19:36","nodeType":"YulFunctionCall","src":"3593:19:36"},{"kind":"number","nativeSrc":"3614:4:36","nodeType":"YulLiteral","src":"3614:4:36","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3589:3:36","nodeType":"YulIdentifier","src":"3589:3:36"},"nativeSrc":"3589:30:36","nodeType":"YulFunctionCall","src":"3589:30:36"},{"kind":"number","nativeSrc":"3621:1:36","nodeType":"YulLiteral","src":"3621:1:36","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"3582:6:36","nodeType":"YulIdentifier","src":"3582:6:36"},"nativeSrc":"3582:41:36","nodeType":"YulFunctionCall","src":"3582:41:36"},"nativeSrc":"3582:41:36","nodeType":"YulExpressionStatement","src":"3582:41:36"},{"nativeSrc":"3632:15:36","nodeType":"YulAssignment","src":"3632:15:36","value":{"name":"memPtr","nativeSrc":"3641:6:36","nodeType":"YulIdentifier","src":"3641:6:36"},"variableNames":[{"name":"array","nativeSrc":"3632:5:36","nodeType":"YulIdentifier","src":"3632:5:36"}]}]},"name":"abi_decode_bytes","nativeSrc":"2928:725:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2954:6:36","nodeType":"YulTypedName","src":"2954:6:36","type":""},{"name":"end","nativeSrc":"2962:3:36","nodeType":"YulTypedName","src":"2962:3:36","type":""}],"returnVariables":[{"name":"array","nativeSrc":"2970:5:36","nodeType":"YulTypedName","src":"2970:5:36","type":""}],"src":"2928:725:36"},{"body":{"nativeSrc":"3771:462:36","nodeType":"YulBlock","src":"3771:462:36","statements":[{"body":{"nativeSrc":"3817:16:36","nodeType":"YulBlock","src":"3817:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3826:1:36","nodeType":"YulLiteral","src":"3826:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"3829:1:36","nodeType":"YulLiteral","src":"3829:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3819:6:36","nodeType":"YulIdentifier","src":"3819:6:36"},"nativeSrc":"3819:12:36","nodeType":"YulFunctionCall","src":"3819:12:36"},"nativeSrc":"3819:12:36","nodeType":"YulExpressionStatement","src":"3819:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3792:7:36","nodeType":"YulIdentifier","src":"3792:7:36"},{"name":"headStart","nativeSrc":"3801:9:36","nodeType":"YulIdentifier","src":"3801:9:36"}],"functionName":{"name":"sub","nativeSrc":"3788:3:36","nodeType":"YulIdentifier","src":"3788:3:36"},"nativeSrc":"3788:23:36","nodeType":"YulFunctionCall","src":"3788:23:36"},{"kind":"number","nativeSrc":"3813:2:36","nodeType":"YulLiteral","src":"3813:2:36","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"3784:3:36","nodeType":"YulIdentifier","src":"3784:3:36"},"nativeSrc":"3784:32:36","nodeType":"YulFunctionCall","src":"3784:32:36"},"nativeSrc":"3781:52:36","nodeType":"YulIf","src":"3781:52:36"},{"nativeSrc":"3842:36:36","nodeType":"YulVariableDeclaration","src":"3842:36:36","value":{"arguments":[{"name":"headStart","nativeSrc":"3868:9:36","nodeType":"YulIdentifier","src":"3868:9:36"}],"functionName":{"name":"calldataload","nativeSrc":"3855:12:36","nodeType":"YulIdentifier","src":"3855:12:36"},"nativeSrc":"3855:23:36","nodeType":"YulFunctionCall","src":"3855:23:36"},"variables":[{"name":"value","nativeSrc":"3846:5:36","nodeType":"YulTypedName","src":"3846:5:36","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"3912:5:36","nodeType":"YulIdentifier","src":"3912:5:36"}],"functionName":{"name":"validator_revert_address","nativeSrc":"3887:24:36","nodeType":"YulIdentifier","src":"3887:24:36"},"nativeSrc":"3887:31:36","nodeType":"YulFunctionCall","src":"3887:31:36"},"nativeSrc":"3887:31:36","nodeType":"YulExpressionStatement","src":"3887:31:36"},{"nativeSrc":"3927:15:36","nodeType":"YulAssignment","src":"3927:15:36","value":{"name":"value","nativeSrc":"3937:5:36","nodeType":"YulIdentifier","src":"3937:5:36"},"variableNames":[{"name":"value0","nativeSrc":"3927:6:36","nodeType":"YulIdentifier","src":"3927:6:36"}]},{"nativeSrc":"3951:16:36","nodeType":"YulVariableDeclaration","src":"3951:16:36","value":{"kind":"number","nativeSrc":"3966:1:36","nodeType":"YulLiteral","src":"3966:1:36","type":"","value":"0"},"variables":[{"name":"value_1","nativeSrc":"3955:7:36","nodeType":"YulTypedName","src":"3955:7:36","type":""}]},{"nativeSrc":"3976:43:36","nodeType":"YulAssignment","src":"3976:43:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4004:9:36","nodeType":"YulIdentifier","src":"4004:9:36"},{"kind":"number","nativeSrc":"4015:2:36","nodeType":"YulLiteral","src":"4015:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4000:3:36","nodeType":"YulIdentifier","src":"4000:3:36"},"nativeSrc":"4000:18:36","nodeType":"YulFunctionCall","src":"4000:18:36"}],"functionName":{"name":"calldataload","nativeSrc":"3987:12:36","nodeType":"YulIdentifier","src":"3987:12:36"},"nativeSrc":"3987:32:36","nodeType":"YulFunctionCall","src":"3987:32:36"},"variableNames":[{"name":"value_1","nativeSrc":"3976:7:36","nodeType":"YulIdentifier","src":"3976:7:36"}]},{"nativeSrc":"4028:17:36","nodeType":"YulAssignment","src":"4028:17:36","value":{"name":"value_1","nativeSrc":"4038:7:36","nodeType":"YulIdentifier","src":"4038:7:36"},"variableNames":[{"name":"value1","nativeSrc":"4028:6:36","nodeType":"YulIdentifier","src":"4028:6:36"}]},{"nativeSrc":"4054:46:36","nodeType":"YulVariableDeclaration","src":"4054:46:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4085:9:36","nodeType":"YulIdentifier","src":"4085:9:36"},{"kind":"number","nativeSrc":"4096:2:36","nodeType":"YulLiteral","src":"4096:2:36","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4081:3:36","nodeType":"YulIdentifier","src":"4081:3:36"},"nativeSrc":"4081:18:36","nodeType":"YulFunctionCall","src":"4081:18:36"}],"functionName":{"name":"calldataload","nativeSrc":"4068:12:36","nodeType":"YulIdentifier","src":"4068:12:36"},"nativeSrc":"4068:32:36","nodeType":"YulFunctionCall","src":"4068:32:36"},"variables":[{"name":"offset","nativeSrc":"4058:6:36","nodeType":"YulTypedName","src":"4058:6:36","type":""}]},{"body":{"nativeSrc":"4143:16:36","nodeType":"YulBlock","src":"4143:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4152:1:36","nodeType":"YulLiteral","src":"4152:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"4155:1:36","nodeType":"YulLiteral","src":"4155:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4145:6:36","nodeType":"YulIdentifier","src":"4145:6:36"},"nativeSrc":"4145:12:36","nodeType":"YulFunctionCall","src":"4145:12:36"},"nativeSrc":"4145:12:36","nodeType":"YulExpressionStatement","src":"4145:12:36"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"4115:6:36","nodeType":"YulIdentifier","src":"4115:6:36"},{"kind":"number","nativeSrc":"4123:18:36","nodeType":"YulLiteral","src":"4123:18:36","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"4112:2:36","nodeType":"YulIdentifier","src":"4112:2:36"},"nativeSrc":"4112:30:36","nodeType":"YulFunctionCall","src":"4112:30:36"},"nativeSrc":"4109:50:36","nodeType":"YulIf","src":"4109:50:36"},{"nativeSrc":"4168:59:36","nodeType":"YulAssignment","src":"4168:59:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4199:9:36","nodeType":"YulIdentifier","src":"4199:9:36"},{"name":"offset","nativeSrc":"4210:6:36","nodeType":"YulIdentifier","src":"4210:6:36"}],"functionName":{"name":"add","nativeSrc":"4195:3:36","nodeType":"YulIdentifier","src":"4195:3:36"},"nativeSrc":"4195:22:36","nodeType":"YulFunctionCall","src":"4195:22:36"},{"name":"dataEnd","nativeSrc":"4219:7:36","nodeType":"YulIdentifier","src":"4219:7:36"}],"functionName":{"name":"abi_decode_bytes","nativeSrc":"4178:16:36","nodeType":"YulIdentifier","src":"4178:16:36"},"nativeSrc":"4178:49:36","nodeType":"YulFunctionCall","src":"4178:49:36"},"variableNames":[{"name":"value2","nativeSrc":"4168:6:36","nodeType":"YulIdentifier","src":"4168:6:36"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr","nativeSrc":"3658:575:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3721:9:36","nodeType":"YulTypedName","src":"3721:9:36","type":""},{"name":"dataEnd","nativeSrc":"3732:7:36","nodeType":"YulTypedName","src":"3732:7:36","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3744:6:36","nodeType":"YulTypedName","src":"3744:6:36","type":""},{"name":"value1","nativeSrc":"3752:6:36","nodeType":"YulTypedName","src":"3752:6:36","type":""},{"name":"value2","nativeSrc":"3760:6:36","nodeType":"YulTypedName","src":"3760:6:36","type":""}],"src":"3658:575:36"},{"body":{"nativeSrc":"4308:156:36","nodeType":"YulBlock","src":"4308:156:36","statements":[{"body":{"nativeSrc":"4354:16:36","nodeType":"YulBlock","src":"4354:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4363:1:36","nodeType":"YulLiteral","src":"4363:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"4366:1:36","nodeType":"YulLiteral","src":"4366:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4356:6:36","nodeType":"YulIdentifier","src":"4356:6:36"},"nativeSrc":"4356:12:36","nodeType":"YulFunctionCall","src":"4356:12:36"},"nativeSrc":"4356:12:36","nodeType":"YulExpressionStatement","src":"4356:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4329:7:36","nodeType":"YulIdentifier","src":"4329:7:36"},{"name":"headStart","nativeSrc":"4338:9:36","nodeType":"YulIdentifier","src":"4338:9:36"}],"functionName":{"name":"sub","nativeSrc":"4325:3:36","nodeType":"YulIdentifier","src":"4325:3:36"},"nativeSrc":"4325:23:36","nodeType":"YulFunctionCall","src":"4325:23:36"},{"kind":"number","nativeSrc":"4350:2:36","nodeType":"YulLiteral","src":"4350:2:36","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"4321:3:36","nodeType":"YulIdentifier","src":"4321:3:36"},"nativeSrc":"4321:32:36","nodeType":"YulFunctionCall","src":"4321:32:36"},"nativeSrc":"4318:52:36","nodeType":"YulIf","src":"4318:52:36"},{"nativeSrc":"4379:14:36","nodeType":"YulVariableDeclaration","src":"4379:14:36","value":{"kind":"number","nativeSrc":"4392:1:36","nodeType":"YulLiteral","src":"4392:1:36","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"4383:5:36","nodeType":"YulTypedName","src":"4383:5:36","type":""}]},{"nativeSrc":"4402:32:36","nodeType":"YulAssignment","src":"4402:32:36","value":{"arguments":[{"name":"headStart","nativeSrc":"4424:9:36","nodeType":"YulIdentifier","src":"4424:9:36"}],"functionName":{"name":"calldataload","nativeSrc":"4411:12:36","nodeType":"YulIdentifier","src":"4411:12:36"},"nativeSrc":"4411:23:36","nodeType":"YulFunctionCall","src":"4411:23:36"},"variableNames":[{"name":"value","nativeSrc":"4402:5:36","nodeType":"YulIdentifier","src":"4402:5:36"}]},{"nativeSrc":"4443:15:36","nodeType":"YulAssignment","src":"4443:15:36","value":{"name":"value","nativeSrc":"4453:5:36","nodeType":"YulIdentifier","src":"4453:5:36"},"variableNames":[{"name":"value0","nativeSrc":"4443:6:36","nodeType":"YulIdentifier","src":"4443:6:36"}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"4238:226:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4274:9:36","nodeType":"YulTypedName","src":"4274:9:36","type":""},{"name":"dataEnd","nativeSrc":"4285:7:36","nodeType":"YulTypedName","src":"4285:7:36","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4297:6:36","nodeType":"YulTypedName","src":"4297:6:36","type":""}],"src":"4238:226:36"},{"body":{"nativeSrc":"4638:843:36","nodeType":"YulBlock","src":"4638:843:36","statements":[{"body":{"nativeSrc":"4685:16:36","nodeType":"YulBlock","src":"4685:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4694:1:36","nodeType":"YulLiteral","src":"4694:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"4697:1:36","nodeType":"YulLiteral","src":"4697:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4687:6:36","nodeType":"YulIdentifier","src":"4687:6:36"},"nativeSrc":"4687:12:36","nodeType":"YulFunctionCall","src":"4687:12:36"},"nativeSrc":"4687:12:36","nodeType":"YulExpressionStatement","src":"4687:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4659:7:36","nodeType":"YulIdentifier","src":"4659:7:36"},{"name":"headStart","nativeSrc":"4668:9:36","nodeType":"YulIdentifier","src":"4668:9:36"}],"functionName":{"name":"sub","nativeSrc":"4655:3:36","nodeType":"YulIdentifier","src":"4655:3:36"},"nativeSrc":"4655:23:36","nodeType":"YulFunctionCall","src":"4655:23:36"},{"kind":"number","nativeSrc":"4680:3:36","nodeType":"YulLiteral","src":"4680:3:36","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"4651:3:36","nodeType":"YulIdentifier","src":"4651:3:36"},"nativeSrc":"4651:33:36","nodeType":"YulFunctionCall","src":"4651:33:36"},"nativeSrc":"4648:53:36","nodeType":"YulIf","src":"4648:53:36"},{"nativeSrc":"4710:36:36","nodeType":"YulVariableDeclaration","src":"4710:36:36","value":{"arguments":[{"name":"headStart","nativeSrc":"4736:9:36","nodeType":"YulIdentifier","src":"4736:9:36"}],"functionName":{"name":"calldataload","nativeSrc":"4723:12:36","nodeType":"YulIdentifier","src":"4723:12:36"},"nativeSrc":"4723:23:36","nodeType":"YulFunctionCall","src":"4723:23:36"},"variables":[{"name":"value","nativeSrc":"4714:5:36","nodeType":"YulTypedName","src":"4714:5:36","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"4780:5:36","nodeType":"YulIdentifier","src":"4780:5:36"}],"functionName":{"name":"validator_revert_address","nativeSrc":"4755:24:36","nodeType":"YulIdentifier","src":"4755:24:36"},"nativeSrc":"4755:31:36","nodeType":"YulFunctionCall","src":"4755:31:36"},"nativeSrc":"4755:31:36","nodeType":"YulExpressionStatement","src":"4755:31:36"},{"nativeSrc":"4795:15:36","nodeType":"YulAssignment","src":"4795:15:36","value":{"name":"value","nativeSrc":"4805:5:36","nodeType":"YulIdentifier","src":"4805:5:36"},"variableNames":[{"name":"value0","nativeSrc":"4795:6:36","nodeType":"YulIdentifier","src":"4795:6:36"}]},{"nativeSrc":"4819:47:36","nodeType":"YulVariableDeclaration","src":"4819:47:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4851:9:36","nodeType":"YulIdentifier","src":"4851:9:36"},{"kind":"number","nativeSrc":"4862:2:36","nodeType":"YulLiteral","src":"4862:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4847:3:36","nodeType":"YulIdentifier","src":"4847:3:36"},"nativeSrc":"4847:18:36","nodeType":"YulFunctionCall","src":"4847:18:36"}],"functionName":{"name":"calldataload","nativeSrc":"4834:12:36","nodeType":"YulIdentifier","src":"4834:12:36"},"nativeSrc":"4834:32:36","nodeType":"YulFunctionCall","src":"4834:32:36"},"variables":[{"name":"value_1","nativeSrc":"4823:7:36","nodeType":"YulTypedName","src":"4823:7:36","type":""}]},{"expression":{"arguments":[{"name":"value_1","nativeSrc":"4900:7:36","nodeType":"YulIdentifier","src":"4900:7:36"}],"functionName":{"name":"validator_revert_address","nativeSrc":"4875:24:36","nodeType":"YulIdentifier","src":"4875:24:36"},"nativeSrc":"4875:33:36","nodeType":"YulFunctionCall","src":"4875:33:36"},"nativeSrc":"4875:33:36","nodeType":"YulExpressionStatement","src":"4875:33:36"},{"nativeSrc":"4917:17:36","nodeType":"YulAssignment","src":"4917:17:36","value":{"name":"value_1","nativeSrc":"4927:7:36","nodeType":"YulIdentifier","src":"4927:7:36"},"variableNames":[{"name":"value1","nativeSrc":"4917:6:36","nodeType":"YulIdentifier","src":"4917:6:36"}]},{"nativeSrc":"4943:16:36","nodeType":"YulVariableDeclaration","src":"4943:16:36","value":{"kind":"number","nativeSrc":"4958:1:36","nodeType":"YulLiteral","src":"4958:1:36","type":"","value":"0"},"variables":[{"name":"value_2","nativeSrc":"4947:7:36","nodeType":"YulTypedName","src":"4947:7:36","type":""}]},{"nativeSrc":"4968:43:36","nodeType":"YulAssignment","src":"4968:43:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4996:9:36","nodeType":"YulIdentifier","src":"4996:9:36"},{"kind":"number","nativeSrc":"5007:2:36","nodeType":"YulLiteral","src":"5007:2:36","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4992:3:36","nodeType":"YulIdentifier","src":"4992:3:36"},"nativeSrc":"4992:18:36","nodeType":"YulFunctionCall","src":"4992:18:36"}],"functionName":{"name":"calldataload","nativeSrc":"4979:12:36","nodeType":"YulIdentifier","src":"4979:12:36"},"nativeSrc":"4979:32:36","nodeType":"YulFunctionCall","src":"4979:32:36"},"variableNames":[{"name":"value_2","nativeSrc":"4968:7:36","nodeType":"YulIdentifier","src":"4968:7:36"}]},{"nativeSrc":"5020:17:36","nodeType":"YulAssignment","src":"5020:17:36","value":{"name":"value_2","nativeSrc":"5030:7:36","nodeType":"YulIdentifier","src":"5030:7:36"},"variableNames":[{"name":"value2","nativeSrc":"5020:6:36","nodeType":"YulIdentifier","src":"5020:6:36"}]},{"nativeSrc":"5046:46:36","nodeType":"YulVariableDeclaration","src":"5046:46:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5077:9:36","nodeType":"YulIdentifier","src":"5077:9:36"},{"kind":"number","nativeSrc":"5088:2:36","nodeType":"YulLiteral","src":"5088:2:36","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"5073:3:36","nodeType":"YulIdentifier","src":"5073:3:36"},"nativeSrc":"5073:18:36","nodeType":"YulFunctionCall","src":"5073:18:36"}],"functionName":{"name":"calldataload","nativeSrc":"5060:12:36","nodeType":"YulIdentifier","src":"5060:12:36"},"nativeSrc":"5060:32:36","nodeType":"YulFunctionCall","src":"5060:32:36"},"variables":[{"name":"offset","nativeSrc":"5050:6:36","nodeType":"YulTypedName","src":"5050:6:36","type":""}]},{"body":{"nativeSrc":"5135:16:36","nodeType":"YulBlock","src":"5135:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5144:1:36","nodeType":"YulLiteral","src":"5144:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"5147:1:36","nodeType":"YulLiteral","src":"5147:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5137:6:36","nodeType":"YulIdentifier","src":"5137:6:36"},"nativeSrc":"5137:12:36","nodeType":"YulFunctionCall","src":"5137:12:36"},"nativeSrc":"5137:12:36","nodeType":"YulExpressionStatement","src":"5137:12:36"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"5107:6:36","nodeType":"YulIdentifier","src":"5107:6:36"},{"kind":"number","nativeSrc":"5115:18:36","nodeType":"YulLiteral","src":"5115:18:36","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"5104:2:36","nodeType":"YulIdentifier","src":"5104:2:36"},"nativeSrc":"5104:30:36","nodeType":"YulFunctionCall","src":"5104:30:36"},"nativeSrc":"5101:50:36","nodeType":"YulIf","src":"5101:50:36"},{"nativeSrc":"5160:32:36","nodeType":"YulVariableDeclaration","src":"5160:32:36","value":{"arguments":[{"name":"headStart","nativeSrc":"5174:9:36","nodeType":"YulIdentifier","src":"5174:9:36"},{"name":"offset","nativeSrc":"5185:6:36","nodeType":"YulIdentifier","src":"5185:6:36"}],"functionName":{"name":"add","nativeSrc":"5170:3:36","nodeType":"YulIdentifier","src":"5170:3:36"},"nativeSrc":"5170:22:36","nodeType":"YulFunctionCall","src":"5170:22:36"},"variables":[{"name":"_1","nativeSrc":"5164:2:36","nodeType":"YulTypedName","src":"5164:2:36","type":""}]},{"body":{"nativeSrc":"5240:16:36","nodeType":"YulBlock","src":"5240:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5249:1:36","nodeType":"YulLiteral","src":"5249:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"5252:1:36","nodeType":"YulLiteral","src":"5252:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5242:6:36","nodeType":"YulIdentifier","src":"5242:6:36"},"nativeSrc":"5242:12:36","nodeType":"YulFunctionCall","src":"5242:12:36"},"nativeSrc":"5242:12:36","nodeType":"YulExpressionStatement","src":"5242:12:36"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"5219:2:36","nodeType":"YulIdentifier","src":"5219:2:36"},{"kind":"number","nativeSrc":"5223:4:36","nodeType":"YulLiteral","src":"5223:4:36","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"5215:3:36","nodeType":"YulIdentifier","src":"5215:3:36"},"nativeSrc":"5215:13:36","nodeType":"YulFunctionCall","src":"5215:13:36"},{"name":"dataEnd","nativeSrc":"5230:7:36","nodeType":"YulIdentifier","src":"5230:7:36"}],"functionName":{"name":"slt","nativeSrc":"5211:3:36","nodeType":"YulIdentifier","src":"5211:3:36"},"nativeSrc":"5211:27:36","nodeType":"YulFunctionCall","src":"5211:27:36"}],"functionName":{"name":"iszero","nativeSrc":"5204:6:36","nodeType":"YulIdentifier","src":"5204:6:36"},"nativeSrc":"5204:35:36","nodeType":"YulFunctionCall","src":"5204:35:36"},"nativeSrc":"5201:55:36","nodeType":"YulIf","src":"5201:55:36"},{"nativeSrc":"5265:30:36","nodeType":"YulVariableDeclaration","src":"5265:30:36","value":{"arguments":[{"name":"_1","nativeSrc":"5292:2:36","nodeType":"YulIdentifier","src":"5292:2:36"}],"functionName":{"name":"calldataload","nativeSrc":"5279:12:36","nodeType":"YulIdentifier","src":"5279:12:36"},"nativeSrc":"5279:16:36","nodeType":"YulFunctionCall","src":"5279:16:36"},"variables":[{"name":"length","nativeSrc":"5269:6:36","nodeType":"YulTypedName","src":"5269:6:36","type":""}]},{"body":{"nativeSrc":"5338:16:36","nodeType":"YulBlock","src":"5338:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5347:1:36","nodeType":"YulLiteral","src":"5347:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"5350:1:36","nodeType":"YulLiteral","src":"5350:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5340:6:36","nodeType":"YulIdentifier","src":"5340:6:36"},"nativeSrc":"5340:12:36","nodeType":"YulFunctionCall","src":"5340:12:36"},"nativeSrc":"5340:12:36","nodeType":"YulExpressionStatement","src":"5340:12:36"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"5310:6:36","nodeType":"YulIdentifier","src":"5310:6:36"},{"kind":"number","nativeSrc":"5318:18:36","nodeType":"YulLiteral","src":"5318:18:36","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"5307:2:36","nodeType":"YulIdentifier","src":"5307:2:36"},"nativeSrc":"5307:30:36","nodeType":"YulFunctionCall","src":"5307:30:36"},"nativeSrc":"5304:50:36","nodeType":"YulIf","src":"5304:50:36"},{"body":{"nativeSrc":"5404:16:36","nodeType":"YulBlock","src":"5404:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5413:1:36","nodeType":"YulLiteral","src":"5413:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"5416:1:36","nodeType":"YulLiteral","src":"5416:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5406:6:36","nodeType":"YulIdentifier","src":"5406:6:36"},"nativeSrc":"5406:12:36","nodeType":"YulFunctionCall","src":"5406:12:36"},"nativeSrc":"5406:12:36","nodeType":"YulExpressionStatement","src":"5406:12:36"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"5377:2:36","nodeType":"YulIdentifier","src":"5377:2:36"},{"name":"length","nativeSrc":"5381:6:36","nodeType":"YulIdentifier","src":"5381:6:36"}],"functionName":{"name":"add","nativeSrc":"5373:3:36","nodeType":"YulIdentifier","src":"5373:3:36"},"nativeSrc":"5373:15:36","nodeType":"YulFunctionCall","src":"5373:15:36"},{"kind":"number","nativeSrc":"5390:2:36","nodeType":"YulLiteral","src":"5390:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5369:3:36","nodeType":"YulIdentifier","src":"5369:3:36"},"nativeSrc":"5369:24:36","nodeType":"YulFunctionCall","src":"5369:24:36"},{"name":"dataEnd","nativeSrc":"5395:7:36","nodeType":"YulIdentifier","src":"5395:7:36"}],"functionName":{"name":"gt","nativeSrc":"5366:2:36","nodeType":"YulIdentifier","src":"5366:2:36"},"nativeSrc":"5366:37:36","nodeType":"YulFunctionCall","src":"5366:37:36"},"nativeSrc":"5363:57:36","nodeType":"YulIf","src":"5363:57:36"},{"nativeSrc":"5429:21:36","nodeType":"YulAssignment","src":"5429:21:36","value":{"arguments":[{"name":"_1","nativeSrc":"5443:2:36","nodeType":"YulIdentifier","src":"5443:2:36"},{"kind":"number","nativeSrc":"5447:2:36","nodeType":"YulLiteral","src":"5447:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5439:3:36","nodeType":"YulIdentifier","src":"5439:3:36"},"nativeSrc":"5439:11:36","nodeType":"YulFunctionCall","src":"5439:11:36"},"variableNames":[{"name":"value3","nativeSrc":"5429:6:36","nodeType":"YulIdentifier","src":"5429:6:36"}]},{"nativeSrc":"5459:16:36","nodeType":"YulAssignment","src":"5459:16:36","value":{"name":"length","nativeSrc":"5469:6:36","nodeType":"YulIdentifier","src":"5469:6:36"},"variableNames":[{"name":"value4","nativeSrc":"5459:6:36","nodeType":"YulIdentifier","src":"5459:6:36"}]}]},"name":"abi_decode_tuple_t_contract$_IERC3156FlashBorrower_$291t_addresst_uint256t_bytes_calldata_ptr","nativeSrc":"4469:1012:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4572:9:36","nodeType":"YulTypedName","src":"4572:9:36","type":""},{"name":"dataEnd","nativeSrc":"4583:7:36","nodeType":"YulTypedName","src":"4583:7:36","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4595:6:36","nodeType":"YulTypedName","src":"4595:6:36","type":""},{"name":"value1","nativeSrc":"4603:6:36","nodeType":"YulTypedName","src":"4603:6:36","type":""},{"name":"value2","nativeSrc":"4611:6:36","nodeType":"YulTypedName","src":"4611:6:36","type":""},{"name":"value3","nativeSrc":"4619:6:36","nodeType":"YulTypedName","src":"4619:6:36","type":""},{"name":"value4","nativeSrc":"4627:6:36","nodeType":"YulTypedName","src":"4627:6:36","type":""}],"src":"4469:1012:36"},{"body":{"nativeSrc":"5556:177:36","nodeType":"YulBlock","src":"5556:177:36","statements":[{"body":{"nativeSrc":"5602:16:36","nodeType":"YulBlock","src":"5602:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5611:1:36","nodeType":"YulLiteral","src":"5611:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"5614:1:36","nodeType":"YulLiteral","src":"5614:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5604:6:36","nodeType":"YulIdentifier","src":"5604:6:36"},"nativeSrc":"5604:12:36","nodeType":"YulFunctionCall","src":"5604:12:36"},"nativeSrc":"5604:12:36","nodeType":"YulExpressionStatement","src":"5604:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5577:7:36","nodeType":"YulIdentifier","src":"5577:7:36"},{"name":"headStart","nativeSrc":"5586:9:36","nodeType":"YulIdentifier","src":"5586:9:36"}],"functionName":{"name":"sub","nativeSrc":"5573:3:36","nodeType":"YulIdentifier","src":"5573:3:36"},"nativeSrc":"5573:23:36","nodeType":"YulFunctionCall","src":"5573:23:36"},{"kind":"number","nativeSrc":"5598:2:36","nodeType":"YulLiteral","src":"5598:2:36","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"5569:3:36","nodeType":"YulIdentifier","src":"5569:3:36"},"nativeSrc":"5569:32:36","nodeType":"YulFunctionCall","src":"5569:32:36"},"nativeSrc":"5566:52:36","nodeType":"YulIf","src":"5566:52:36"},{"nativeSrc":"5627:36:36","nodeType":"YulVariableDeclaration","src":"5627:36:36","value":{"arguments":[{"name":"headStart","nativeSrc":"5653:9:36","nodeType":"YulIdentifier","src":"5653:9:36"}],"functionName":{"name":"calldataload","nativeSrc":"5640:12:36","nodeType":"YulIdentifier","src":"5640:12:36"},"nativeSrc":"5640:23:36","nodeType":"YulFunctionCall","src":"5640:23:36"},"variables":[{"name":"value","nativeSrc":"5631:5:36","nodeType":"YulTypedName","src":"5631:5:36","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"5697:5:36","nodeType":"YulIdentifier","src":"5697:5:36"}],"functionName":{"name":"validator_revert_address","nativeSrc":"5672:24:36","nodeType":"YulIdentifier","src":"5672:24:36"},"nativeSrc":"5672:31:36","nodeType":"YulFunctionCall","src":"5672:31:36"},"nativeSrc":"5672:31:36","nodeType":"YulExpressionStatement","src":"5672:31:36"},{"nativeSrc":"5712:15:36","nodeType":"YulAssignment","src":"5712:15:36","value":{"name":"value","nativeSrc":"5722:5:36","nodeType":"YulIdentifier","src":"5722:5:36"},"variableNames":[{"name":"value0","nativeSrc":"5712:6:36","nodeType":"YulIdentifier","src":"5712:6:36"}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"5486:247:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5522:9:36","nodeType":"YulTypedName","src":"5522:9:36","type":""},{"name":"dataEnd","nativeSrc":"5533:7:36","nodeType":"YulTypedName","src":"5533:7:36","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5545:6:36","nodeType":"YulTypedName","src":"5545:6:36","type":""}],"src":"5486:247:36"},{"body":{"nativeSrc":"6095:881:36","nodeType":"YulBlock","src":"6095:881:36","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6112:9:36","nodeType":"YulIdentifier","src":"6112:9:36"},{"arguments":[{"name":"value0","nativeSrc":"6127:6:36","nodeType":"YulIdentifier","src":"6127:6:36"},{"arguments":[{"kind":"number","nativeSrc":"6139:3:36","nodeType":"YulLiteral","src":"6139:3:36","type":"","value":"248"},{"kind":"number","nativeSrc":"6144:3:36","nodeType":"YulLiteral","src":"6144:3:36","type":"","value":"255"}],"functionName":{"name":"shl","nativeSrc":"6135:3:36","nodeType":"YulIdentifier","src":"6135:3:36"},"nativeSrc":"6135:13:36","nodeType":"YulFunctionCall","src":"6135:13:36"}],"functionName":{"name":"and","nativeSrc":"6123:3:36","nodeType":"YulIdentifier","src":"6123:3:36"},"nativeSrc":"6123:26:36","nodeType":"YulFunctionCall","src":"6123:26:36"}],"functionName":{"name":"mstore","nativeSrc":"6105:6:36","nodeType":"YulIdentifier","src":"6105:6:36"},"nativeSrc":"6105:45:36","nodeType":"YulFunctionCall","src":"6105:45:36"},"nativeSrc":"6105:45:36","nodeType":"YulExpressionStatement","src":"6105:45:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6170:9:36","nodeType":"YulIdentifier","src":"6170:9:36"},{"kind":"number","nativeSrc":"6181:2:36","nodeType":"YulLiteral","src":"6181:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6166:3:36","nodeType":"YulIdentifier","src":"6166:3:36"},"nativeSrc":"6166:18:36","nodeType":"YulFunctionCall","src":"6166:18:36"},{"kind":"number","nativeSrc":"6186:3:36","nodeType":"YulLiteral","src":"6186:3:36","type":"","value":"224"}],"functionName":{"name":"mstore","nativeSrc":"6159:6:36","nodeType":"YulIdentifier","src":"6159:6:36"},"nativeSrc":"6159:31:36","nodeType":"YulFunctionCall","src":"6159:31:36"},"nativeSrc":"6159:31:36","nodeType":"YulExpressionStatement","src":"6159:31:36"},{"nativeSrc":"6199:60:36","nodeType":"YulVariableDeclaration","src":"6199:60:36","value":{"arguments":[{"name":"value1","nativeSrc":"6231:6:36","nodeType":"YulIdentifier","src":"6231:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"6243:9:36","nodeType":"YulIdentifier","src":"6243:9:36"},{"kind":"number","nativeSrc":"6254:3:36","nodeType":"YulLiteral","src":"6254:3:36","type":"","value":"224"}],"functionName":{"name":"add","nativeSrc":"6239:3:36","nodeType":"YulIdentifier","src":"6239:3:36"},"nativeSrc":"6239:19:36","nodeType":"YulFunctionCall","src":"6239:19:36"}],"functionName":{"name":"abi_encode_string","nativeSrc":"6213:17:36","nodeType":"YulIdentifier","src":"6213:17:36"},"nativeSrc":"6213:46:36","nodeType":"YulFunctionCall","src":"6213:46:36"},"variables":[{"name":"tail_1","nativeSrc":"6203:6:36","nodeType":"YulTypedName","src":"6203:6:36","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6279:9:36","nodeType":"YulIdentifier","src":"6279:9:36"},{"kind":"number","nativeSrc":"6290:2:36","nodeType":"YulLiteral","src":"6290:2:36","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6275:3:36","nodeType":"YulIdentifier","src":"6275:3:36"},"nativeSrc":"6275:18:36","nodeType":"YulFunctionCall","src":"6275:18:36"},{"arguments":[{"name":"tail_1","nativeSrc":"6299:6:36","nodeType":"YulIdentifier","src":"6299:6:36"},{"name":"headStart","nativeSrc":"6307:9:36","nodeType":"YulIdentifier","src":"6307:9:36"}],"functionName":{"name":"sub","nativeSrc":"6295:3:36","nodeType":"YulIdentifier","src":"6295:3:36"},"nativeSrc":"6295:22:36","nodeType":"YulFunctionCall","src":"6295:22:36"}],"functionName":{"name":"mstore","nativeSrc":"6268:6:36","nodeType":"YulIdentifier","src":"6268:6:36"},"nativeSrc":"6268:50:36","nodeType":"YulFunctionCall","src":"6268:50:36"},"nativeSrc":"6268:50:36","nodeType":"YulExpressionStatement","src":"6268:50:36"},{"nativeSrc":"6327:47:36","nodeType":"YulVariableDeclaration","src":"6327:47:36","value":{"arguments":[{"name":"value2","nativeSrc":"6359:6:36","nodeType":"YulIdentifier","src":"6359:6:36"},{"name":"tail_1","nativeSrc":"6367:6:36","nodeType":"YulIdentifier","src":"6367:6:36"}],"functionName":{"name":"abi_encode_string","nativeSrc":"6341:17:36","nodeType":"YulIdentifier","src":"6341:17:36"},"nativeSrc":"6341:33:36","nodeType":"YulFunctionCall","src":"6341:33:36"},"variables":[{"name":"tail_2","nativeSrc":"6331:6:36","nodeType":"YulTypedName","src":"6331:6:36","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6394:9:36","nodeType":"YulIdentifier","src":"6394:9:36"},{"kind":"number","nativeSrc":"6405:2:36","nodeType":"YulLiteral","src":"6405:2:36","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6390:3:36","nodeType":"YulIdentifier","src":"6390:3:36"},"nativeSrc":"6390:18:36","nodeType":"YulFunctionCall","src":"6390:18:36"},{"name":"value3","nativeSrc":"6410:6:36","nodeType":"YulIdentifier","src":"6410:6:36"}],"functionName":{"name":"mstore","nativeSrc":"6383:6:36","nodeType":"YulIdentifier","src":"6383:6:36"},"nativeSrc":"6383:34:36","nodeType":"YulFunctionCall","src":"6383:34:36"},"nativeSrc":"6383:34:36","nodeType":"YulExpressionStatement","src":"6383:34:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6437:9:36","nodeType":"YulIdentifier","src":"6437:9:36"},{"kind":"number","nativeSrc":"6448:3:36","nodeType":"YulLiteral","src":"6448:3:36","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"6433:3:36","nodeType":"YulIdentifier","src":"6433:3:36"},"nativeSrc":"6433:19:36","nodeType":"YulFunctionCall","src":"6433:19:36"},{"arguments":[{"name":"value4","nativeSrc":"6458:6:36","nodeType":"YulIdentifier","src":"6458:6:36"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6474:3:36","nodeType":"YulLiteral","src":"6474:3:36","type":"","value":"160"},{"kind":"number","nativeSrc":"6479:1:36","nodeType":"YulLiteral","src":"6479:1:36","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"6470:3:36","nodeType":"YulIdentifier","src":"6470:3:36"},"nativeSrc":"6470:11:36","nodeType":"YulFunctionCall","src":"6470:11:36"},{"kind":"number","nativeSrc":"6483:1:36","nodeType":"YulLiteral","src":"6483:1:36","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"6466:3:36","nodeType":"YulIdentifier","src":"6466:3:36"},"nativeSrc":"6466:19:36","nodeType":"YulFunctionCall","src":"6466:19:36"}],"functionName":{"name":"and","nativeSrc":"6454:3:36","nodeType":"YulIdentifier","src":"6454:3:36"},"nativeSrc":"6454:32:36","nodeType":"YulFunctionCall","src":"6454:32:36"}],"functionName":{"name":"mstore","nativeSrc":"6426:6:36","nodeType":"YulIdentifier","src":"6426:6:36"},"nativeSrc":"6426:61:36","nodeType":"YulFunctionCall","src":"6426:61:36"},"nativeSrc":"6426:61:36","nodeType":"YulExpressionStatement","src":"6426:61:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6507:9:36","nodeType":"YulIdentifier","src":"6507:9:36"},{"kind":"number","nativeSrc":"6518:3:36","nodeType":"YulLiteral","src":"6518:3:36","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"6503:3:36","nodeType":"YulIdentifier","src":"6503:3:36"},"nativeSrc":"6503:19:36","nodeType":"YulFunctionCall","src":"6503:19:36"},{"name":"value5","nativeSrc":"6524:6:36","nodeType":"YulIdentifier","src":"6524:6:36"}],"functionName":{"name":"mstore","nativeSrc":"6496:6:36","nodeType":"YulIdentifier","src":"6496:6:36"},"nativeSrc":"6496:35:36","nodeType":"YulFunctionCall","src":"6496:35:36"},"nativeSrc":"6496:35:36","nodeType":"YulExpressionStatement","src":"6496:35:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6551:9:36","nodeType":"YulIdentifier","src":"6551:9:36"},{"kind":"number","nativeSrc":"6562:3:36","nodeType":"YulLiteral","src":"6562:3:36","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"6547:3:36","nodeType":"YulIdentifier","src":"6547:3:36"},"nativeSrc":"6547:19:36","nodeType":"YulFunctionCall","src":"6547:19:36"},{"arguments":[{"name":"tail_2","nativeSrc":"6572:6:36","nodeType":"YulIdentifier","src":"6572:6:36"},{"name":"headStart","nativeSrc":"6580:9:36","nodeType":"YulIdentifier","src":"6580:9:36"}],"functionName":{"name":"sub","nativeSrc":"6568:3:36","nodeType":"YulIdentifier","src":"6568:3:36"},"nativeSrc":"6568:22:36","nodeType":"YulFunctionCall","src":"6568:22:36"}],"functionName":{"name":"mstore","nativeSrc":"6540:6:36","nodeType":"YulIdentifier","src":"6540:6:36"},"nativeSrc":"6540:51:36","nodeType":"YulFunctionCall","src":"6540:51:36"},"nativeSrc":"6540:51:36","nodeType":"YulExpressionStatement","src":"6540:51:36"},{"nativeSrc":"6600:17:36","nodeType":"YulVariableDeclaration","src":"6600:17:36","value":{"name":"tail_2","nativeSrc":"6611:6:36","nodeType":"YulIdentifier","src":"6611:6:36"},"variables":[{"name":"pos","nativeSrc":"6604:3:36","nodeType":"YulTypedName","src":"6604:3:36","type":""}]},{"nativeSrc":"6626:27:36","nodeType":"YulVariableDeclaration","src":"6626:27:36","value":{"arguments":[{"name":"value6","nativeSrc":"6646:6:36","nodeType":"YulIdentifier","src":"6646:6:36"}],"functionName":{"name":"mload","nativeSrc":"6640:5:36","nodeType":"YulIdentifier","src":"6640:5:36"},"nativeSrc":"6640:13:36","nodeType":"YulFunctionCall","src":"6640:13:36"},"variables":[{"name":"length","nativeSrc":"6630:6:36","nodeType":"YulTypedName","src":"6630:6:36","type":""}]},{"expression":{"arguments":[{"name":"tail_2","nativeSrc":"6669:6:36","nodeType":"YulIdentifier","src":"6669:6:36"},{"name":"length","nativeSrc":"6677:6:36","nodeType":"YulIdentifier","src":"6677:6:36"}],"functionName":{"name":"mstore","nativeSrc":"6662:6:36","nodeType":"YulIdentifier","src":"6662:6:36"},"nativeSrc":"6662:22:36","nodeType":"YulFunctionCall","src":"6662:22:36"},"nativeSrc":"6662:22:36","nodeType":"YulExpressionStatement","src":"6662:22:36"},{"nativeSrc":"6693:22:36","nodeType":"YulAssignment","src":"6693:22:36","value":{"arguments":[{"name":"tail_2","nativeSrc":"6704:6:36","nodeType":"YulIdentifier","src":"6704:6:36"},{"kind":"number","nativeSrc":"6712:2:36","nodeType":"YulLiteral","src":"6712:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6700:3:36","nodeType":"YulIdentifier","src":"6700:3:36"},"nativeSrc":"6700:15:36","nodeType":"YulFunctionCall","src":"6700:15:36"},"variableNames":[{"name":"pos","nativeSrc":"6693:3:36","nodeType":"YulIdentifier","src":"6693:3:36"}]},{"nativeSrc":"6724:29:36","nodeType":"YulVariableDeclaration","src":"6724:29:36","value":{"arguments":[{"name":"value6","nativeSrc":"6742:6:36","nodeType":"YulIdentifier","src":"6742:6:36"},{"kind":"number","nativeSrc":"6750:2:36","nodeType":"YulLiteral","src":"6750:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6738:3:36","nodeType":"YulIdentifier","src":"6738:3:36"},"nativeSrc":"6738:15:36","nodeType":"YulFunctionCall","src":"6738:15:36"},"variables":[{"name":"srcPtr","nativeSrc":"6728:6:36","nodeType":"YulTypedName","src":"6728:6:36","type":""}]},{"nativeSrc":"6762:10:36","nodeType":"YulVariableDeclaration","src":"6762:10:36","value":{"kind":"number","nativeSrc":"6771:1:36","nodeType":"YulLiteral","src":"6771:1:36","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"6766:1:36","nodeType":"YulTypedName","src":"6766:1:36","type":""}]},{"body":{"nativeSrc":"6830:120:36","nodeType":"YulBlock","src":"6830:120:36","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6851:3:36","nodeType":"YulIdentifier","src":"6851:3:36"},{"arguments":[{"name":"srcPtr","nativeSrc":"6862:6:36","nodeType":"YulIdentifier","src":"6862:6:36"}],"functionName":{"name":"mload","nativeSrc":"6856:5:36","nodeType":"YulIdentifier","src":"6856:5:36"},"nativeSrc":"6856:13:36","nodeType":"YulFunctionCall","src":"6856:13:36"}],"functionName":{"name":"mstore","nativeSrc":"6844:6:36","nodeType":"YulIdentifier","src":"6844:6:36"},"nativeSrc":"6844:26:36","nodeType":"YulFunctionCall","src":"6844:26:36"},"nativeSrc":"6844:26:36","nodeType":"YulExpressionStatement","src":"6844:26:36"},{"nativeSrc":"6883:19:36","nodeType":"YulAssignment","src":"6883:19:36","value":{"arguments":[{"name":"pos","nativeSrc":"6894:3:36","nodeType":"YulIdentifier","src":"6894:3:36"},{"kind":"number","nativeSrc":"6899:2:36","nodeType":"YulLiteral","src":"6899:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6890:3:36","nodeType":"YulIdentifier","src":"6890:3:36"},"nativeSrc":"6890:12:36","nodeType":"YulFunctionCall","src":"6890:12:36"},"variableNames":[{"name":"pos","nativeSrc":"6883:3:36","nodeType":"YulIdentifier","src":"6883:3:36"}]},{"nativeSrc":"6915:25:36","nodeType":"YulAssignment","src":"6915:25:36","value":{"arguments":[{"name":"srcPtr","nativeSrc":"6929:6:36","nodeType":"YulIdentifier","src":"6929:6:36"},{"kind":"number","nativeSrc":"6937:2:36","nodeType":"YulLiteral","src":"6937:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6925:3:36","nodeType":"YulIdentifier","src":"6925:3:36"},"nativeSrc":"6925:15:36","nodeType":"YulFunctionCall","src":"6925:15:36"},"variableNames":[{"name":"srcPtr","nativeSrc":"6915:6:36","nodeType":"YulIdentifier","src":"6915:6:36"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"6792:1:36","nodeType":"YulIdentifier","src":"6792:1:36"},{"name":"length","nativeSrc":"6795:6:36","nodeType":"YulIdentifier","src":"6795:6:36"}],"functionName":{"name":"lt","nativeSrc":"6789:2:36","nodeType":"YulIdentifier","src":"6789:2:36"},"nativeSrc":"6789:13:36","nodeType":"YulFunctionCall","src":"6789:13:36"},"nativeSrc":"6781:169:36","nodeType":"YulForLoop","post":{"nativeSrc":"6803:18:36","nodeType":"YulBlock","src":"6803:18:36","statements":[{"nativeSrc":"6805:14:36","nodeType":"YulAssignment","src":"6805:14:36","value":{"arguments":[{"name":"i","nativeSrc":"6814:1:36","nodeType":"YulIdentifier","src":"6814:1:36"},{"kind":"number","nativeSrc":"6817:1:36","nodeType":"YulLiteral","src":"6817:1:36","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"6810:3:36","nodeType":"YulIdentifier","src":"6810:3:36"},"nativeSrc":"6810:9:36","nodeType":"YulFunctionCall","src":"6810:9:36"},"variableNames":[{"name":"i","nativeSrc":"6805:1:36","nodeType":"YulIdentifier","src":"6805:1:36"}]}]},"pre":{"nativeSrc":"6785:3:36","nodeType":"YulBlock","src":"6785:3:36","statements":[]},"src":"6781:169:36"},{"nativeSrc":"6959:11:36","nodeType":"YulAssignment","src":"6959:11:36","value":{"name":"pos","nativeSrc":"6967:3:36","nodeType":"YulIdentifier","src":"6967:3:36"},"variableNames":[{"name":"tail","nativeSrc":"6959:4:36","nodeType":"YulIdentifier","src":"6959:4:36"}]}]},"name":"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"5738:1238:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6016:9:36","nodeType":"YulTypedName","src":"6016:9:36","type":""},{"name":"value6","nativeSrc":"6027:6:36","nodeType":"YulTypedName","src":"6027:6:36","type":""},{"name":"value5","nativeSrc":"6035:6:36","nodeType":"YulTypedName","src":"6035:6:36","type":""},{"name":"value4","nativeSrc":"6043:6:36","nodeType":"YulTypedName","src":"6043:6:36","type":""},{"name":"value3","nativeSrc":"6051:6:36","nodeType":"YulTypedName","src":"6051:6:36","type":""},{"name":"value2","nativeSrc":"6059:6:36","nodeType":"YulTypedName","src":"6059:6:36","type":""},{"name":"value1","nativeSrc":"6067:6:36","nodeType":"YulTypedName","src":"6067:6:36","type":""},{"name":"value0","nativeSrc":"6075:6:36","nodeType":"YulTypedName","src":"6075:6:36","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6086:4:36","nodeType":"YulTypedName","src":"6086:4:36","type":""}],"src":"5738:1238:36"},{"body":{"nativeSrc":"7082:102:36","nodeType":"YulBlock","src":"7082:102:36","statements":[{"nativeSrc":"7092:26:36","nodeType":"YulAssignment","src":"7092:26:36","value":{"arguments":[{"name":"headStart","nativeSrc":"7104:9:36","nodeType":"YulIdentifier","src":"7104:9:36"},{"kind":"number","nativeSrc":"7115:2:36","nodeType":"YulLiteral","src":"7115:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7100:3:36","nodeType":"YulIdentifier","src":"7100:3:36"},"nativeSrc":"7100:18:36","nodeType":"YulFunctionCall","src":"7100:18:36"},"variableNames":[{"name":"tail","nativeSrc":"7092:4:36","nodeType":"YulIdentifier","src":"7092:4:36"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"7134:9:36","nodeType":"YulIdentifier","src":"7134:9:36"},{"arguments":[{"name":"value0","nativeSrc":"7149:6:36","nodeType":"YulIdentifier","src":"7149:6:36"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7165:3:36","nodeType":"YulLiteral","src":"7165:3:36","type":"","value":"160"},{"kind":"number","nativeSrc":"7170:1:36","nodeType":"YulLiteral","src":"7170:1:36","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"7161:3:36","nodeType":"YulIdentifier","src":"7161:3:36"},"nativeSrc":"7161:11:36","nodeType":"YulFunctionCall","src":"7161:11:36"},{"kind":"number","nativeSrc":"7174:1:36","nodeType":"YulLiteral","src":"7174:1:36","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"7157:3:36","nodeType":"YulIdentifier","src":"7157:3:36"},"nativeSrc":"7157:19:36","nodeType":"YulFunctionCall","src":"7157:19:36"}],"functionName":{"name":"and","nativeSrc":"7145:3:36","nodeType":"YulIdentifier","src":"7145:3:36"},"nativeSrc":"7145:32:36","nodeType":"YulFunctionCall","src":"7145:32:36"}],"functionName":{"name":"mstore","nativeSrc":"7127:6:36","nodeType":"YulIdentifier","src":"7127:6:36"},"nativeSrc":"7127:51:36","nodeType":"YulFunctionCall","src":"7127:51:36"},"nativeSrc":"7127:51:36","nodeType":"YulExpressionStatement","src":"7127:51:36"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"6981:203:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7051:9:36","nodeType":"YulTypedName","src":"7051:9:36","type":""},{"name":"value0","nativeSrc":"7062:6:36","nodeType":"YulTypedName","src":"7062:6:36","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7073:4:36","nodeType":"YulTypedName","src":"7073:4:36","type":""}],"src":"6981:203:36"},{"body":{"nativeSrc":"7319:587:36","nodeType":"YulBlock","src":"7319:587:36","statements":[{"body":{"nativeSrc":"7366:16:36","nodeType":"YulBlock","src":"7366:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7375:1:36","nodeType":"YulLiteral","src":"7375:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"7378:1:36","nodeType":"YulLiteral","src":"7378:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7368:6:36","nodeType":"YulIdentifier","src":"7368:6:36"},"nativeSrc":"7368:12:36","nodeType":"YulFunctionCall","src":"7368:12:36"},"nativeSrc":"7368:12:36","nodeType":"YulExpressionStatement","src":"7368:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"7340:7:36","nodeType":"YulIdentifier","src":"7340:7:36"},{"name":"headStart","nativeSrc":"7349:9:36","nodeType":"YulIdentifier","src":"7349:9:36"}],"functionName":{"name":"sub","nativeSrc":"7336:3:36","nodeType":"YulIdentifier","src":"7336:3:36"},"nativeSrc":"7336:23:36","nodeType":"YulFunctionCall","src":"7336:23:36"},{"kind":"number","nativeSrc":"7361:3:36","nodeType":"YulLiteral","src":"7361:3:36","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"7332:3:36","nodeType":"YulIdentifier","src":"7332:3:36"},"nativeSrc":"7332:33:36","nodeType":"YulFunctionCall","src":"7332:33:36"},"nativeSrc":"7329:53:36","nodeType":"YulIf","src":"7329:53:36"},{"nativeSrc":"7391:36:36","nodeType":"YulVariableDeclaration","src":"7391:36:36","value":{"arguments":[{"name":"headStart","nativeSrc":"7417:9:36","nodeType":"YulIdentifier","src":"7417:9:36"}],"functionName":{"name":"calldataload","nativeSrc":"7404:12:36","nodeType":"YulIdentifier","src":"7404:12:36"},"nativeSrc":"7404:23:36","nodeType":"YulFunctionCall","src":"7404:23:36"},"variables":[{"name":"value","nativeSrc":"7395:5:36","nodeType":"YulTypedName","src":"7395:5:36","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"7461:5:36","nodeType":"YulIdentifier","src":"7461:5:36"}],"functionName":{"name":"validator_revert_address","nativeSrc":"7436:24:36","nodeType":"YulIdentifier","src":"7436:24:36"},"nativeSrc":"7436:31:36","nodeType":"YulFunctionCall","src":"7436:31:36"},"nativeSrc":"7436:31:36","nodeType":"YulExpressionStatement","src":"7436:31:36"},{"nativeSrc":"7476:15:36","nodeType":"YulAssignment","src":"7476:15:36","value":{"name":"value","nativeSrc":"7486:5:36","nodeType":"YulIdentifier","src":"7486:5:36"},"variableNames":[{"name":"value0","nativeSrc":"7476:6:36","nodeType":"YulIdentifier","src":"7476:6:36"}]},{"nativeSrc":"7500:47:36","nodeType":"YulVariableDeclaration","src":"7500:47:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7532:9:36","nodeType":"YulIdentifier","src":"7532:9:36"},{"kind":"number","nativeSrc":"7543:2:36","nodeType":"YulLiteral","src":"7543:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7528:3:36","nodeType":"YulIdentifier","src":"7528:3:36"},"nativeSrc":"7528:18:36","nodeType":"YulFunctionCall","src":"7528:18:36"}],"functionName":{"name":"calldataload","nativeSrc":"7515:12:36","nodeType":"YulIdentifier","src":"7515:12:36"},"nativeSrc":"7515:32:36","nodeType":"YulFunctionCall","src":"7515:32:36"},"variables":[{"name":"value_1","nativeSrc":"7504:7:36","nodeType":"YulTypedName","src":"7504:7:36","type":""}]},{"expression":{"arguments":[{"name":"value_1","nativeSrc":"7581:7:36","nodeType":"YulIdentifier","src":"7581:7:36"}],"functionName":{"name":"validator_revert_address","nativeSrc":"7556:24:36","nodeType":"YulIdentifier","src":"7556:24:36"},"nativeSrc":"7556:33:36","nodeType":"YulFunctionCall","src":"7556:33:36"},"nativeSrc":"7556:33:36","nodeType":"YulExpressionStatement","src":"7556:33:36"},{"nativeSrc":"7598:17:36","nodeType":"YulAssignment","src":"7598:17:36","value":{"name":"value_1","nativeSrc":"7608:7:36","nodeType":"YulIdentifier","src":"7608:7:36"},"variableNames":[{"name":"value1","nativeSrc":"7598:6:36","nodeType":"YulIdentifier","src":"7598:6:36"}]},{"nativeSrc":"7624:16:36","nodeType":"YulVariableDeclaration","src":"7624:16:36","value":{"kind":"number","nativeSrc":"7639:1:36","nodeType":"YulLiteral","src":"7639:1:36","type":"","value":"0"},"variables":[{"name":"value_2","nativeSrc":"7628:7:36","nodeType":"YulTypedName","src":"7628:7:36","type":""}]},{"nativeSrc":"7649:43:36","nodeType":"YulAssignment","src":"7649:43:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7677:9:36","nodeType":"YulIdentifier","src":"7677:9:36"},{"kind":"number","nativeSrc":"7688:2:36","nodeType":"YulLiteral","src":"7688:2:36","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7673:3:36","nodeType":"YulIdentifier","src":"7673:3:36"},"nativeSrc":"7673:18:36","nodeType":"YulFunctionCall","src":"7673:18:36"}],"functionName":{"name":"calldataload","nativeSrc":"7660:12:36","nodeType":"YulIdentifier","src":"7660:12:36"},"nativeSrc":"7660:32:36","nodeType":"YulFunctionCall","src":"7660:32:36"},"variableNames":[{"name":"value_2","nativeSrc":"7649:7:36","nodeType":"YulIdentifier","src":"7649:7:36"}]},{"nativeSrc":"7701:17:36","nodeType":"YulAssignment","src":"7701:17:36","value":{"name":"value_2","nativeSrc":"7711:7:36","nodeType":"YulIdentifier","src":"7711:7:36"},"variableNames":[{"name":"value2","nativeSrc":"7701:6:36","nodeType":"YulIdentifier","src":"7701:6:36"}]},{"nativeSrc":"7727:46:36","nodeType":"YulVariableDeclaration","src":"7727:46:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7758:9:36","nodeType":"YulIdentifier","src":"7758:9:36"},{"kind":"number","nativeSrc":"7769:2:36","nodeType":"YulLiteral","src":"7769:2:36","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"7754:3:36","nodeType":"YulIdentifier","src":"7754:3:36"},"nativeSrc":"7754:18:36","nodeType":"YulFunctionCall","src":"7754:18:36"}],"functionName":{"name":"calldataload","nativeSrc":"7741:12:36","nodeType":"YulIdentifier","src":"7741:12:36"},"nativeSrc":"7741:32:36","nodeType":"YulFunctionCall","src":"7741:32:36"},"variables":[{"name":"offset","nativeSrc":"7731:6:36","nodeType":"YulTypedName","src":"7731:6:36","type":""}]},{"body":{"nativeSrc":"7816:16:36","nodeType":"YulBlock","src":"7816:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7825:1:36","nodeType":"YulLiteral","src":"7825:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"7828:1:36","nodeType":"YulLiteral","src":"7828:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7818:6:36","nodeType":"YulIdentifier","src":"7818:6:36"},"nativeSrc":"7818:12:36","nodeType":"YulFunctionCall","src":"7818:12:36"},"nativeSrc":"7818:12:36","nodeType":"YulExpressionStatement","src":"7818:12:36"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"7788:6:36","nodeType":"YulIdentifier","src":"7788:6:36"},{"kind":"number","nativeSrc":"7796:18:36","nodeType":"YulLiteral","src":"7796:18:36","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"7785:2:36","nodeType":"YulIdentifier","src":"7785:2:36"},"nativeSrc":"7785:30:36","nodeType":"YulFunctionCall","src":"7785:30:36"},"nativeSrc":"7782:50:36","nodeType":"YulIf","src":"7782:50:36"},{"nativeSrc":"7841:59:36","nodeType":"YulAssignment","src":"7841:59:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7872:9:36","nodeType":"YulIdentifier","src":"7872:9:36"},{"name":"offset","nativeSrc":"7883:6:36","nodeType":"YulIdentifier","src":"7883:6:36"}],"functionName":{"name":"add","nativeSrc":"7868:3:36","nodeType":"YulIdentifier","src":"7868:3:36"},"nativeSrc":"7868:22:36","nodeType":"YulFunctionCall","src":"7868:22:36"},{"name":"dataEnd","nativeSrc":"7892:7:36","nodeType":"YulIdentifier","src":"7892:7:36"}],"functionName":{"name":"abi_decode_bytes","nativeSrc":"7851:16:36","nodeType":"YulIdentifier","src":"7851:16:36"},"nativeSrc":"7851:49:36","nodeType":"YulFunctionCall","src":"7851:49:36"},"variableNames":[{"name":"value3","nativeSrc":"7841:6:36","nodeType":"YulIdentifier","src":"7841:6:36"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nativeSrc":"7189:717:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7261:9:36","nodeType":"YulTypedName","src":"7261:9:36","type":""},{"name":"dataEnd","nativeSrc":"7272:7:36","nodeType":"YulTypedName","src":"7272:7:36","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"7284:6:36","nodeType":"YulTypedName","src":"7284:6:36","type":""},{"name":"value1","nativeSrc":"7292:6:36","nodeType":"YulTypedName","src":"7292:6:36","type":""},{"name":"value2","nativeSrc":"7300:6:36","nodeType":"YulTypedName","src":"7300:6:36","type":""},{"name":"value3","nativeSrc":"7308:6:36","nodeType":"YulTypedName","src":"7308:6:36","type":""}],"src":"7189:717:36"},{"body":{"nativeSrc":"8081:867:36","nodeType":"YulBlock","src":"8081:867:36","statements":[{"body":{"nativeSrc":"8128:16:36","nodeType":"YulBlock","src":"8128:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8137:1:36","nodeType":"YulLiteral","src":"8137:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"8140:1:36","nodeType":"YulLiteral","src":"8140:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"8130:6:36","nodeType":"YulIdentifier","src":"8130:6:36"},"nativeSrc":"8130:12:36","nodeType":"YulFunctionCall","src":"8130:12:36"},"nativeSrc":"8130:12:36","nodeType":"YulExpressionStatement","src":"8130:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"8102:7:36","nodeType":"YulIdentifier","src":"8102:7:36"},{"name":"headStart","nativeSrc":"8111:9:36","nodeType":"YulIdentifier","src":"8111:9:36"}],"functionName":{"name":"sub","nativeSrc":"8098:3:36","nodeType":"YulIdentifier","src":"8098:3:36"},"nativeSrc":"8098:23:36","nodeType":"YulFunctionCall","src":"8098:23:36"},{"kind":"number","nativeSrc":"8123:3:36","nodeType":"YulLiteral","src":"8123:3:36","type":"","value":"224"}],"functionName":{"name":"slt","nativeSrc":"8094:3:36","nodeType":"YulIdentifier","src":"8094:3:36"},"nativeSrc":"8094:33:36","nodeType":"YulFunctionCall","src":"8094:33:36"},"nativeSrc":"8091:53:36","nodeType":"YulIf","src":"8091:53:36"},{"nativeSrc":"8153:36:36","nodeType":"YulVariableDeclaration","src":"8153:36:36","value":{"arguments":[{"name":"headStart","nativeSrc":"8179:9:36","nodeType":"YulIdentifier","src":"8179:9:36"}],"functionName":{"name":"calldataload","nativeSrc":"8166:12:36","nodeType":"YulIdentifier","src":"8166:12:36"},"nativeSrc":"8166:23:36","nodeType":"YulFunctionCall","src":"8166:23:36"},"variables":[{"name":"value","nativeSrc":"8157:5:36","nodeType":"YulTypedName","src":"8157:5:36","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"8223:5:36","nodeType":"YulIdentifier","src":"8223:5:36"}],"functionName":{"name":"validator_revert_address","nativeSrc":"8198:24:36","nodeType":"YulIdentifier","src":"8198:24:36"},"nativeSrc":"8198:31:36","nodeType":"YulFunctionCall","src":"8198:31:36"},"nativeSrc":"8198:31:36","nodeType":"YulExpressionStatement","src":"8198:31:36"},{"nativeSrc":"8238:15:36","nodeType":"YulAssignment","src":"8238:15:36","value":{"name":"value","nativeSrc":"8248:5:36","nodeType":"YulIdentifier","src":"8248:5:36"},"variableNames":[{"name":"value0","nativeSrc":"8238:6:36","nodeType":"YulIdentifier","src":"8238:6:36"}]},{"nativeSrc":"8262:47:36","nodeType":"YulVariableDeclaration","src":"8262:47:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8294:9:36","nodeType":"YulIdentifier","src":"8294:9:36"},{"kind":"number","nativeSrc":"8305:2:36","nodeType":"YulLiteral","src":"8305:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8290:3:36","nodeType":"YulIdentifier","src":"8290:3:36"},"nativeSrc":"8290:18:36","nodeType":"YulFunctionCall","src":"8290:18:36"}],"functionName":{"name":"calldataload","nativeSrc":"8277:12:36","nodeType":"YulIdentifier","src":"8277:12:36"},"nativeSrc":"8277:32:36","nodeType":"YulFunctionCall","src":"8277:32:36"},"variables":[{"name":"value_1","nativeSrc":"8266:7:36","nodeType":"YulTypedName","src":"8266:7:36","type":""}]},{"expression":{"arguments":[{"name":"value_1","nativeSrc":"8343:7:36","nodeType":"YulIdentifier","src":"8343:7:36"}],"functionName":{"name":"validator_revert_address","nativeSrc":"8318:24:36","nodeType":"YulIdentifier","src":"8318:24:36"},"nativeSrc":"8318:33:36","nodeType":"YulFunctionCall","src":"8318:33:36"},"nativeSrc":"8318:33:36","nodeType":"YulExpressionStatement","src":"8318:33:36"},{"nativeSrc":"8360:17:36","nodeType":"YulAssignment","src":"8360:17:36","value":{"name":"value_1","nativeSrc":"8370:7:36","nodeType":"YulIdentifier","src":"8370:7:36"},"variableNames":[{"name":"value1","nativeSrc":"8360:6:36","nodeType":"YulIdentifier","src":"8360:6:36"}]},{"nativeSrc":"8386:16:36","nodeType":"YulVariableDeclaration","src":"8386:16:36","value":{"kind":"number","nativeSrc":"8401:1:36","nodeType":"YulLiteral","src":"8401:1:36","type":"","value":"0"},"variables":[{"name":"value_2","nativeSrc":"8390:7:36","nodeType":"YulTypedName","src":"8390:7:36","type":""}]},{"nativeSrc":"8411:43:36","nodeType":"YulAssignment","src":"8411:43:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8439:9:36","nodeType":"YulIdentifier","src":"8439:9:36"},{"kind":"number","nativeSrc":"8450:2:36","nodeType":"YulLiteral","src":"8450:2:36","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8435:3:36","nodeType":"YulIdentifier","src":"8435:3:36"},"nativeSrc":"8435:18:36","nodeType":"YulFunctionCall","src":"8435:18:36"}],"functionName":{"name":"calldataload","nativeSrc":"8422:12:36","nodeType":"YulIdentifier","src":"8422:12:36"},"nativeSrc":"8422:32:36","nodeType":"YulFunctionCall","src":"8422:32:36"},"variableNames":[{"name":"value_2","nativeSrc":"8411:7:36","nodeType":"YulIdentifier","src":"8411:7:36"}]},{"nativeSrc":"8463:17:36","nodeType":"YulAssignment","src":"8463:17:36","value":{"name":"value_2","nativeSrc":"8473:7:36","nodeType":"YulIdentifier","src":"8473:7:36"},"variableNames":[{"name":"value2","nativeSrc":"8463:6:36","nodeType":"YulIdentifier","src":"8463:6:36"}]},{"nativeSrc":"8489:16:36","nodeType":"YulVariableDeclaration","src":"8489:16:36","value":{"kind":"number","nativeSrc":"8504:1:36","nodeType":"YulLiteral","src":"8504:1:36","type":"","value":"0"},"variables":[{"name":"value_3","nativeSrc":"8493:7:36","nodeType":"YulTypedName","src":"8493:7:36","type":""}]},{"nativeSrc":"8514:43:36","nodeType":"YulAssignment","src":"8514:43:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8542:9:36","nodeType":"YulIdentifier","src":"8542:9:36"},{"kind":"number","nativeSrc":"8553:2:36","nodeType":"YulLiteral","src":"8553:2:36","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"8538:3:36","nodeType":"YulIdentifier","src":"8538:3:36"},"nativeSrc":"8538:18:36","nodeType":"YulFunctionCall","src":"8538:18:36"}],"functionName":{"name":"calldataload","nativeSrc":"8525:12:36","nodeType":"YulIdentifier","src":"8525:12:36"},"nativeSrc":"8525:32:36","nodeType":"YulFunctionCall","src":"8525:32:36"},"variableNames":[{"name":"value_3","nativeSrc":"8514:7:36","nodeType":"YulIdentifier","src":"8514:7:36"}]},{"nativeSrc":"8566:17:36","nodeType":"YulAssignment","src":"8566:17:36","value":{"name":"value_3","nativeSrc":"8576:7:36","nodeType":"YulIdentifier","src":"8576:7:36"},"variableNames":[{"name":"value3","nativeSrc":"8566:6:36","nodeType":"YulIdentifier","src":"8566:6:36"}]},{"nativeSrc":"8592:48:36","nodeType":"YulVariableDeclaration","src":"8592:48:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8624:9:36","nodeType":"YulIdentifier","src":"8624:9:36"},{"kind":"number","nativeSrc":"8635:3:36","nodeType":"YulLiteral","src":"8635:3:36","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"8620:3:36","nodeType":"YulIdentifier","src":"8620:3:36"},"nativeSrc":"8620:19:36","nodeType":"YulFunctionCall","src":"8620:19:36"}],"functionName":{"name":"calldataload","nativeSrc":"8607:12:36","nodeType":"YulIdentifier","src":"8607:12:36"},"nativeSrc":"8607:33:36","nodeType":"YulFunctionCall","src":"8607:33:36"},"variables":[{"name":"value_4","nativeSrc":"8596:7:36","nodeType":"YulTypedName","src":"8596:7:36","type":""}]},{"body":{"nativeSrc":"8692:16:36","nodeType":"YulBlock","src":"8692:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8701:1:36","nodeType":"YulLiteral","src":"8701:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"8704:1:36","nodeType":"YulLiteral","src":"8704:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"8694:6:36","nodeType":"YulIdentifier","src":"8694:6:36"},"nativeSrc":"8694:12:36","nodeType":"YulFunctionCall","src":"8694:12:36"},"nativeSrc":"8694:12:36","nodeType":"YulExpressionStatement","src":"8694:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"value_4","nativeSrc":"8662:7:36","nodeType":"YulIdentifier","src":"8662:7:36"},{"arguments":[{"name":"value_4","nativeSrc":"8675:7:36","nodeType":"YulIdentifier","src":"8675:7:36"},{"kind":"number","nativeSrc":"8684:4:36","nodeType":"YulLiteral","src":"8684:4:36","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"8671:3:36","nodeType":"YulIdentifier","src":"8671:3:36"},"nativeSrc":"8671:18:36","nodeType":"YulFunctionCall","src":"8671:18:36"}],"functionName":{"name":"eq","nativeSrc":"8659:2:36","nodeType":"YulIdentifier","src":"8659:2:36"},"nativeSrc":"8659:31:36","nodeType":"YulFunctionCall","src":"8659:31:36"}],"functionName":{"name":"iszero","nativeSrc":"8652:6:36","nodeType":"YulIdentifier","src":"8652:6:36"},"nativeSrc":"8652:39:36","nodeType":"YulFunctionCall","src":"8652:39:36"},"nativeSrc":"8649:59:36","nodeType":"YulIf","src":"8649:59:36"},{"nativeSrc":"8717:17:36","nodeType":"YulAssignment","src":"8717:17:36","value":{"name":"value_4","nativeSrc":"8727:7:36","nodeType":"YulIdentifier","src":"8727:7:36"},"variableNames":[{"name":"value4","nativeSrc":"8717:6:36","nodeType":"YulIdentifier","src":"8717:6:36"}]},{"nativeSrc":"8743:16:36","nodeType":"YulVariableDeclaration","src":"8743:16:36","value":{"kind":"number","nativeSrc":"8758:1:36","nodeType":"YulLiteral","src":"8758:1:36","type":"","value":"0"},"variables":[{"name":"value_5","nativeSrc":"8747:7:36","nodeType":"YulTypedName","src":"8747:7:36","type":""}]},{"nativeSrc":"8768:44:36","nodeType":"YulAssignment","src":"8768:44:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8796:9:36","nodeType":"YulIdentifier","src":"8796:9:36"},{"kind":"number","nativeSrc":"8807:3:36","nodeType":"YulLiteral","src":"8807:3:36","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"8792:3:36","nodeType":"YulIdentifier","src":"8792:3:36"},"nativeSrc":"8792:19:36","nodeType":"YulFunctionCall","src":"8792:19:36"}],"functionName":{"name":"calldataload","nativeSrc":"8779:12:36","nodeType":"YulIdentifier","src":"8779:12:36"},"nativeSrc":"8779:33:36","nodeType":"YulFunctionCall","src":"8779:33:36"},"variableNames":[{"name":"value_5","nativeSrc":"8768:7:36","nodeType":"YulIdentifier","src":"8768:7:36"}]},{"nativeSrc":"8821:17:36","nodeType":"YulAssignment","src":"8821:17:36","value":{"name":"value_5","nativeSrc":"8831:7:36","nodeType":"YulIdentifier","src":"8831:7:36"},"variableNames":[{"name":"value5","nativeSrc":"8821:6:36","nodeType":"YulIdentifier","src":"8821:6:36"}]},{"nativeSrc":"8847:16:36","nodeType":"YulVariableDeclaration","src":"8847:16:36","value":{"kind":"number","nativeSrc":"8862:1:36","nodeType":"YulLiteral","src":"8862:1:36","type":"","value":"0"},"variables":[{"name":"value_6","nativeSrc":"8851:7:36","nodeType":"YulTypedName","src":"8851:7:36","type":""}]},{"nativeSrc":"8872:44:36","nodeType":"YulAssignment","src":"8872:44:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8900:9:36","nodeType":"YulIdentifier","src":"8900:9:36"},{"kind":"number","nativeSrc":"8911:3:36","nodeType":"YulLiteral","src":"8911:3:36","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"8896:3:36","nodeType":"YulIdentifier","src":"8896:3:36"},"nativeSrc":"8896:19:36","nodeType":"YulFunctionCall","src":"8896:19:36"}],"functionName":{"name":"calldataload","nativeSrc":"8883:12:36","nodeType":"YulIdentifier","src":"8883:12:36"},"nativeSrc":"8883:33:36","nodeType":"YulFunctionCall","src":"8883:33:36"},"variableNames":[{"name":"value_6","nativeSrc":"8872:7:36","nodeType":"YulIdentifier","src":"8872:7:36"}]},{"nativeSrc":"8925:17:36","nodeType":"YulAssignment","src":"8925:17:36","value":{"name":"value_6","nativeSrc":"8935:7:36","nodeType":"YulIdentifier","src":"8935:7:36"},"variableNames":[{"name":"value6","nativeSrc":"8925:6:36","nodeType":"YulIdentifier","src":"8925:6:36"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nativeSrc":"7911:1037:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7999:9:36","nodeType":"YulTypedName","src":"7999:9:36","type":""},{"name":"dataEnd","nativeSrc":"8010:7:36","nodeType":"YulTypedName","src":"8010:7:36","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"8022:6:36","nodeType":"YulTypedName","src":"8022:6:36","type":""},{"name":"value1","nativeSrc":"8030:6:36","nodeType":"YulTypedName","src":"8030:6:36","type":""},{"name":"value2","nativeSrc":"8038:6:36","nodeType":"YulTypedName","src":"8038:6:36","type":""},{"name":"value3","nativeSrc":"8046:6:36","nodeType":"YulTypedName","src":"8046:6:36","type":""},{"name":"value4","nativeSrc":"8054:6:36","nodeType":"YulTypedName","src":"8054:6:36","type":""},{"name":"value5","nativeSrc":"8062:6:36","nodeType":"YulTypedName","src":"8062:6:36","type":""},{"name":"value6","nativeSrc":"8070:6:36","nodeType":"YulTypedName","src":"8070:6:36","type":""}],"src":"7911:1037:36"},{"body":{"nativeSrc":"9040:301:36","nodeType":"YulBlock","src":"9040:301:36","statements":[{"body":{"nativeSrc":"9086:16:36","nodeType":"YulBlock","src":"9086:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9095:1:36","nodeType":"YulLiteral","src":"9095:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"9098:1:36","nodeType":"YulLiteral","src":"9098:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"9088:6:36","nodeType":"YulIdentifier","src":"9088:6:36"},"nativeSrc":"9088:12:36","nodeType":"YulFunctionCall","src":"9088:12:36"},"nativeSrc":"9088:12:36","nodeType":"YulExpressionStatement","src":"9088:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"9061:7:36","nodeType":"YulIdentifier","src":"9061:7:36"},{"name":"headStart","nativeSrc":"9070:9:36","nodeType":"YulIdentifier","src":"9070:9:36"}],"functionName":{"name":"sub","nativeSrc":"9057:3:36","nodeType":"YulIdentifier","src":"9057:3:36"},"nativeSrc":"9057:23:36","nodeType":"YulFunctionCall","src":"9057:23:36"},{"kind":"number","nativeSrc":"9082:2:36","nodeType":"YulLiteral","src":"9082:2:36","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"9053:3:36","nodeType":"YulIdentifier","src":"9053:3:36"},"nativeSrc":"9053:32:36","nodeType":"YulFunctionCall","src":"9053:32:36"},"nativeSrc":"9050:52:36","nodeType":"YulIf","src":"9050:52:36"},{"nativeSrc":"9111:36:36","nodeType":"YulVariableDeclaration","src":"9111:36:36","value":{"arguments":[{"name":"headStart","nativeSrc":"9137:9:36","nodeType":"YulIdentifier","src":"9137:9:36"}],"functionName":{"name":"calldataload","nativeSrc":"9124:12:36","nodeType":"YulIdentifier","src":"9124:12:36"},"nativeSrc":"9124:23:36","nodeType":"YulFunctionCall","src":"9124:23:36"},"variables":[{"name":"value","nativeSrc":"9115:5:36","nodeType":"YulTypedName","src":"9115:5:36","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"9181:5:36","nodeType":"YulIdentifier","src":"9181:5:36"}],"functionName":{"name":"validator_revert_address","nativeSrc":"9156:24:36","nodeType":"YulIdentifier","src":"9156:24:36"},"nativeSrc":"9156:31:36","nodeType":"YulFunctionCall","src":"9156:31:36"},"nativeSrc":"9156:31:36","nodeType":"YulExpressionStatement","src":"9156:31:36"},{"nativeSrc":"9196:15:36","nodeType":"YulAssignment","src":"9196:15:36","value":{"name":"value","nativeSrc":"9206:5:36","nodeType":"YulIdentifier","src":"9206:5:36"},"variableNames":[{"name":"value0","nativeSrc":"9196:6:36","nodeType":"YulIdentifier","src":"9196:6:36"}]},{"nativeSrc":"9220:47:36","nodeType":"YulVariableDeclaration","src":"9220:47:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9252:9:36","nodeType":"YulIdentifier","src":"9252:9:36"},{"kind":"number","nativeSrc":"9263:2:36","nodeType":"YulLiteral","src":"9263:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9248:3:36","nodeType":"YulIdentifier","src":"9248:3:36"},"nativeSrc":"9248:18:36","nodeType":"YulFunctionCall","src":"9248:18:36"}],"functionName":{"name":"calldataload","nativeSrc":"9235:12:36","nodeType":"YulIdentifier","src":"9235:12:36"},"nativeSrc":"9235:32:36","nodeType":"YulFunctionCall","src":"9235:32:36"},"variables":[{"name":"value_1","nativeSrc":"9224:7:36","nodeType":"YulTypedName","src":"9224:7:36","type":""}]},{"expression":{"arguments":[{"name":"value_1","nativeSrc":"9301:7:36","nodeType":"YulIdentifier","src":"9301:7:36"}],"functionName":{"name":"validator_revert_address","nativeSrc":"9276:24:36","nodeType":"YulIdentifier","src":"9276:24:36"},"nativeSrc":"9276:33:36","nodeType":"YulFunctionCall","src":"9276:33:36"},"nativeSrc":"9276:33:36","nodeType":"YulExpressionStatement","src":"9276:33:36"},{"nativeSrc":"9318:17:36","nodeType":"YulAssignment","src":"9318:17:36","value":{"name":"value_1","nativeSrc":"9328:7:36","nodeType":"YulIdentifier","src":"9328:7:36"},"variableNames":[{"name":"value1","nativeSrc":"9318:6:36","nodeType":"YulIdentifier","src":"9318:6:36"}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"8953:388:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8998:9:36","nodeType":"YulTypedName","src":"8998:9:36","type":""},{"name":"dataEnd","nativeSrc":"9009:7:36","nodeType":"YulTypedName","src":"9009:7:36","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"9021:6:36","nodeType":"YulTypedName","src":"9021:6:36","type":""},{"name":"value1","nativeSrc":"9029:6:36","nodeType":"YulTypedName","src":"9029:6:36","type":""}],"src":"8953:388:36"},{"body":{"nativeSrc":"9401:325:36","nodeType":"YulBlock","src":"9401:325:36","statements":[{"nativeSrc":"9411:22:36","nodeType":"YulAssignment","src":"9411:22:36","value":{"arguments":[{"kind":"number","nativeSrc":"9425:1:36","nodeType":"YulLiteral","src":"9425:1:36","type":"","value":"1"},{"name":"data","nativeSrc":"9428:4:36","nodeType":"YulIdentifier","src":"9428:4:36"}],"functionName":{"name":"shr","nativeSrc":"9421:3:36","nodeType":"YulIdentifier","src":"9421:3:36"},"nativeSrc":"9421:12:36","nodeType":"YulFunctionCall","src":"9421:12:36"},"variableNames":[{"name":"length","nativeSrc":"9411:6:36","nodeType":"YulIdentifier","src":"9411:6:36"}]},{"nativeSrc":"9442:38:36","nodeType":"YulVariableDeclaration","src":"9442:38:36","value":{"arguments":[{"name":"data","nativeSrc":"9472:4:36","nodeType":"YulIdentifier","src":"9472:4:36"},{"kind":"number","nativeSrc":"9478:1:36","nodeType":"YulLiteral","src":"9478:1:36","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"9468:3:36","nodeType":"YulIdentifier","src":"9468:3:36"},"nativeSrc":"9468:12:36","nodeType":"YulFunctionCall","src":"9468:12:36"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"9446:18:36","nodeType":"YulTypedName","src":"9446:18:36","type":""}]},{"body":{"nativeSrc":"9519:31:36","nodeType":"YulBlock","src":"9519:31:36","statements":[{"nativeSrc":"9521:27:36","nodeType":"YulAssignment","src":"9521:27:36","value":{"arguments":[{"name":"length","nativeSrc":"9535:6:36","nodeType":"YulIdentifier","src":"9535:6:36"},{"kind":"number","nativeSrc":"9543:4:36","nodeType":"YulLiteral","src":"9543:4:36","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"9531:3:36","nodeType":"YulIdentifier","src":"9531:3:36"},"nativeSrc":"9531:17:36","nodeType":"YulFunctionCall","src":"9531:17:36"},"variableNames":[{"name":"length","nativeSrc":"9521:6:36","nodeType":"YulIdentifier","src":"9521:6:36"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"9499:18:36","nodeType":"YulIdentifier","src":"9499:18:36"}],"functionName":{"name":"iszero","nativeSrc":"9492:6:36","nodeType":"YulIdentifier","src":"9492:6:36"},"nativeSrc":"9492:26:36","nodeType":"YulFunctionCall","src":"9492:26:36"},"nativeSrc":"9489:61:36","nodeType":"YulIf","src":"9489:61:36"},{"body":{"nativeSrc":"9609:111:36","nodeType":"YulBlock","src":"9609:111:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9630:1:36","nodeType":"YulLiteral","src":"9630:1:36","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"9637:3:36","nodeType":"YulLiteral","src":"9637:3:36","type":"","value":"224"},{"kind":"number","nativeSrc":"9642:10:36","nodeType":"YulLiteral","src":"9642:10:36","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"9633:3:36","nodeType":"YulIdentifier","src":"9633:3:36"},"nativeSrc":"9633:20:36","nodeType":"YulFunctionCall","src":"9633:20:36"}],"functionName":{"name":"mstore","nativeSrc":"9623:6:36","nodeType":"YulIdentifier","src":"9623:6:36"},"nativeSrc":"9623:31:36","nodeType":"YulFunctionCall","src":"9623:31:36"},"nativeSrc":"9623:31:36","nodeType":"YulExpressionStatement","src":"9623:31:36"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9674:1:36","nodeType":"YulLiteral","src":"9674:1:36","type":"","value":"4"},{"kind":"number","nativeSrc":"9677:4:36","nodeType":"YulLiteral","src":"9677:4:36","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"9667:6:36","nodeType":"YulIdentifier","src":"9667:6:36"},"nativeSrc":"9667:15:36","nodeType":"YulFunctionCall","src":"9667:15:36"},"nativeSrc":"9667:15:36","nodeType":"YulExpressionStatement","src":"9667:15:36"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9702:1:36","nodeType":"YulLiteral","src":"9702:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"9705:4:36","nodeType":"YulLiteral","src":"9705:4:36","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"9695:6:36","nodeType":"YulIdentifier","src":"9695:6:36"},"nativeSrc":"9695:15:36","nodeType":"YulFunctionCall","src":"9695:15:36"},"nativeSrc":"9695:15:36","nodeType":"YulExpressionStatement","src":"9695:15:36"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"9565:18:36","nodeType":"YulIdentifier","src":"9565:18:36"},{"arguments":[{"name":"length","nativeSrc":"9588:6:36","nodeType":"YulIdentifier","src":"9588:6:36"},{"kind":"number","nativeSrc":"9596:2:36","nodeType":"YulLiteral","src":"9596:2:36","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"9585:2:36","nodeType":"YulIdentifier","src":"9585:2:36"},"nativeSrc":"9585:14:36","nodeType":"YulFunctionCall","src":"9585:14:36"}],"functionName":{"name":"eq","nativeSrc":"9562:2:36","nodeType":"YulIdentifier","src":"9562:2:36"},"nativeSrc":"9562:38:36","nodeType":"YulFunctionCall","src":"9562:38:36"},"nativeSrc":"9559:161:36","nodeType":"YulIf","src":"9559:161:36"}]},"name":"extract_byte_array_length","nativeSrc":"9346:380:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"9381:4:36","nodeType":"YulTypedName","src":"9381:4:36","type":""}],"returnVariables":[{"name":"length","nativeSrc":"9390:6:36","nodeType":"YulTypedName","src":"9390:6:36","type":""}],"src":"9346:380:36"},{"body":{"nativeSrc":"9860:145:36","nodeType":"YulBlock","src":"9860:145:36","statements":[{"nativeSrc":"9870:26:36","nodeType":"YulAssignment","src":"9870:26:36","value":{"arguments":[{"name":"headStart","nativeSrc":"9882:9:36","nodeType":"YulIdentifier","src":"9882:9:36"},{"kind":"number","nativeSrc":"9893:2:36","nodeType":"YulLiteral","src":"9893:2:36","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9878:3:36","nodeType":"YulIdentifier","src":"9878:3:36"},"nativeSrc":"9878:18:36","nodeType":"YulFunctionCall","src":"9878:18:36"},"variableNames":[{"name":"tail","nativeSrc":"9870:4:36","nodeType":"YulIdentifier","src":"9870:4:36"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"9912:9:36","nodeType":"YulIdentifier","src":"9912:9:36"},{"arguments":[{"name":"value0","nativeSrc":"9927:6:36","nodeType":"YulIdentifier","src":"9927:6:36"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9943:3:36","nodeType":"YulLiteral","src":"9943:3:36","type":"","value":"160"},{"kind":"number","nativeSrc":"9948:1:36","nodeType":"YulLiteral","src":"9948:1:36","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"9939:3:36","nodeType":"YulIdentifier","src":"9939:3:36"},"nativeSrc":"9939:11:36","nodeType":"YulFunctionCall","src":"9939:11:36"},{"kind":"number","nativeSrc":"9952:1:36","nodeType":"YulLiteral","src":"9952:1:36","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"9935:3:36","nodeType":"YulIdentifier","src":"9935:3:36"},"nativeSrc":"9935:19:36","nodeType":"YulFunctionCall","src":"9935:19:36"}],"functionName":{"name":"and","nativeSrc":"9923:3:36","nodeType":"YulIdentifier","src":"9923:3:36"},"nativeSrc":"9923:32:36","nodeType":"YulFunctionCall","src":"9923:32:36"}],"functionName":{"name":"mstore","nativeSrc":"9905:6:36","nodeType":"YulIdentifier","src":"9905:6:36"},"nativeSrc":"9905:51:36","nodeType":"YulFunctionCall","src":"9905:51:36"},"nativeSrc":"9905:51:36","nodeType":"YulExpressionStatement","src":"9905:51:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9976:9:36","nodeType":"YulIdentifier","src":"9976:9:36"},{"kind":"number","nativeSrc":"9987:2:36","nodeType":"YulLiteral","src":"9987:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9972:3:36","nodeType":"YulIdentifier","src":"9972:3:36"},"nativeSrc":"9972:18:36","nodeType":"YulFunctionCall","src":"9972:18:36"},{"name":"value1","nativeSrc":"9992:6:36","nodeType":"YulIdentifier","src":"9992:6:36"}],"functionName":{"name":"mstore","nativeSrc":"9965:6:36","nodeType":"YulIdentifier","src":"9965:6:36"},"nativeSrc":"9965:34:36","nodeType":"YulFunctionCall","src":"9965:34:36"},"nativeSrc":"9965:34:36","nodeType":"YulExpressionStatement","src":"9965:34:36"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"9731:274:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9821:9:36","nodeType":"YulTypedName","src":"9821:9:36","type":""},{"name":"value1","nativeSrc":"9832:6:36","nodeType":"YulTypedName","src":"9832:6:36","type":""},{"name":"value0","nativeSrc":"9840:6:36","nodeType":"YulTypedName","src":"9840:6:36","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9851:4:36","nodeType":"YulTypedName","src":"9851:4:36","type":""}],"src":"9731:274:36"},{"body":{"nativeSrc":"10251:489:36","nodeType":"YulBlock","src":"10251:489:36","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"10268:9:36","nodeType":"YulIdentifier","src":"10268:9:36"},{"arguments":[{"name":"value0","nativeSrc":"10283:6:36","nodeType":"YulIdentifier","src":"10283:6:36"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"10299:3:36","nodeType":"YulLiteral","src":"10299:3:36","type":"","value":"160"},{"kind":"number","nativeSrc":"10304:1:36","nodeType":"YulLiteral","src":"10304:1:36","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"10295:3:36","nodeType":"YulIdentifier","src":"10295:3:36"},"nativeSrc":"10295:11:36","nodeType":"YulFunctionCall","src":"10295:11:36"},{"kind":"number","nativeSrc":"10308:1:36","nodeType":"YulLiteral","src":"10308:1:36","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"10291:3:36","nodeType":"YulIdentifier","src":"10291:3:36"},"nativeSrc":"10291:19:36","nodeType":"YulFunctionCall","src":"10291:19:36"}],"functionName":{"name":"and","nativeSrc":"10279:3:36","nodeType":"YulIdentifier","src":"10279:3:36"},"nativeSrc":"10279:32:36","nodeType":"YulFunctionCall","src":"10279:32:36"}],"functionName":{"name":"mstore","nativeSrc":"10261:6:36","nodeType":"YulIdentifier","src":"10261:6:36"},"nativeSrc":"10261:51:36","nodeType":"YulFunctionCall","src":"10261:51:36"},"nativeSrc":"10261:51:36","nodeType":"YulExpressionStatement","src":"10261:51:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10332:9:36","nodeType":"YulIdentifier","src":"10332:9:36"},{"kind":"number","nativeSrc":"10343:2:36","nodeType":"YulLiteral","src":"10343:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10328:3:36","nodeType":"YulIdentifier","src":"10328:3:36"},"nativeSrc":"10328:18:36","nodeType":"YulFunctionCall","src":"10328:18:36"},{"arguments":[{"name":"value1","nativeSrc":"10352:6:36","nodeType":"YulIdentifier","src":"10352:6:36"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"10368:3:36","nodeType":"YulLiteral","src":"10368:3:36","type":"","value":"160"},{"kind":"number","nativeSrc":"10373:1:36","nodeType":"YulLiteral","src":"10373:1:36","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"10364:3:36","nodeType":"YulIdentifier","src":"10364:3:36"},"nativeSrc":"10364:11:36","nodeType":"YulFunctionCall","src":"10364:11:36"},{"kind":"number","nativeSrc":"10377:1:36","nodeType":"YulLiteral","src":"10377:1:36","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"10360:3:36","nodeType":"YulIdentifier","src":"10360:3:36"},"nativeSrc":"10360:19:36","nodeType":"YulFunctionCall","src":"10360:19:36"}],"functionName":{"name":"and","nativeSrc":"10348:3:36","nodeType":"YulIdentifier","src":"10348:3:36"},"nativeSrc":"10348:32:36","nodeType":"YulFunctionCall","src":"10348:32:36"}],"functionName":{"name":"mstore","nativeSrc":"10321:6:36","nodeType":"YulIdentifier","src":"10321:6:36"},"nativeSrc":"10321:60:36","nodeType":"YulFunctionCall","src":"10321:60:36"},"nativeSrc":"10321:60:36","nodeType":"YulExpressionStatement","src":"10321:60:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10401:9:36","nodeType":"YulIdentifier","src":"10401:9:36"},{"kind":"number","nativeSrc":"10412:2:36","nodeType":"YulLiteral","src":"10412:2:36","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10397:3:36","nodeType":"YulIdentifier","src":"10397:3:36"},"nativeSrc":"10397:18:36","nodeType":"YulFunctionCall","src":"10397:18:36"},{"name":"value2","nativeSrc":"10417:6:36","nodeType":"YulIdentifier","src":"10417:6:36"}],"functionName":{"name":"mstore","nativeSrc":"10390:6:36","nodeType":"YulIdentifier","src":"10390:6:36"},"nativeSrc":"10390:34:36","nodeType":"YulFunctionCall","src":"10390:34:36"},"nativeSrc":"10390:34:36","nodeType":"YulExpressionStatement","src":"10390:34:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10444:9:36","nodeType":"YulIdentifier","src":"10444:9:36"},{"kind":"number","nativeSrc":"10455:2:36","nodeType":"YulLiteral","src":"10455:2:36","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"10440:3:36","nodeType":"YulIdentifier","src":"10440:3:36"},"nativeSrc":"10440:18:36","nodeType":"YulFunctionCall","src":"10440:18:36"},{"name":"value3","nativeSrc":"10460:6:36","nodeType":"YulIdentifier","src":"10460:6:36"}],"functionName":{"name":"mstore","nativeSrc":"10433:6:36","nodeType":"YulIdentifier","src":"10433:6:36"},"nativeSrc":"10433:34:36","nodeType":"YulFunctionCall","src":"10433:34:36"},"nativeSrc":"10433:34:36","nodeType":"YulExpressionStatement","src":"10433:34:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10487:9:36","nodeType":"YulIdentifier","src":"10487:9:36"},{"kind":"number","nativeSrc":"10498:3:36","nodeType":"YulLiteral","src":"10498:3:36","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"10483:3:36","nodeType":"YulIdentifier","src":"10483:3:36"},"nativeSrc":"10483:19:36","nodeType":"YulFunctionCall","src":"10483:19:36"},{"kind":"number","nativeSrc":"10504:3:36","nodeType":"YulLiteral","src":"10504:3:36","type":"","value":"160"}],"functionName":{"name":"mstore","nativeSrc":"10476:6:36","nodeType":"YulIdentifier","src":"10476:6:36"},"nativeSrc":"10476:32:36","nodeType":"YulFunctionCall","src":"10476:32:36"},"nativeSrc":"10476:32:36","nodeType":"YulExpressionStatement","src":"10476:32:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10528:9:36","nodeType":"YulIdentifier","src":"10528:9:36"},{"kind":"number","nativeSrc":"10539:3:36","nodeType":"YulLiteral","src":"10539:3:36","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"10524:3:36","nodeType":"YulIdentifier","src":"10524:3:36"},"nativeSrc":"10524:19:36","nodeType":"YulFunctionCall","src":"10524:19:36"},{"name":"value5","nativeSrc":"10545:6:36","nodeType":"YulIdentifier","src":"10545:6:36"}],"functionName":{"name":"mstore","nativeSrc":"10517:6:36","nodeType":"YulIdentifier","src":"10517:6:36"},"nativeSrc":"10517:35:36","nodeType":"YulFunctionCall","src":"10517:35:36"},"nativeSrc":"10517:35:36","nodeType":"YulExpressionStatement","src":"10517:35:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10578:9:36","nodeType":"YulIdentifier","src":"10578:9:36"},{"kind":"number","nativeSrc":"10589:3:36","nodeType":"YulLiteral","src":"10589:3:36","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"10574:3:36","nodeType":"YulIdentifier","src":"10574:3:36"},"nativeSrc":"10574:19:36","nodeType":"YulFunctionCall","src":"10574:19:36"},{"name":"value4","nativeSrc":"10595:6:36","nodeType":"YulIdentifier","src":"10595:6:36"},{"name":"value5","nativeSrc":"10603:6:36","nodeType":"YulIdentifier","src":"10603:6:36"}],"functionName":{"name":"calldatacopy","nativeSrc":"10561:12:36","nodeType":"YulIdentifier","src":"10561:12:36"},"nativeSrc":"10561:49:36","nodeType":"YulFunctionCall","src":"10561:49:36"},"nativeSrc":"10561:49:36","nodeType":"YulExpressionStatement","src":"10561:49:36"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10634:9:36","nodeType":"YulIdentifier","src":"10634:9:36"},{"name":"value5","nativeSrc":"10645:6:36","nodeType":"YulIdentifier","src":"10645:6:36"}],"functionName":{"name":"add","nativeSrc":"10630:3:36","nodeType":"YulIdentifier","src":"10630:3:36"},"nativeSrc":"10630:22:36","nodeType":"YulFunctionCall","src":"10630:22:36"},{"kind":"number","nativeSrc":"10654:3:36","nodeType":"YulLiteral","src":"10654:3:36","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"10626:3:36","nodeType":"YulIdentifier","src":"10626:3:36"},"nativeSrc":"10626:32:36","nodeType":"YulFunctionCall","src":"10626:32:36"},{"kind":"number","nativeSrc":"10660:1:36","nodeType":"YulLiteral","src":"10660:1:36","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"10619:6:36","nodeType":"YulIdentifier","src":"10619:6:36"},"nativeSrc":"10619:43:36","nodeType":"YulFunctionCall","src":"10619:43:36"},"nativeSrc":"10619:43:36","nodeType":"YulExpressionStatement","src":"10619:43:36"},{"nativeSrc":"10671:63:36","nodeType":"YulAssignment","src":"10671:63:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10687:9:36","nodeType":"YulIdentifier","src":"10687:9:36"},{"arguments":[{"arguments":[{"name":"value5","nativeSrc":"10706:6:36","nodeType":"YulIdentifier","src":"10706:6:36"},{"kind":"number","nativeSrc":"10714:2:36","nodeType":"YulLiteral","src":"10714:2:36","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"10702:3:36","nodeType":"YulIdentifier","src":"10702:3:36"},"nativeSrc":"10702:15:36","nodeType":"YulFunctionCall","src":"10702:15:36"},{"arguments":[{"kind":"number","nativeSrc":"10723:2:36","nodeType":"YulLiteral","src":"10723:2:36","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"10719:3:36","nodeType":"YulIdentifier","src":"10719:3:36"},"nativeSrc":"10719:7:36","nodeType":"YulFunctionCall","src":"10719:7:36"}],"functionName":{"name":"and","nativeSrc":"10698:3:36","nodeType":"YulIdentifier","src":"10698:3:36"},"nativeSrc":"10698:29:36","nodeType":"YulFunctionCall","src":"10698:29:36"}],"functionName":{"name":"add","nativeSrc":"10683:3:36","nodeType":"YulIdentifier","src":"10683:3:36"},"nativeSrc":"10683:45:36","nodeType":"YulFunctionCall","src":"10683:45:36"},{"kind":"number","nativeSrc":"10730:3:36","nodeType":"YulLiteral","src":"10730:3:36","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"10679:3:36","nodeType":"YulIdentifier","src":"10679:3:36"},"nativeSrc":"10679:55:36","nodeType":"YulFunctionCall","src":"10679:55:36"},"variableNames":[{"name":"tail","nativeSrc":"10671:4:36","nodeType":"YulIdentifier","src":"10671:4:36"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_calldata_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nativeSrc":"10010:730:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10180:9:36","nodeType":"YulTypedName","src":"10180:9:36","type":""},{"name":"value5","nativeSrc":"10191:6:36","nodeType":"YulTypedName","src":"10191:6:36","type":""},{"name":"value4","nativeSrc":"10199:6:36","nodeType":"YulTypedName","src":"10199:6:36","type":""},{"name":"value3","nativeSrc":"10207:6:36","nodeType":"YulTypedName","src":"10207:6:36","type":""},{"name":"value2","nativeSrc":"10215:6:36","nodeType":"YulTypedName","src":"10215:6:36","type":""},{"name":"value1","nativeSrc":"10223:6:36","nodeType":"YulTypedName","src":"10223:6:36","type":""},{"name":"value0","nativeSrc":"10231:6:36","nodeType":"YulTypedName","src":"10231:6:36","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10242:4:36","nodeType":"YulTypedName","src":"10242:4:36","type":""}],"src":"10010:730:36"},{"body":{"nativeSrc":"10826:103:36","nodeType":"YulBlock","src":"10826:103:36","statements":[{"body":{"nativeSrc":"10872:16:36","nodeType":"YulBlock","src":"10872:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10881:1:36","nodeType":"YulLiteral","src":"10881:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"10884:1:36","nodeType":"YulLiteral","src":"10884:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"10874:6:36","nodeType":"YulIdentifier","src":"10874:6:36"},"nativeSrc":"10874:12:36","nodeType":"YulFunctionCall","src":"10874:12:36"},"nativeSrc":"10874:12:36","nodeType":"YulExpressionStatement","src":"10874:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"10847:7:36","nodeType":"YulIdentifier","src":"10847:7:36"},{"name":"headStart","nativeSrc":"10856:9:36","nodeType":"YulIdentifier","src":"10856:9:36"}],"functionName":{"name":"sub","nativeSrc":"10843:3:36","nodeType":"YulIdentifier","src":"10843:3:36"},"nativeSrc":"10843:23:36","nodeType":"YulFunctionCall","src":"10843:23:36"},{"kind":"number","nativeSrc":"10868:2:36","nodeType":"YulLiteral","src":"10868:2:36","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"10839:3:36","nodeType":"YulIdentifier","src":"10839:3:36"},"nativeSrc":"10839:32:36","nodeType":"YulFunctionCall","src":"10839:32:36"},"nativeSrc":"10836:52:36","nodeType":"YulIf","src":"10836:52:36"},{"nativeSrc":"10897:26:36","nodeType":"YulAssignment","src":"10897:26:36","value":{"arguments":[{"name":"headStart","nativeSrc":"10913:9:36","nodeType":"YulIdentifier","src":"10913:9:36"}],"functionName":{"name":"mload","nativeSrc":"10907:5:36","nodeType":"YulIdentifier","src":"10907:5:36"},"nativeSrc":"10907:16:36","nodeType":"YulFunctionCall","src":"10907:16:36"},"variableNames":[{"name":"value0","nativeSrc":"10897:6:36","nodeType":"YulIdentifier","src":"10897:6:36"}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nativeSrc":"10745:184:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10792:9:36","nodeType":"YulTypedName","src":"10792:9:36","type":""},{"name":"dataEnd","nativeSrc":"10803:7:36","nodeType":"YulTypedName","src":"10803:7:36","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"10815:6:36","nodeType":"YulTypedName","src":"10815:6:36","type":""}],"src":"10745:184:36"},{"body":{"nativeSrc":"10966:95:36","nodeType":"YulBlock","src":"10966:95:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10983:1:36","nodeType":"YulLiteral","src":"10983:1:36","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"10990:3:36","nodeType":"YulLiteral","src":"10990:3:36","type":"","value":"224"},{"kind":"number","nativeSrc":"10995:10:36","nodeType":"YulLiteral","src":"10995:10:36","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"10986:3:36","nodeType":"YulIdentifier","src":"10986:3:36"},"nativeSrc":"10986:20:36","nodeType":"YulFunctionCall","src":"10986:20:36"}],"functionName":{"name":"mstore","nativeSrc":"10976:6:36","nodeType":"YulIdentifier","src":"10976:6:36"},"nativeSrc":"10976:31:36","nodeType":"YulFunctionCall","src":"10976:31:36"},"nativeSrc":"10976:31:36","nodeType":"YulExpressionStatement","src":"10976:31:36"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"11023:1:36","nodeType":"YulLiteral","src":"11023:1:36","type":"","value":"4"},{"kind":"number","nativeSrc":"11026:4:36","nodeType":"YulLiteral","src":"11026:4:36","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"11016:6:36","nodeType":"YulIdentifier","src":"11016:6:36"},"nativeSrc":"11016:15:36","nodeType":"YulFunctionCall","src":"11016:15:36"},"nativeSrc":"11016:15:36","nodeType":"YulExpressionStatement","src":"11016:15:36"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"11047:1:36","nodeType":"YulLiteral","src":"11047:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"11050:4:36","nodeType":"YulLiteral","src":"11050:4:36","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"11040:6:36","nodeType":"YulIdentifier","src":"11040:6:36"},"nativeSrc":"11040:15:36","nodeType":"YulFunctionCall","src":"11040:15:36"},"nativeSrc":"11040:15:36","nodeType":"YulExpressionStatement","src":"11040:15:36"}]},"name":"panic_error_0x11","nativeSrc":"10934:127:36","nodeType":"YulFunctionDefinition","src":"10934:127:36"},{"body":{"nativeSrc":"11114:77:36","nodeType":"YulBlock","src":"11114:77:36","statements":[{"nativeSrc":"11124:16:36","nodeType":"YulAssignment","src":"11124:16:36","value":{"arguments":[{"name":"x","nativeSrc":"11135:1:36","nodeType":"YulIdentifier","src":"11135:1:36"},{"name":"y","nativeSrc":"11138:1:36","nodeType":"YulIdentifier","src":"11138:1:36"}],"functionName":{"name":"add","nativeSrc":"11131:3:36","nodeType":"YulIdentifier","src":"11131:3:36"},"nativeSrc":"11131:9:36","nodeType":"YulFunctionCall","src":"11131:9:36"},"variableNames":[{"name":"sum","nativeSrc":"11124:3:36","nodeType":"YulIdentifier","src":"11124:3:36"}]},{"body":{"nativeSrc":"11163:22:36","nodeType":"YulBlock","src":"11163:22:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"11165:16:36","nodeType":"YulIdentifier","src":"11165:16:36"},"nativeSrc":"11165:18:36","nodeType":"YulFunctionCall","src":"11165:18:36"},"nativeSrc":"11165:18:36","nodeType":"YulExpressionStatement","src":"11165:18:36"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"11155:1:36","nodeType":"YulIdentifier","src":"11155:1:36"},{"name":"sum","nativeSrc":"11158:3:36","nodeType":"YulIdentifier","src":"11158:3:36"}],"functionName":{"name":"gt","nativeSrc":"11152:2:36","nodeType":"YulIdentifier","src":"11152:2:36"},"nativeSrc":"11152:10:36","nodeType":"YulFunctionCall","src":"11152:10:36"},"nativeSrc":"11149:36:36","nodeType":"YulIf","src":"11149:36:36"}]},"name":"checked_add_t_uint256","nativeSrc":"11066:125:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"11097:1:36","nodeType":"YulTypedName","src":"11097:1:36","type":""},{"name":"y","nativeSrc":"11100:1:36","nodeType":"YulTypedName","src":"11100:1:36","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"11106:3:36","nodeType":"YulTypedName","src":"11106:3:36","type":""}],"src":"11066:125:36"},{"body":{"nativeSrc":"11245:79:36","nodeType":"YulBlock","src":"11245:79:36","statements":[{"nativeSrc":"11255:17:36","nodeType":"YulAssignment","src":"11255:17:36","value":{"arguments":[{"name":"x","nativeSrc":"11267:1:36","nodeType":"YulIdentifier","src":"11267:1:36"},{"name":"y","nativeSrc":"11270:1:36","nodeType":"YulIdentifier","src":"11270:1:36"}],"functionName":{"name":"sub","nativeSrc":"11263:3:36","nodeType":"YulIdentifier","src":"11263:3:36"},"nativeSrc":"11263:9:36","nodeType":"YulFunctionCall","src":"11263:9:36"},"variableNames":[{"name":"diff","nativeSrc":"11255:4:36","nodeType":"YulIdentifier","src":"11255:4:36"}]},{"body":{"nativeSrc":"11296:22:36","nodeType":"YulBlock","src":"11296:22:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"11298:16:36","nodeType":"YulIdentifier","src":"11298:16:36"},"nativeSrc":"11298:18:36","nodeType":"YulFunctionCall","src":"11298:18:36"},"nativeSrc":"11298:18:36","nodeType":"YulExpressionStatement","src":"11298:18:36"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"11287:4:36","nodeType":"YulIdentifier","src":"11287:4:36"},{"name":"x","nativeSrc":"11293:1:36","nodeType":"YulIdentifier","src":"11293:1:36"}],"functionName":{"name":"gt","nativeSrc":"11284:2:36","nodeType":"YulIdentifier","src":"11284:2:36"},"nativeSrc":"11284:11:36","nodeType":"YulFunctionCall","src":"11284:11:36"},"nativeSrc":"11281:37:36","nodeType":"YulIf","src":"11281:37:36"}]},"name":"checked_sub_t_uint256","nativeSrc":"11196:128:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"11227:1:36","nodeType":"YulTypedName","src":"11227:1:36","type":""},{"name":"y","nativeSrc":"11230:1:36","nodeType":"YulTypedName","src":"11230:1:36","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"11236:4:36","nodeType":"YulTypedName","src":"11236:4:36","type":""}],"src":"11196:128:36"},{"body":{"nativeSrc":"11486:214:36","nodeType":"YulBlock","src":"11486:214:36","statements":[{"nativeSrc":"11496:26:36","nodeType":"YulAssignment","src":"11496:26:36","value":{"arguments":[{"name":"headStart","nativeSrc":"11508:9:36","nodeType":"YulIdentifier","src":"11508:9:36"},{"kind":"number","nativeSrc":"11519:2:36","nodeType":"YulLiteral","src":"11519:2:36","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"11504:3:36","nodeType":"YulIdentifier","src":"11504:3:36"},"nativeSrc":"11504:18:36","nodeType":"YulFunctionCall","src":"11504:18:36"},"variableNames":[{"name":"tail","nativeSrc":"11496:4:36","nodeType":"YulIdentifier","src":"11496:4:36"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"11538:9:36","nodeType":"YulIdentifier","src":"11538:9:36"},{"arguments":[{"name":"value0","nativeSrc":"11553:6:36","nodeType":"YulIdentifier","src":"11553:6:36"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"11569:3:36","nodeType":"YulLiteral","src":"11569:3:36","type":"","value":"160"},{"kind":"number","nativeSrc":"11574:1:36","nodeType":"YulLiteral","src":"11574:1:36","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"11565:3:36","nodeType":"YulIdentifier","src":"11565:3:36"},"nativeSrc":"11565:11:36","nodeType":"YulFunctionCall","src":"11565:11:36"},{"kind":"number","nativeSrc":"11578:1:36","nodeType":"YulLiteral","src":"11578:1:36","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"11561:3:36","nodeType":"YulIdentifier","src":"11561:3:36"},"nativeSrc":"11561:19:36","nodeType":"YulFunctionCall","src":"11561:19:36"}],"functionName":{"name":"and","nativeSrc":"11549:3:36","nodeType":"YulIdentifier","src":"11549:3:36"},"nativeSrc":"11549:32:36","nodeType":"YulFunctionCall","src":"11549:32:36"}],"functionName":{"name":"mstore","nativeSrc":"11531:6:36","nodeType":"YulIdentifier","src":"11531:6:36"},"nativeSrc":"11531:51:36","nodeType":"YulFunctionCall","src":"11531:51:36"},"nativeSrc":"11531:51:36","nodeType":"YulExpressionStatement","src":"11531:51:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11602:9:36","nodeType":"YulIdentifier","src":"11602:9:36"},{"kind":"number","nativeSrc":"11613:2:36","nodeType":"YulLiteral","src":"11613:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11598:3:36","nodeType":"YulIdentifier","src":"11598:3:36"},"nativeSrc":"11598:18:36","nodeType":"YulFunctionCall","src":"11598:18:36"},{"arguments":[{"name":"value1","nativeSrc":"11622:6:36","nodeType":"YulIdentifier","src":"11622:6:36"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"11638:3:36","nodeType":"YulLiteral","src":"11638:3:36","type":"","value":"160"},{"kind":"number","nativeSrc":"11643:1:36","nodeType":"YulLiteral","src":"11643:1:36","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"11634:3:36","nodeType":"YulIdentifier","src":"11634:3:36"},"nativeSrc":"11634:11:36","nodeType":"YulFunctionCall","src":"11634:11:36"},{"kind":"number","nativeSrc":"11647:1:36","nodeType":"YulLiteral","src":"11647:1:36","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"11630:3:36","nodeType":"YulIdentifier","src":"11630:3:36"},"nativeSrc":"11630:19:36","nodeType":"YulFunctionCall","src":"11630:19:36"}],"functionName":{"name":"and","nativeSrc":"11618:3:36","nodeType":"YulIdentifier","src":"11618:3:36"},"nativeSrc":"11618:32:36","nodeType":"YulFunctionCall","src":"11618:32:36"}],"functionName":{"name":"mstore","nativeSrc":"11591:6:36","nodeType":"YulIdentifier","src":"11591:6:36"},"nativeSrc":"11591:60:36","nodeType":"YulFunctionCall","src":"11591:60:36"},"nativeSrc":"11591:60:36","nodeType":"YulExpressionStatement","src":"11591:60:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11671:9:36","nodeType":"YulIdentifier","src":"11671:9:36"},{"kind":"number","nativeSrc":"11682:2:36","nodeType":"YulLiteral","src":"11682:2:36","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"11667:3:36","nodeType":"YulIdentifier","src":"11667:3:36"},"nativeSrc":"11667:18:36","nodeType":"YulFunctionCall","src":"11667:18:36"},{"name":"value2","nativeSrc":"11687:6:36","nodeType":"YulIdentifier","src":"11687:6:36"}],"functionName":{"name":"mstore","nativeSrc":"11660:6:36","nodeType":"YulIdentifier","src":"11660:6:36"},"nativeSrc":"11660:34:36","nodeType":"YulFunctionCall","src":"11660:34:36"},"nativeSrc":"11660:34:36","nodeType":"YulExpressionStatement","src":"11660:34:36"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nativeSrc":"11329:371:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11439:9:36","nodeType":"YulTypedName","src":"11439:9:36","type":""},{"name":"value2","nativeSrc":"11450:6:36","nodeType":"YulTypedName","src":"11450:6:36","type":""},{"name":"value1","nativeSrc":"11458:6:36","nodeType":"YulTypedName","src":"11458:6:36","type":""},{"name":"value0","nativeSrc":"11466:6:36","nodeType":"YulTypedName","src":"11466:6:36","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11477:4:36","nodeType":"YulTypedName","src":"11477:4:36","type":""}],"src":"11329:371:36"},{"body":{"nativeSrc":"11946:346:36","nodeType":"YulBlock","src":"11946:346:36","statements":[{"nativeSrc":"11956:27:36","nodeType":"YulAssignment","src":"11956:27:36","value":{"arguments":[{"name":"headStart","nativeSrc":"11968:9:36","nodeType":"YulIdentifier","src":"11968:9:36"},{"kind":"number","nativeSrc":"11979:3:36","nodeType":"YulLiteral","src":"11979:3:36","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"11964:3:36","nodeType":"YulIdentifier","src":"11964:3:36"},"nativeSrc":"11964:19:36","nodeType":"YulFunctionCall","src":"11964:19:36"},"variableNames":[{"name":"tail","nativeSrc":"11956:4:36","nodeType":"YulIdentifier","src":"11956:4:36"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"11999:9:36","nodeType":"YulIdentifier","src":"11999:9:36"},{"name":"value0","nativeSrc":"12010:6:36","nodeType":"YulIdentifier","src":"12010:6:36"}],"functionName":{"name":"mstore","nativeSrc":"11992:6:36","nodeType":"YulIdentifier","src":"11992:6:36"},"nativeSrc":"11992:25:36","nodeType":"YulFunctionCall","src":"11992:25:36"},"nativeSrc":"11992:25:36","nodeType":"YulExpressionStatement","src":"11992:25:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12037:9:36","nodeType":"YulIdentifier","src":"12037:9:36"},{"kind":"number","nativeSrc":"12048:2:36","nodeType":"YulLiteral","src":"12048:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12033:3:36","nodeType":"YulIdentifier","src":"12033:3:36"},"nativeSrc":"12033:18:36","nodeType":"YulFunctionCall","src":"12033:18:36"},{"arguments":[{"name":"value1","nativeSrc":"12057:6:36","nodeType":"YulIdentifier","src":"12057:6:36"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"12073:3:36","nodeType":"YulLiteral","src":"12073:3:36","type":"","value":"160"},{"kind":"number","nativeSrc":"12078:1:36","nodeType":"YulLiteral","src":"12078:1:36","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"12069:3:36","nodeType":"YulIdentifier","src":"12069:3:36"},"nativeSrc":"12069:11:36","nodeType":"YulFunctionCall","src":"12069:11:36"},{"kind":"number","nativeSrc":"12082:1:36","nodeType":"YulLiteral","src":"12082:1:36","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"12065:3:36","nodeType":"YulIdentifier","src":"12065:3:36"},"nativeSrc":"12065:19:36","nodeType":"YulFunctionCall","src":"12065:19:36"}],"functionName":{"name":"and","nativeSrc":"12053:3:36","nodeType":"YulIdentifier","src":"12053:3:36"},"nativeSrc":"12053:32:36","nodeType":"YulFunctionCall","src":"12053:32:36"}],"functionName":{"name":"mstore","nativeSrc":"12026:6:36","nodeType":"YulIdentifier","src":"12026:6:36"},"nativeSrc":"12026:60:36","nodeType":"YulFunctionCall","src":"12026:60:36"},"nativeSrc":"12026:60:36","nodeType":"YulExpressionStatement","src":"12026:60:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12106:9:36","nodeType":"YulIdentifier","src":"12106:9:36"},{"kind":"number","nativeSrc":"12117:2:36","nodeType":"YulLiteral","src":"12117:2:36","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12102:3:36","nodeType":"YulIdentifier","src":"12102:3:36"},"nativeSrc":"12102:18:36","nodeType":"YulFunctionCall","src":"12102:18:36"},{"arguments":[{"name":"value2","nativeSrc":"12126:6:36","nodeType":"YulIdentifier","src":"12126:6:36"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"12142:3:36","nodeType":"YulLiteral","src":"12142:3:36","type":"","value":"160"},{"kind":"number","nativeSrc":"12147:1:36","nodeType":"YulLiteral","src":"12147:1:36","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"12138:3:36","nodeType":"YulIdentifier","src":"12138:3:36"},"nativeSrc":"12138:11:36","nodeType":"YulFunctionCall","src":"12138:11:36"},{"kind":"number","nativeSrc":"12151:1:36","nodeType":"YulLiteral","src":"12151:1:36","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"12134:3:36","nodeType":"YulIdentifier","src":"12134:3:36"},"nativeSrc":"12134:19:36","nodeType":"YulFunctionCall","src":"12134:19:36"}],"functionName":{"name":"and","nativeSrc":"12122:3:36","nodeType":"YulIdentifier","src":"12122:3:36"},"nativeSrc":"12122:32:36","nodeType":"YulFunctionCall","src":"12122:32:36"}],"functionName":{"name":"mstore","nativeSrc":"12095:6:36","nodeType":"YulIdentifier","src":"12095:6:36"},"nativeSrc":"12095:60:36","nodeType":"YulFunctionCall","src":"12095:60:36"},"nativeSrc":"12095:60:36","nodeType":"YulExpressionStatement","src":"12095:60:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12175:9:36","nodeType":"YulIdentifier","src":"12175:9:36"},{"kind":"number","nativeSrc":"12186:2:36","nodeType":"YulLiteral","src":"12186:2:36","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"12171:3:36","nodeType":"YulIdentifier","src":"12171:3:36"},"nativeSrc":"12171:18:36","nodeType":"YulFunctionCall","src":"12171:18:36"},{"name":"value3","nativeSrc":"12191:6:36","nodeType":"YulIdentifier","src":"12191:6:36"}],"functionName":{"name":"mstore","nativeSrc":"12164:6:36","nodeType":"YulIdentifier","src":"12164:6:36"},"nativeSrc":"12164:34:36","nodeType":"YulFunctionCall","src":"12164:34:36"},"nativeSrc":"12164:34:36","nodeType":"YulExpressionStatement","src":"12164:34:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12218:9:36","nodeType":"YulIdentifier","src":"12218:9:36"},{"kind":"number","nativeSrc":"12229:3:36","nodeType":"YulLiteral","src":"12229:3:36","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"12214:3:36","nodeType":"YulIdentifier","src":"12214:3:36"},"nativeSrc":"12214:19:36","nodeType":"YulFunctionCall","src":"12214:19:36"},{"name":"value4","nativeSrc":"12235:6:36","nodeType":"YulIdentifier","src":"12235:6:36"}],"functionName":{"name":"mstore","nativeSrc":"12207:6:36","nodeType":"YulIdentifier","src":"12207:6:36"},"nativeSrc":"12207:35:36","nodeType":"YulFunctionCall","src":"12207:35:36"},"nativeSrc":"12207:35:36","nodeType":"YulExpressionStatement","src":"12207:35:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12262:9:36","nodeType":"YulIdentifier","src":"12262:9:36"},{"kind":"number","nativeSrc":"12273:3:36","nodeType":"YulLiteral","src":"12273:3:36","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"12258:3:36","nodeType":"YulIdentifier","src":"12258:3:36"},"nativeSrc":"12258:19:36","nodeType":"YulFunctionCall","src":"12258:19:36"},{"name":"value5","nativeSrc":"12279:6:36","nodeType":"YulIdentifier","src":"12279:6:36"}],"functionName":{"name":"mstore","nativeSrc":"12251:6:36","nodeType":"YulIdentifier","src":"12251:6:36"},"nativeSrc":"12251:35:36","nodeType":"YulFunctionCall","src":"12251:35:36"},"nativeSrc":"12251:35:36","nodeType":"YulExpressionStatement","src":"12251:35:36"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"11705:587:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11875:9:36","nodeType":"YulTypedName","src":"11875:9:36","type":""},{"name":"value5","nativeSrc":"11886:6:36","nodeType":"YulTypedName","src":"11886:6:36","type":""},{"name":"value4","nativeSrc":"11894:6:36","nodeType":"YulTypedName","src":"11894:6:36","type":""},{"name":"value3","nativeSrc":"11902:6:36","nodeType":"YulTypedName","src":"11902:6:36","type":""},{"name":"value2","nativeSrc":"11910:6:36","nodeType":"YulTypedName","src":"11910:6:36","type":""},{"name":"value1","nativeSrc":"11918:6:36","nodeType":"YulTypedName","src":"11918:6:36","type":""},{"name":"value0","nativeSrc":"11926:6:36","nodeType":"YulTypedName","src":"11926:6:36","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11937:4:36","nodeType":"YulTypedName","src":"11937:4:36","type":""}],"src":"11705:587:36"},{"body":{"nativeSrc":"12426:171:36","nodeType":"YulBlock","src":"12426:171:36","statements":[{"nativeSrc":"12436:26:36","nodeType":"YulAssignment","src":"12436:26:36","value":{"arguments":[{"name":"headStart","nativeSrc":"12448:9:36","nodeType":"YulIdentifier","src":"12448:9:36"},{"kind":"number","nativeSrc":"12459:2:36","nodeType":"YulLiteral","src":"12459:2:36","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12444:3:36","nodeType":"YulIdentifier","src":"12444:3:36"},"nativeSrc":"12444:18:36","nodeType":"YulFunctionCall","src":"12444:18:36"},"variableNames":[{"name":"tail","nativeSrc":"12436:4:36","nodeType":"YulIdentifier","src":"12436:4:36"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"12478:9:36","nodeType":"YulIdentifier","src":"12478:9:36"},{"arguments":[{"name":"value0","nativeSrc":"12493:6:36","nodeType":"YulIdentifier","src":"12493:6:36"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"12509:3:36","nodeType":"YulLiteral","src":"12509:3:36","type":"","value":"160"},{"kind":"number","nativeSrc":"12514:1:36","nodeType":"YulLiteral","src":"12514:1:36","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"12505:3:36","nodeType":"YulIdentifier","src":"12505:3:36"},"nativeSrc":"12505:11:36","nodeType":"YulFunctionCall","src":"12505:11:36"},{"kind":"number","nativeSrc":"12518:1:36","nodeType":"YulLiteral","src":"12518:1:36","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"12501:3:36","nodeType":"YulIdentifier","src":"12501:3:36"},"nativeSrc":"12501:19:36","nodeType":"YulFunctionCall","src":"12501:19:36"}],"functionName":{"name":"and","nativeSrc":"12489:3:36","nodeType":"YulIdentifier","src":"12489:3:36"},"nativeSrc":"12489:32:36","nodeType":"YulFunctionCall","src":"12489:32:36"}],"functionName":{"name":"mstore","nativeSrc":"12471:6:36","nodeType":"YulIdentifier","src":"12471:6:36"},"nativeSrc":"12471:51:36","nodeType":"YulFunctionCall","src":"12471:51:36"},"nativeSrc":"12471:51:36","nodeType":"YulExpressionStatement","src":"12471:51:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12542:9:36","nodeType":"YulIdentifier","src":"12542:9:36"},{"kind":"number","nativeSrc":"12553:2:36","nodeType":"YulLiteral","src":"12553:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12538:3:36","nodeType":"YulIdentifier","src":"12538:3:36"},"nativeSrc":"12538:18:36","nodeType":"YulFunctionCall","src":"12538:18:36"},{"arguments":[{"name":"value1","nativeSrc":"12562:6:36","nodeType":"YulIdentifier","src":"12562:6:36"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"12578:3:36","nodeType":"YulLiteral","src":"12578:3:36","type":"","value":"160"},{"kind":"number","nativeSrc":"12583:1:36","nodeType":"YulLiteral","src":"12583:1:36","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"12574:3:36","nodeType":"YulIdentifier","src":"12574:3:36"},"nativeSrc":"12574:11:36","nodeType":"YulFunctionCall","src":"12574:11:36"},{"kind":"number","nativeSrc":"12587:1:36","nodeType":"YulLiteral","src":"12587:1:36","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"12570:3:36","nodeType":"YulIdentifier","src":"12570:3:36"},"nativeSrc":"12570:19:36","nodeType":"YulFunctionCall","src":"12570:19:36"}],"functionName":{"name":"and","nativeSrc":"12558:3:36","nodeType":"YulIdentifier","src":"12558:3:36"},"nativeSrc":"12558:32:36","nodeType":"YulFunctionCall","src":"12558:32:36"}],"functionName":{"name":"mstore","nativeSrc":"12531:6:36","nodeType":"YulIdentifier","src":"12531:6:36"},"nativeSrc":"12531:60:36","nodeType":"YulFunctionCall","src":"12531:60:36"},"nativeSrc":"12531:60:36","nodeType":"YulExpressionStatement","src":"12531:60:36"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nativeSrc":"12297:300:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12387:9:36","nodeType":"YulTypedName","src":"12387:9:36","type":""},{"name":"value1","nativeSrc":"12398:6:36","nodeType":"YulTypedName","src":"12398:6:36","type":""},{"name":"value0","nativeSrc":"12406:6:36","nodeType":"YulTypedName","src":"12406:6:36","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12417:4:36","nodeType":"YulTypedName","src":"12417:4:36","type":""}],"src":"12297:300:36"},{"body":{"nativeSrc":"12759:188:36","nodeType":"YulBlock","src":"12759:188:36","statements":[{"nativeSrc":"12769:26:36","nodeType":"YulAssignment","src":"12769:26:36","value":{"arguments":[{"name":"headStart","nativeSrc":"12781:9:36","nodeType":"YulIdentifier","src":"12781:9:36"},{"kind":"number","nativeSrc":"12792:2:36","nodeType":"YulLiteral","src":"12792:2:36","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"12777:3:36","nodeType":"YulIdentifier","src":"12777:3:36"},"nativeSrc":"12777:18:36","nodeType":"YulFunctionCall","src":"12777:18:36"},"variableNames":[{"name":"tail","nativeSrc":"12769:4:36","nodeType":"YulIdentifier","src":"12769:4:36"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"12811:9:36","nodeType":"YulIdentifier","src":"12811:9:36"},{"arguments":[{"name":"value0","nativeSrc":"12826:6:36","nodeType":"YulIdentifier","src":"12826:6:36"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"12842:3:36","nodeType":"YulLiteral","src":"12842:3:36","type":"","value":"160"},{"kind":"number","nativeSrc":"12847:1:36","nodeType":"YulLiteral","src":"12847:1:36","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"12838:3:36","nodeType":"YulIdentifier","src":"12838:3:36"},"nativeSrc":"12838:11:36","nodeType":"YulFunctionCall","src":"12838:11:36"},{"kind":"number","nativeSrc":"12851:1:36","nodeType":"YulLiteral","src":"12851:1:36","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"12834:3:36","nodeType":"YulIdentifier","src":"12834:3:36"},"nativeSrc":"12834:19:36","nodeType":"YulFunctionCall","src":"12834:19:36"}],"functionName":{"name":"and","nativeSrc":"12822:3:36","nodeType":"YulIdentifier","src":"12822:3:36"},"nativeSrc":"12822:32:36","nodeType":"YulFunctionCall","src":"12822:32:36"}],"functionName":{"name":"mstore","nativeSrc":"12804:6:36","nodeType":"YulIdentifier","src":"12804:6:36"},"nativeSrc":"12804:51:36","nodeType":"YulFunctionCall","src":"12804:51:36"},"nativeSrc":"12804:51:36","nodeType":"YulExpressionStatement","src":"12804:51:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12875:9:36","nodeType":"YulIdentifier","src":"12875:9:36"},{"kind":"number","nativeSrc":"12886:2:36","nodeType":"YulLiteral","src":"12886:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12871:3:36","nodeType":"YulIdentifier","src":"12871:3:36"},"nativeSrc":"12871:18:36","nodeType":"YulFunctionCall","src":"12871:18:36"},{"name":"value1","nativeSrc":"12891:6:36","nodeType":"YulIdentifier","src":"12891:6:36"}],"functionName":{"name":"mstore","nativeSrc":"12864:6:36","nodeType":"YulIdentifier","src":"12864:6:36"},"nativeSrc":"12864:34:36","nodeType":"YulFunctionCall","src":"12864:34:36"},"nativeSrc":"12864:34:36","nodeType":"YulExpressionStatement","src":"12864:34:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12918:9:36","nodeType":"YulIdentifier","src":"12918:9:36"},{"kind":"number","nativeSrc":"12929:2:36","nodeType":"YulLiteral","src":"12929:2:36","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12914:3:36","nodeType":"YulIdentifier","src":"12914:3:36"},"nativeSrc":"12914:18:36","nodeType":"YulFunctionCall","src":"12914:18:36"},{"name":"value2","nativeSrc":"12934:6:36","nodeType":"YulIdentifier","src":"12934:6:36"}],"functionName":{"name":"mstore","nativeSrc":"12907:6:36","nodeType":"YulIdentifier","src":"12907:6:36"},"nativeSrc":"12907:34:36","nodeType":"YulFunctionCall","src":"12907:34:36"},"nativeSrc":"12907:34:36","nodeType":"YulExpressionStatement","src":"12907:34:36"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"12602:345:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12712:9:36","nodeType":"YulTypedName","src":"12712:9:36","type":""},{"name":"value2","nativeSrc":"12723:6:36","nodeType":"YulTypedName","src":"12723:6:36","type":""},{"name":"value1","nativeSrc":"12731:6:36","nodeType":"YulTypedName","src":"12731:6:36","type":""},{"name":"value0","nativeSrc":"12739:6:36","nodeType":"YulTypedName","src":"12739:6:36","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12750:4:36","nodeType":"YulTypedName","src":"12750:4:36","type":""}],"src":"12602:345:36"},{"body":{"nativeSrc":"13155:282:36","nodeType":"YulBlock","src":"13155:282:36","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"13172:9:36","nodeType":"YulIdentifier","src":"13172:9:36"},{"arguments":[{"name":"value0","nativeSrc":"13187:6:36","nodeType":"YulIdentifier","src":"13187:6:36"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"13203:3:36","nodeType":"YulLiteral","src":"13203:3:36","type":"","value":"160"},{"kind":"number","nativeSrc":"13208:1:36","nodeType":"YulLiteral","src":"13208:1:36","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"13199:3:36","nodeType":"YulIdentifier","src":"13199:3:36"},"nativeSrc":"13199:11:36","nodeType":"YulFunctionCall","src":"13199:11:36"},{"kind":"number","nativeSrc":"13212:1:36","nodeType":"YulLiteral","src":"13212:1:36","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"13195:3:36","nodeType":"YulIdentifier","src":"13195:3:36"},"nativeSrc":"13195:19:36","nodeType":"YulFunctionCall","src":"13195:19:36"}],"functionName":{"name":"and","nativeSrc":"13183:3:36","nodeType":"YulIdentifier","src":"13183:3:36"},"nativeSrc":"13183:32:36","nodeType":"YulFunctionCall","src":"13183:32:36"}],"functionName":{"name":"mstore","nativeSrc":"13165:6:36","nodeType":"YulIdentifier","src":"13165:6:36"},"nativeSrc":"13165:51:36","nodeType":"YulFunctionCall","src":"13165:51:36"},"nativeSrc":"13165:51:36","nodeType":"YulExpressionStatement","src":"13165:51:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13236:9:36","nodeType":"YulIdentifier","src":"13236:9:36"},{"kind":"number","nativeSrc":"13247:2:36","nodeType":"YulLiteral","src":"13247:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13232:3:36","nodeType":"YulIdentifier","src":"13232:3:36"},"nativeSrc":"13232:18:36","nodeType":"YulFunctionCall","src":"13232:18:36"},{"arguments":[{"name":"value1","nativeSrc":"13256:6:36","nodeType":"YulIdentifier","src":"13256:6:36"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"13272:3:36","nodeType":"YulLiteral","src":"13272:3:36","type":"","value":"160"},{"kind":"number","nativeSrc":"13277:1:36","nodeType":"YulLiteral","src":"13277:1:36","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"13268:3:36","nodeType":"YulIdentifier","src":"13268:3:36"},"nativeSrc":"13268:11:36","nodeType":"YulFunctionCall","src":"13268:11:36"},{"kind":"number","nativeSrc":"13281:1:36","nodeType":"YulLiteral","src":"13281:1:36","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"13264:3:36","nodeType":"YulIdentifier","src":"13264:3:36"},"nativeSrc":"13264:19:36","nodeType":"YulFunctionCall","src":"13264:19:36"}],"functionName":{"name":"and","nativeSrc":"13252:3:36","nodeType":"YulIdentifier","src":"13252:3:36"},"nativeSrc":"13252:32:36","nodeType":"YulFunctionCall","src":"13252:32:36"}],"functionName":{"name":"mstore","nativeSrc":"13225:6:36","nodeType":"YulIdentifier","src":"13225:6:36"},"nativeSrc":"13225:60:36","nodeType":"YulFunctionCall","src":"13225:60:36"},"nativeSrc":"13225:60:36","nodeType":"YulExpressionStatement","src":"13225:60:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13305:9:36","nodeType":"YulIdentifier","src":"13305:9:36"},{"kind":"number","nativeSrc":"13316:2:36","nodeType":"YulLiteral","src":"13316:2:36","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"13301:3:36","nodeType":"YulIdentifier","src":"13301:3:36"},"nativeSrc":"13301:18:36","nodeType":"YulFunctionCall","src":"13301:18:36"},{"name":"value2","nativeSrc":"13321:6:36","nodeType":"YulIdentifier","src":"13321:6:36"}],"functionName":{"name":"mstore","nativeSrc":"13294:6:36","nodeType":"YulIdentifier","src":"13294:6:36"},"nativeSrc":"13294:34:36","nodeType":"YulFunctionCall","src":"13294:34:36"},"nativeSrc":"13294:34:36","nodeType":"YulExpressionStatement","src":"13294:34:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13348:9:36","nodeType":"YulIdentifier","src":"13348:9:36"},{"kind":"number","nativeSrc":"13359:2:36","nodeType":"YulLiteral","src":"13359:2:36","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"13344:3:36","nodeType":"YulIdentifier","src":"13344:3:36"},"nativeSrc":"13344:18:36","nodeType":"YulFunctionCall","src":"13344:18:36"},{"kind":"number","nativeSrc":"13364:3:36","nodeType":"YulLiteral","src":"13364:3:36","type":"","value":"128"}],"functionName":{"name":"mstore","nativeSrc":"13337:6:36","nodeType":"YulIdentifier","src":"13337:6:36"},"nativeSrc":"13337:31:36","nodeType":"YulFunctionCall","src":"13337:31:36"},"nativeSrc":"13337:31:36","nodeType":"YulExpressionStatement","src":"13337:31:36"},{"nativeSrc":"13377:54:36","nodeType":"YulAssignment","src":"13377:54:36","value":{"arguments":[{"name":"value3","nativeSrc":"13403:6:36","nodeType":"YulIdentifier","src":"13403:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"13415:9:36","nodeType":"YulIdentifier","src":"13415:9:36"},{"kind":"number","nativeSrc":"13426:3:36","nodeType":"YulLiteral","src":"13426:3:36","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"13411:3:36","nodeType":"YulIdentifier","src":"13411:3:36"},"nativeSrc":"13411:19:36","nodeType":"YulFunctionCall","src":"13411:19:36"}],"functionName":{"name":"abi_encode_string","nativeSrc":"13385:17:36","nodeType":"YulIdentifier","src":"13385:17:36"},"nativeSrc":"13385:46:36","nodeType":"YulFunctionCall","src":"13385:46:36"},"variableNames":[{"name":"tail","nativeSrc":"13377:4:36","nodeType":"YulIdentifier","src":"13377:4:36"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nativeSrc":"12952:485:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13100:9:36","nodeType":"YulTypedName","src":"13100:9:36","type":""},{"name":"value3","nativeSrc":"13111:6:36","nodeType":"YulTypedName","src":"13111:6:36","type":""},{"name":"value2","nativeSrc":"13119:6:36","nodeType":"YulTypedName","src":"13119:6:36","type":""},{"name":"value1","nativeSrc":"13127:6:36","nodeType":"YulTypedName","src":"13127:6:36","type":""},{"name":"value0","nativeSrc":"13135:6:36","nodeType":"YulTypedName","src":"13135:6:36","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13146:4:36","nodeType":"YulTypedName","src":"13146:4:36","type":""}],"src":"12952:485:36"},{"body":{"nativeSrc":"13522:169:36","nodeType":"YulBlock","src":"13522:169:36","statements":[{"body":{"nativeSrc":"13568:16:36","nodeType":"YulBlock","src":"13568:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"13577:1:36","nodeType":"YulLiteral","src":"13577:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"13580:1:36","nodeType":"YulLiteral","src":"13580:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"13570:6:36","nodeType":"YulIdentifier","src":"13570:6:36"},"nativeSrc":"13570:12:36","nodeType":"YulFunctionCall","src":"13570:12:36"},"nativeSrc":"13570:12:36","nodeType":"YulExpressionStatement","src":"13570:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"13543:7:36","nodeType":"YulIdentifier","src":"13543:7:36"},{"name":"headStart","nativeSrc":"13552:9:36","nodeType":"YulIdentifier","src":"13552:9:36"}],"functionName":{"name":"sub","nativeSrc":"13539:3:36","nodeType":"YulIdentifier","src":"13539:3:36"},"nativeSrc":"13539:23:36","nodeType":"YulFunctionCall","src":"13539:23:36"},{"kind":"number","nativeSrc":"13564:2:36","nodeType":"YulLiteral","src":"13564:2:36","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"13535:3:36","nodeType":"YulIdentifier","src":"13535:3:36"},"nativeSrc":"13535:32:36","nodeType":"YulFunctionCall","src":"13535:32:36"},"nativeSrc":"13532:52:36","nodeType":"YulIf","src":"13532:52:36"},{"nativeSrc":"13593:29:36","nodeType":"YulVariableDeclaration","src":"13593:29:36","value":{"arguments":[{"name":"headStart","nativeSrc":"13612:9:36","nodeType":"YulIdentifier","src":"13612:9:36"}],"functionName":{"name":"mload","nativeSrc":"13606:5:36","nodeType":"YulIdentifier","src":"13606:5:36"},"nativeSrc":"13606:16:36","nodeType":"YulFunctionCall","src":"13606:16:36"},"variables":[{"name":"value","nativeSrc":"13597:5:36","nodeType":"YulTypedName","src":"13597:5:36","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"13655:5:36","nodeType":"YulIdentifier","src":"13655:5:36"}],"functionName":{"name":"validator_revert_bytes4","nativeSrc":"13631:23:36","nodeType":"YulIdentifier","src":"13631:23:36"},"nativeSrc":"13631:30:36","nodeType":"YulFunctionCall","src":"13631:30:36"},"nativeSrc":"13631:30:36","nodeType":"YulExpressionStatement","src":"13631:30:36"},{"nativeSrc":"13670:15:36","nodeType":"YulAssignment","src":"13670:15:36","value":{"name":"value","nativeSrc":"13680:5:36","nodeType":"YulIdentifier","src":"13680:5:36"},"variableNames":[{"name":"value0","nativeSrc":"13670:6:36","nodeType":"YulIdentifier","src":"13670:6:36"}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nativeSrc":"13442:249:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13488:9:36","nodeType":"YulTypedName","src":"13488:9:36","type":""},{"name":"dataEnd","nativeSrc":"13499:7:36","nodeType":"YulTypedName","src":"13499:7:36","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"13511:6:36","nodeType":"YulTypedName","src":"13511:6:36","type":""}],"src":"13442:249:36"},{"body":{"nativeSrc":"13871:211:36","nodeType":"YulBlock","src":"13871:211:36","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"13888:9:36","nodeType":"YulIdentifier","src":"13888:9:36"},{"arguments":[{"name":"value0","nativeSrc":"13903:6:36","nodeType":"YulIdentifier","src":"13903:6:36"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"13919:3:36","nodeType":"YulLiteral","src":"13919:3:36","type":"","value":"160"},{"kind":"number","nativeSrc":"13924:1:36","nodeType":"YulLiteral","src":"13924:1:36","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"13915:3:36","nodeType":"YulIdentifier","src":"13915:3:36"},"nativeSrc":"13915:11:36","nodeType":"YulFunctionCall","src":"13915:11:36"},{"kind":"number","nativeSrc":"13928:1:36","nodeType":"YulLiteral","src":"13928:1:36","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"13911:3:36","nodeType":"YulIdentifier","src":"13911:3:36"},"nativeSrc":"13911:19:36","nodeType":"YulFunctionCall","src":"13911:19:36"}],"functionName":{"name":"and","nativeSrc":"13899:3:36","nodeType":"YulIdentifier","src":"13899:3:36"},"nativeSrc":"13899:32:36","nodeType":"YulFunctionCall","src":"13899:32:36"}],"functionName":{"name":"mstore","nativeSrc":"13881:6:36","nodeType":"YulIdentifier","src":"13881:6:36"},"nativeSrc":"13881:51:36","nodeType":"YulFunctionCall","src":"13881:51:36"},"nativeSrc":"13881:51:36","nodeType":"YulExpressionStatement","src":"13881:51:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13952:9:36","nodeType":"YulIdentifier","src":"13952:9:36"},{"kind":"number","nativeSrc":"13963:2:36","nodeType":"YulLiteral","src":"13963:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13948:3:36","nodeType":"YulIdentifier","src":"13948:3:36"},"nativeSrc":"13948:18:36","nodeType":"YulFunctionCall","src":"13948:18:36"},{"name":"value1","nativeSrc":"13968:6:36","nodeType":"YulIdentifier","src":"13968:6:36"}],"functionName":{"name":"mstore","nativeSrc":"13941:6:36","nodeType":"YulIdentifier","src":"13941:6:36"},"nativeSrc":"13941:34:36","nodeType":"YulFunctionCall","src":"13941:34:36"},"nativeSrc":"13941:34:36","nodeType":"YulExpressionStatement","src":"13941:34:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13995:9:36","nodeType":"YulIdentifier","src":"13995:9:36"},{"kind":"number","nativeSrc":"14006:2:36","nodeType":"YulLiteral","src":"14006:2:36","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"13991:3:36","nodeType":"YulIdentifier","src":"13991:3:36"},"nativeSrc":"13991:18:36","nodeType":"YulFunctionCall","src":"13991:18:36"},{"kind":"number","nativeSrc":"14011:2:36","nodeType":"YulLiteral","src":"14011:2:36","type":"","value":"96"}],"functionName":{"name":"mstore","nativeSrc":"13984:6:36","nodeType":"YulIdentifier","src":"13984:6:36"},"nativeSrc":"13984:30:36","nodeType":"YulFunctionCall","src":"13984:30:36"},"nativeSrc":"13984:30:36","nodeType":"YulExpressionStatement","src":"13984:30:36"},{"nativeSrc":"14023:53:36","nodeType":"YulAssignment","src":"14023:53:36","value":{"arguments":[{"name":"value2","nativeSrc":"14049:6:36","nodeType":"YulIdentifier","src":"14049:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"14061:9:36","nodeType":"YulIdentifier","src":"14061:9:36"},{"kind":"number","nativeSrc":"14072:2:36","nodeType":"YulLiteral","src":"14072:2:36","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"14057:3:36","nodeType":"YulIdentifier","src":"14057:3:36"},"nativeSrc":"14057:18:36","nodeType":"YulFunctionCall","src":"14057:18:36"}],"functionName":{"name":"abi_encode_string","nativeSrc":"14031:17:36","nodeType":"YulIdentifier","src":"14031:17:36"},"nativeSrc":"14031:45:36","nodeType":"YulFunctionCall","src":"14031:45:36"},"variableNames":[{"name":"tail","nativeSrc":"14023:4:36","nodeType":"YulIdentifier","src":"14023:4:36"}]}]},"name":"abi_encode_tuple_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nativeSrc":"13696:386:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13824:9:36","nodeType":"YulTypedName","src":"13824:9:36","type":""},{"name":"value2","nativeSrc":"13835:6:36","nodeType":"YulTypedName","src":"13835:6:36","type":""},{"name":"value1","nativeSrc":"13843:6:36","nodeType":"YulTypedName","src":"13843:6:36","type":""},{"name":"value0","nativeSrc":"13851:6:36","nodeType":"YulTypedName","src":"13851:6:36","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13862:4:36","nodeType":"YulTypedName","src":"13862:4:36","type":""}],"src":"13696:386:36"},{"body":{"nativeSrc":"14300:276:36","nodeType":"YulBlock","src":"14300:276:36","statements":[{"nativeSrc":"14310:27:36","nodeType":"YulAssignment","src":"14310:27:36","value":{"arguments":[{"name":"headStart","nativeSrc":"14322:9:36","nodeType":"YulIdentifier","src":"14322:9:36"},{"kind":"number","nativeSrc":"14333:3:36","nodeType":"YulLiteral","src":"14333:3:36","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"14318:3:36","nodeType":"YulIdentifier","src":"14318:3:36"},"nativeSrc":"14318:19:36","nodeType":"YulFunctionCall","src":"14318:19:36"},"variableNames":[{"name":"tail","nativeSrc":"14310:4:36","nodeType":"YulIdentifier","src":"14310:4:36"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"14353:9:36","nodeType":"YulIdentifier","src":"14353:9:36"},{"name":"value0","nativeSrc":"14364:6:36","nodeType":"YulIdentifier","src":"14364:6:36"}],"functionName":{"name":"mstore","nativeSrc":"14346:6:36","nodeType":"YulIdentifier","src":"14346:6:36"},"nativeSrc":"14346:25:36","nodeType":"YulFunctionCall","src":"14346:25:36"},"nativeSrc":"14346:25:36","nodeType":"YulExpressionStatement","src":"14346:25:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14391:9:36","nodeType":"YulIdentifier","src":"14391:9:36"},{"kind":"number","nativeSrc":"14402:2:36","nodeType":"YulLiteral","src":"14402:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14387:3:36","nodeType":"YulIdentifier","src":"14387:3:36"},"nativeSrc":"14387:18:36","nodeType":"YulFunctionCall","src":"14387:18:36"},{"name":"value1","nativeSrc":"14407:6:36","nodeType":"YulIdentifier","src":"14407:6:36"}],"functionName":{"name":"mstore","nativeSrc":"14380:6:36","nodeType":"YulIdentifier","src":"14380:6:36"},"nativeSrc":"14380:34:36","nodeType":"YulFunctionCall","src":"14380:34:36"},"nativeSrc":"14380:34:36","nodeType":"YulExpressionStatement","src":"14380:34:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14434:9:36","nodeType":"YulIdentifier","src":"14434:9:36"},{"kind":"number","nativeSrc":"14445:2:36","nodeType":"YulLiteral","src":"14445:2:36","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"14430:3:36","nodeType":"YulIdentifier","src":"14430:3:36"},"nativeSrc":"14430:18:36","nodeType":"YulFunctionCall","src":"14430:18:36"},{"name":"value2","nativeSrc":"14450:6:36","nodeType":"YulIdentifier","src":"14450:6:36"}],"functionName":{"name":"mstore","nativeSrc":"14423:6:36","nodeType":"YulIdentifier","src":"14423:6:36"},"nativeSrc":"14423:34:36","nodeType":"YulFunctionCall","src":"14423:34:36"},"nativeSrc":"14423:34:36","nodeType":"YulExpressionStatement","src":"14423:34:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14477:9:36","nodeType":"YulIdentifier","src":"14477:9:36"},{"kind":"number","nativeSrc":"14488:2:36","nodeType":"YulLiteral","src":"14488:2:36","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"14473:3:36","nodeType":"YulIdentifier","src":"14473:3:36"},"nativeSrc":"14473:18:36","nodeType":"YulFunctionCall","src":"14473:18:36"},{"name":"value3","nativeSrc":"14493:6:36","nodeType":"YulIdentifier","src":"14493:6:36"}],"functionName":{"name":"mstore","nativeSrc":"14466:6:36","nodeType":"YulIdentifier","src":"14466:6:36"},"nativeSrc":"14466:34:36","nodeType":"YulFunctionCall","src":"14466:34:36"},"nativeSrc":"14466:34:36","nodeType":"YulExpressionStatement","src":"14466:34:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14520:9:36","nodeType":"YulIdentifier","src":"14520:9:36"},{"kind":"number","nativeSrc":"14531:3:36","nodeType":"YulLiteral","src":"14531:3:36","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"14516:3:36","nodeType":"YulIdentifier","src":"14516:3:36"},"nativeSrc":"14516:19:36","nodeType":"YulFunctionCall","src":"14516:19:36"},{"arguments":[{"name":"value4","nativeSrc":"14541:6:36","nodeType":"YulIdentifier","src":"14541:6:36"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"14557:3:36","nodeType":"YulLiteral","src":"14557:3:36","type":"","value":"160"},{"kind":"number","nativeSrc":"14562:1:36","nodeType":"YulLiteral","src":"14562:1:36","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"14553:3:36","nodeType":"YulIdentifier","src":"14553:3:36"},"nativeSrc":"14553:11:36","nodeType":"YulFunctionCall","src":"14553:11:36"},{"kind":"number","nativeSrc":"14566:1:36","nodeType":"YulLiteral","src":"14566:1:36","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"14549:3:36","nodeType":"YulIdentifier","src":"14549:3:36"},"nativeSrc":"14549:19:36","nodeType":"YulFunctionCall","src":"14549:19:36"}],"functionName":{"name":"and","nativeSrc":"14537:3:36","nodeType":"YulIdentifier","src":"14537:3:36"},"nativeSrc":"14537:32:36","nodeType":"YulFunctionCall","src":"14537:32:36"}],"functionName":{"name":"mstore","nativeSrc":"14509:6:36","nodeType":"YulIdentifier","src":"14509:6:36"},"nativeSrc":"14509:61:36","nodeType":"YulFunctionCall","src":"14509:61:36"},"nativeSrc":"14509:61:36","nodeType":"YulExpressionStatement","src":"14509:61:36"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nativeSrc":"14087:489:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14237:9:36","nodeType":"YulTypedName","src":"14237:9:36","type":""},{"name":"value4","nativeSrc":"14248:6:36","nodeType":"YulTypedName","src":"14248:6:36","type":""},{"name":"value3","nativeSrc":"14256:6:36","nodeType":"YulTypedName","src":"14256:6:36","type":""},{"name":"value2","nativeSrc":"14264:6:36","nodeType":"YulTypedName","src":"14264:6:36","type":""},{"name":"value1","nativeSrc":"14272:6:36","nodeType":"YulTypedName","src":"14272:6:36","type":""},{"name":"value0","nativeSrc":"14280:6:36","nodeType":"YulTypedName","src":"14280:6:36","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14291:4:36","nodeType":"YulTypedName","src":"14291:4:36","type":""}],"src":"14087:489:36"},{"body":{"nativeSrc":"14762:217:36","nodeType":"YulBlock","src":"14762:217:36","statements":[{"nativeSrc":"14772:27:36","nodeType":"YulAssignment","src":"14772:27:36","value":{"arguments":[{"name":"headStart","nativeSrc":"14784:9:36","nodeType":"YulIdentifier","src":"14784:9:36"},{"kind":"number","nativeSrc":"14795:3:36","nodeType":"YulLiteral","src":"14795:3:36","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"14780:3:36","nodeType":"YulIdentifier","src":"14780:3:36"},"nativeSrc":"14780:19:36","nodeType":"YulFunctionCall","src":"14780:19:36"},"variableNames":[{"name":"tail","nativeSrc":"14772:4:36","nodeType":"YulIdentifier","src":"14772:4:36"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"14815:9:36","nodeType":"YulIdentifier","src":"14815:9:36"},{"name":"value0","nativeSrc":"14826:6:36","nodeType":"YulIdentifier","src":"14826:6:36"}],"functionName":{"name":"mstore","nativeSrc":"14808:6:36","nodeType":"YulIdentifier","src":"14808:6:36"},"nativeSrc":"14808:25:36","nodeType":"YulFunctionCall","src":"14808:25:36"},"nativeSrc":"14808:25:36","nodeType":"YulExpressionStatement","src":"14808:25:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14853:9:36","nodeType":"YulIdentifier","src":"14853:9:36"},{"kind":"number","nativeSrc":"14864:2:36","nodeType":"YulLiteral","src":"14864:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14849:3:36","nodeType":"YulIdentifier","src":"14849:3:36"},"nativeSrc":"14849:18:36","nodeType":"YulFunctionCall","src":"14849:18:36"},{"arguments":[{"name":"value1","nativeSrc":"14873:6:36","nodeType":"YulIdentifier","src":"14873:6:36"},{"kind":"number","nativeSrc":"14881:4:36","nodeType":"YulLiteral","src":"14881:4:36","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"14869:3:36","nodeType":"YulIdentifier","src":"14869:3:36"},"nativeSrc":"14869:17:36","nodeType":"YulFunctionCall","src":"14869:17:36"}],"functionName":{"name":"mstore","nativeSrc":"14842:6:36","nodeType":"YulIdentifier","src":"14842:6:36"},"nativeSrc":"14842:45:36","nodeType":"YulFunctionCall","src":"14842:45:36"},"nativeSrc":"14842:45:36","nodeType":"YulExpressionStatement","src":"14842:45:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14907:9:36","nodeType":"YulIdentifier","src":"14907:9:36"},{"kind":"number","nativeSrc":"14918:2:36","nodeType":"YulLiteral","src":"14918:2:36","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"14903:3:36","nodeType":"YulIdentifier","src":"14903:3:36"},"nativeSrc":"14903:18:36","nodeType":"YulFunctionCall","src":"14903:18:36"},{"name":"value2","nativeSrc":"14923:6:36","nodeType":"YulIdentifier","src":"14923:6:36"}],"functionName":{"name":"mstore","nativeSrc":"14896:6:36","nodeType":"YulIdentifier","src":"14896:6:36"},"nativeSrc":"14896:34:36","nodeType":"YulFunctionCall","src":"14896:34:36"},"nativeSrc":"14896:34:36","nodeType":"YulExpressionStatement","src":"14896:34:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14950:9:36","nodeType":"YulIdentifier","src":"14950:9:36"},{"kind":"number","nativeSrc":"14961:2:36","nodeType":"YulLiteral","src":"14961:2:36","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"14946:3:36","nodeType":"YulIdentifier","src":"14946:3:36"},"nativeSrc":"14946:18:36","nodeType":"YulFunctionCall","src":"14946:18:36"},{"name":"value3","nativeSrc":"14966:6:36","nodeType":"YulIdentifier","src":"14966:6:36"}],"functionName":{"name":"mstore","nativeSrc":"14939:6:36","nodeType":"YulIdentifier","src":"14939:6:36"},"nativeSrc":"14939:34:36","nodeType":"YulFunctionCall","src":"14939:34:36"},"nativeSrc":"14939:34:36","nodeType":"YulExpressionStatement","src":"14939:34:36"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nativeSrc":"14581:398:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14707:9:36","nodeType":"YulTypedName","src":"14707:9:36","type":""},{"name":"value3","nativeSrc":"14718:6:36","nodeType":"YulTypedName","src":"14718:6:36","type":""},{"name":"value2","nativeSrc":"14726:6:36","nodeType":"YulTypedName","src":"14726:6:36","type":""},{"name":"value1","nativeSrc":"14734:6:36","nodeType":"YulTypedName","src":"14734:6:36","type":""},{"name":"value0","nativeSrc":"14742:6:36","nodeType":"YulTypedName","src":"14742:6:36","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14753:4:36","nodeType":"YulTypedName","src":"14753:4:36","type":""}],"src":"14581:398:36"},{"body":{"nativeSrc":"15016:95:36","nodeType":"YulBlock","src":"15016:95:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"15033:1:36","nodeType":"YulLiteral","src":"15033:1:36","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"15040:3:36","nodeType":"YulLiteral","src":"15040:3:36","type":"","value":"224"},{"kind":"number","nativeSrc":"15045:10:36","nodeType":"YulLiteral","src":"15045:10:36","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"15036:3:36","nodeType":"YulIdentifier","src":"15036:3:36"},"nativeSrc":"15036:20:36","nodeType":"YulFunctionCall","src":"15036:20:36"}],"functionName":{"name":"mstore","nativeSrc":"15026:6:36","nodeType":"YulIdentifier","src":"15026:6:36"},"nativeSrc":"15026:31:36","nodeType":"YulFunctionCall","src":"15026:31:36"},"nativeSrc":"15026:31:36","nodeType":"YulExpressionStatement","src":"15026:31:36"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"15073:1:36","nodeType":"YulLiteral","src":"15073:1:36","type":"","value":"4"},{"kind":"number","nativeSrc":"15076:4:36","nodeType":"YulLiteral","src":"15076:4:36","type":"","value":"0x21"}],"functionName":{"name":"mstore","nativeSrc":"15066:6:36","nodeType":"YulIdentifier","src":"15066:6:36"},"nativeSrc":"15066:15:36","nodeType":"YulFunctionCall","src":"15066:15:36"},"nativeSrc":"15066:15:36","nodeType":"YulExpressionStatement","src":"15066:15:36"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"15097:1:36","nodeType":"YulLiteral","src":"15097:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"15100:4:36","nodeType":"YulLiteral","src":"15100:4:36","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"15090:6:36","nodeType":"YulIdentifier","src":"15090:6:36"},"nativeSrc":"15090:15:36","nodeType":"YulFunctionCall","src":"15090:15:36"},"nativeSrc":"15090:15:36","nodeType":"YulExpressionStatement","src":"15090:15:36"}]},"name":"panic_error_0x21","nativeSrc":"14984:127:36","nodeType":"YulFunctionDefinition","src":"14984:127:36"}]},"contents":"{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(add(pos, i), 0x20), mload(add(add(value, i), 0x20)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := 0\n        value_2 := calldataload(add(headStart, 64))\n        value2 := value_2\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), not(31)), 63), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value2 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_decode_tuple_t_contract$_IERC3156FlashBorrower_$291t_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := 0\n        value_2 := calldataload(add(headStart, 64))\n        value2 := value_2\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_1)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        if gt(add(add(_1, length), 32), dataEnd) { revert(0, 0) }\n        value3 := add(_1, 32)\n        value4 := length\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, shl(248, 255)))\n        mstore(add(headStart, 32), 224)\n        let tail_1 := abi_encode_string(value1, add(headStart, 224))\n        mstore(add(headStart, 64), sub(tail_1, headStart))\n        let tail_2 := abi_encode_string(value2, tail_1)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), sub(tail_2, headStart))\n        let pos := tail_2\n        let length := mload(value6)\n        mstore(tail_2, length)\n        pos := add(tail_2, 32)\n        let srcPtr := add(value6, 32)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, 32)\n            srcPtr := add(srcPtr, 32)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := 0\n        value_2 := calldataload(add(headStart, 64))\n        value2 := value_2\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value3 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := 0\n        value_2 := calldataload(add(headStart, 64))\n        value2 := value_2\n        let value_3 := 0\n        value_3 := calldataload(add(headStart, 96))\n        value3 := value_3\n        let value_4 := calldataload(add(headStart, 128))\n        if iszero(eq(value_4, and(value_4, 0xff))) { revert(0, 0) }\n        value4 := value_4\n        let value_5 := 0\n        value_5 := calldataload(add(headStart, 160))\n        value5 := value_5\n        let value_6 := 0\n        value_6 := calldataload(add(headStart, 192))\n        value6 := value_6\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_calldata_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        mstore(add(headStart, 160), value5)\n        calldatacopy(add(headStart, 192), value4, value5)\n        mstore(add(add(headStart, value5), 192), 0)\n        tail := add(add(headStart, and(add(value5, 31), not(31))), 192)\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), 96)\n        tail := abi_encode_string(value2, add(headStart, 96))\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n}","id":36,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"4386":[{"length":32,"start":3185}],"4388":[{"length":32,"start":3143}],"4390":[{"length":32,"start":3101}],"4392":[{"length":32,"start":3266}],"4394":[{"length":32,"start":3306}],"4397":[{"length":32,"start":4123}],"4400":[{"length":32,"start":4168}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101f05760003560e01c806370a082311161010f578063a9059cbb116100a2578063d8fbe99411610071578063d8fbe99414610412578063d9d98ce414610425578063dd62ed3e14610438578063f2fde38b1461047157600080fd5b8063a9059cbb146103c6578063c1d34b89146103d9578063cae9ca51146103ec578063d505accf146103ff57600080fd5b80638456cb59116100de5780638456cb591461037257806384b0196e1461037a5780638da5cb5b1461039557806395d89b41146103be57600080fd5b806370a082311461031b578063715018a61461034457806379cc67901461034c5780637ecebe001461035f57600080fd5b80633644e5151161018757806342966c681161015657806342966c68146102d75780635c975abb146102ea5780635cffe9de146102f5578063613255ab1461030857600080fd5b80633644e5151461029f5780633f4ba83a146102a75780634000aea0146102b157806340c10f19146102c457600080fd5b806318160ddd116101c357806318160ddd1461025857806323b872dd1461026a578063313ce5671461027d5780633177029f1461028c57600080fd5b806301ffc9a7146101f557806306fdde031461021d578063095ea7b3146102325780631296ee6214610245575b600080fd5b61020861020336600461171b565b610484565b60405190151581526020015b60405180910390f35b6102256104bb565b604051610214919061177e565b6102086102403660046117a6565b61054d565b6102086102533660046117a6565b610565565b6002545b604051908152602001610214565b6102086102783660046117d2565b610588565b60405160128152602001610214565b61020861029a3660046117a6565b6105ac565b61025c6105c8565b6102af6105d7565b005b6102086102bf3660046118b8565b6105e9565b6102af6102d23660046117a6565b610636565b6102af6102e5366004611911565b61064c565b60055460ff16610208565b61020861030336600461192a565b610659565b61025c6103163660046119cb565b6107d1565b61025c6103293660046119cb565b6001600160a01b031660009081526020819052604090205490565b6102af6107f9565b6102af61035a3660046117a6565b61080b565b61025c61036d3660046119cb565b610820565b6102af61083e565b61038261084e565b60405161021497969594939291906119e8565b60055461010090046001600160a01b03166040516001600160a01b039091168152602001610214565b610225610894565b6102086103d43660046117a6565b6108a3565b6102086103e7366004611a80565b6108b1565b6102086103fa3660046118b8565b610902565b6102af61040d366004611aec565b610949565b6102086104203660046117d2565b610a83565b61025c6104333660046117a6565b610aa8565b61025c610446366004611b63565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102af61047f3660046119cb565b610ae5565b60006001600160e01b0319821663b0202a1160e01b14806104b557506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600380546104ca90611b9c565b80601f01602080910402602001604051908101604052809291908181526020018280546104f690611b9c565b80156105435780601f1061051857610100808354040283529160200191610543565b820191906000526020600020905b81548152906001019060200180831161052657829003601f168201915b5050505050905090565b60003361055b818585610b20565b5060019392505050565b60006105818383604051806020016040528060008152506105e9565b9392505050565b600033610596858285610b32565b6105a1858585610bb1565b506001949350505050565b6000610581838360405180602001604052806000815250610902565b60006105d2610c10565b905090565b6105df610d3b565b6105e7610d6e565b565b60006105f584846108a3565b6106295760405163118d81d760e11b81526001600160a01b0385166004820152602481018490526044015b60405180910390fd5b61055b3333868686610dc0565b61063e610d3b565b6106488282610f11565b5050565b6106563382610f47565b50565b600080610665866107d1565b90508085111561068b5760405163fd9a760960e01b815260048101829052602401610620565b60006106978787610aa8565b90506106a38887610f11565b6040516323e30c8b60e01b81527f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd9906001600160a01b038a16906323e30c8b906106fb9033908c908c9088908d908d90600401611bd6565b6020604051808303816000875af115801561071a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073e9190611c2f565b146107665760405162678c5b60e81b81526001600160a01b0389166004820152602401610620565b600061077c8930610777858b611c5e565b610b32565b81158061079057506001600160a01b038116155b156107ad576107a8896107a3848a611c5e565b610f47565b6107c2565b6107b78988610f47565b6107c2898284610bb1565b50600198975050505050505050565b60006001600160a01b03821630146107ea5760006104b5565b6002546104b590600019611c71565b610801610d3b565b6105e76000610f7d565b610816823383610b32565b6106488282610f47565b6001600160a01b0381166000908152600860205260408120546104b5565b610846610d3b565b6105e7610fd7565b600060608060008060006060610862611014565b61086a611041565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b6060600480546104ca90611b9c565b60003361055b818585610bb1565b60006108be858585610588565b6108f557604051635ab42af360e11b81526001600160a01b0380871660048301528516602482015260448101849052606401610620565b6105a13386868686610dc0565b600061090e848461054d565b61093d57604051631439557160e21b81526001600160a01b038516600482015260248101849052604401610620565b61055b3385858561106e565b8342111561096d5760405163313c898160e11b815260048101859052602401610620565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886109ba8c6001600160a01b0316600090815260086020526040902080546001810190915590565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610a15826111ac565b90506000610a25828787876111d9565b9050896001600160a01b0316816001600160a01b031614610a6c576040516325c0072360e11b81526001600160a01b0380831660048301528b166024820152604401610620565b610a778a8a8a610b20565b50505050505050505050565b6000610aa0848484604051806020016040528060008152506108b1565b949350505050565b60006001600160a01b0383163014610ade57604051635ad3edc960e11b81526001600160a01b0384166004820152602401610620565b6000610581565b610aed610d3b565b6001600160a01b038116610b1757604051631e4fbdf760e01b815260006004820152602401610620565b61065681610f7d565b610b2d8383836001611207565b505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811015610bab5781811015610b9c57604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610620565b610bab84848484036000611207565b50505050565b6001600160a01b038316610bdb57604051634b637e8f60e11b815260006004820152602401610620565b6001600160a01b038216610c055760405163ec442f0560e01b815260006004820152602401610620565b610b2d8383836112dc565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015610c6957507f000000000000000000000000000000000000000000000000000000000000000046145b15610c9357507f000000000000000000000000000000000000000000000000000000000000000090565b6105d2604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b6005546001600160a01b036101009091041633146105e75760405163118cdaa760e01b8152336004820152602401610620565b610d766112e7565b6005805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b826001600160a01b03163b600003610df6576040516322a5b36760e21b81526001600160a01b0384166004820152602401610620565b604051632229f29760e21b81526001600160a01b038416906388a7ca5c90610e28908890889087908790600401611c84565b6020604051808303816000875af1925050508015610e63575060408051601f3d908101601f19168201909252610e6091810190611cc1565b60015b610ecc573d808015610e91576040519150601f19603f3d011682016040523d82523d6000602084013e610e96565b606091505b508051600003610ec4576040516322a5b36760e21b81526001600160a01b0385166004820152602401610620565b805160208201fd5b6001600160e01b03198116632229f29760e21b14610f08576040516322a5b36760e21b81526001600160a01b0385166004820152602401610620565b505b5050505050565b6001600160a01b038216610f3b5760405163ec442f0560e01b815260006004820152602401610620565b610648600083836112dc565b6001600160a01b038216610f7157604051634b637e8f60e11b815260006004820152602401610620565b610648826000836112dc565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610fdf61130a565b6005805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610da33390565b60606105d27f0000000000000000000000000000000000000000000000000000000000000000600661132e565b60606105d27f0000000000000000000000000000000000000000000000000000000000000000600761132e565b826001600160a01b03163b6000036110a45760405163deb6d3ed60e01b81526001600160a01b0384166004820152602401610620565b6040516307b04a2d60e41b81526001600160a01b03841690637b04a2d0906110d490879086908690600401611cde565b6020604051808303816000875af192505050801561110f575060408051601f3d908101601f1916820190925261110c91810190611cc1565b60015b611170573d80801561113d576040519150601f19603f3d011682016040523d82523d6000602084013e611142565b606091505b508051600003610ec45760405163deb6d3ed60e01b81526001600160a01b0385166004820152602401610620565b6001600160e01b031981166307b04a2d60e41b14610f0a5760405163deb6d3ed60e01b81526001600160a01b0385166004820152602401610620565b60006104b56111b9610c10565b8360405161190160f01b8152600281019290925260228201526042902090565b6000806000806111eb888888886113d9565b9250925092506111fb82826114a8565b50909695505050505050565b6001600160a01b0384166112315760405163e602df0560e01b815260006004820152602401610620565b6001600160a01b03831661125b57604051634a1406b160e11b815260006004820152602401610620565b6001600160a01b0380851660009081526001602090815260408083209387168352929052208290558015610bab57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516112ce91815260200190565b60405180910390a350505050565b610b2d838383611561565b60055460ff166105e757604051638dfc202b60e01b815260040160405180910390fd5b60055460ff16156105e75760405163d93c066560e01b815260040160405180910390fd5b606060ff83146113485761134183611574565b90506104b5565b81805461135490611b9c565b80601f016020809104026020016040519081016040528092919081815260200182805461138090611b9c565b80156113cd5780601f106113a2576101008083540402835291602001916113cd565b820191906000526020600020905b8154815290600101906020018083116113b057829003601f168201915b505050505090506104b5565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115611414575060009150600390508261149e565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015611468573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166114945750600092506001915082905061149e565b9250600091508190505b9450945094915050565b60008260038111156114bc576114bc611d0e565b036114c5575050565b60018260038111156114d9576114d9611d0e565b036114f75760405163f645eedf60e01b815260040160405180910390fd5b600282600381111561150b5761150b611d0e565b0361152c5760405163fce698f760e01b815260048101829052602401610620565b600382600381111561154057611540611d0e565b03610648576040516335e2f38360e21b815260048101829052602401610620565b61156961130a565b610b2d8383836115b3565b60606000611581836116dd565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b6001600160a01b0383166115de5780600260008282546115d39190611c5e565b909155506116509050565b6001600160a01b038316600090815260208190526040902054818110156116315760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610620565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661166c5760028054829003905561168b565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516116d091815260200190565b60405180910390a3505050565b600060ff8216601f8111156104b557604051632cd44ac360e21b815260040160405180910390fd5b6001600160e01b03198116811461065657600080fd5b60006020828403121561172d57600080fd5b813561058181611705565b6000815180845260005b8181101561175e57602081850181015186830182015201611742565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006105816020830184611738565b6001600160a01b038116811461065657600080fd5b600080604083850312156117b957600080fd5b82356117c481611791565b946020939093013593505050565b6000806000606084860312156117e757600080fd5b83356117f281611791565b9250602084013561180281611791565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261183a57600080fd5b813567ffffffffffffffff81111561185457611854611813565b604051601f8201601f19908116603f0116810167ffffffffffffffff8111828210171561188357611883611813565b60405281815283820160200185101561189b57600080fd5b816020850160208301376000918101602001919091529392505050565b6000806000606084860312156118cd57600080fd5b83356118d881611791565b925060208401359150604084013567ffffffffffffffff8111156118fb57600080fd5b61190786828701611829565b9150509250925092565b60006020828403121561192357600080fd5b5035919050565b60008060008060006080868803121561194257600080fd5b853561194d81611791565b9450602086013561195d81611791565b935060408601359250606086013567ffffffffffffffff81111561198057600080fd5b8601601f8101881361199157600080fd5b803567ffffffffffffffff8111156119a857600080fd5b8860208284010111156119ba57600080fd5b959894975092955050506020019190565b6000602082840312156119dd57600080fd5b813561058181611791565b60ff60f81b8816815260e060208201526000611a0760e0830189611738565b8281036040840152611a198189611738565b606084018890526001600160a01b038716608085015260a0840186905283810360c08501528451808252602080870193509091019060005b81811015611a6f578351835260209384019390920191600101611a51565b50909b9a5050505050505050505050565b60008060008060808587031215611a9657600080fd5b8435611aa181611791565b93506020850135611ab181611791565b925060408501359150606085013567ffffffffffffffff811115611ad457600080fd5b611ae087828801611829565b91505092959194509250565b600080600080600080600060e0888a031215611b0757600080fd5b8735611b1281611791565b96506020880135611b2281611791565b95506040880135945060608801359350608088013560ff81168114611b4657600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215611b7657600080fd5b8235611b8181611791565b91506020830135611b9181611791565b809150509250929050565b600181811c90821680611bb057607f821691505b602082108103611bd057634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160a01b03878116825286166020820152604081018590526060810184905260a0608082018190528101829052818360c0830137600081830160c090810191909152601f909201601f1916010195945050505050565b600060208284031215611c4157600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156104b5576104b5611c48565b818103818111156104b5576104b5611c48565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611cb790830184611738565b9695505050505050565b600060208284031215611cd357600080fd5b815161058181611705565b60018060a01b0384168152826020820152606060408201526000611d056060830184611738565b95945050505050565b634e487b7160e01b600052602160045260246000fdfea26469706673582212202a2d404acc0e819f39470b643e17960834452563ea82333abb00b909ee942b8d64736f6c634300081b0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1F0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD8FBE994 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD8FBE994 EQ PUSH2 0x412 JUMPI DUP1 PUSH4 0xD9D98CE4 EQ PUSH2 0x425 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x438 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x471 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3C6 JUMPI DUP1 PUSH4 0xC1D34B89 EQ PUSH2 0x3D9 JUMPI DUP1 PUSH4 0xCAE9CA51 EQ PUSH2 0x3EC JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x3FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8456CB59 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x372 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x37A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x31B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x344 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x34C JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x35F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3644E515 GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x42966C68 GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2EA JUMPI DUP1 PUSH4 0x5CFFE9DE EQ PUSH2 0x2F5 JUMPI DUP1 PUSH4 0x613255AB EQ PUSH2 0x308 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3644E515 EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0x4000AEA0 EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0x3177029F EQ PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x1296EE62 EQ PUSH2 0x245 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x208 PUSH2 0x203 CALLDATASIZE PUSH1 0x4 PUSH2 0x171B JUMP JUMPDEST PUSH2 0x484 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x225 PUSH2 0x4BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x214 SWAP2 SWAP1 PUSH2 0x177E JUMP JUMPDEST PUSH2 0x208 PUSH2 0x240 CALLDATASIZE PUSH1 0x4 PUSH2 0x17A6 JUMP JUMPDEST PUSH2 0x54D JUMP JUMPDEST PUSH2 0x208 PUSH2 0x253 CALLDATASIZE PUSH1 0x4 PUSH2 0x17A6 JUMP JUMPDEST PUSH2 0x565 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x214 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x278 CALLDATASIZE PUSH1 0x4 PUSH2 0x17D2 JUMP JUMPDEST PUSH2 0x588 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x214 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x29A CALLDATASIZE PUSH1 0x4 PUSH2 0x17A6 JUMP JUMPDEST PUSH2 0x5AC JUMP JUMPDEST PUSH2 0x25C PUSH2 0x5C8 JUMP JUMPDEST PUSH2 0x2AF PUSH2 0x5D7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x208 PUSH2 0x2BF CALLDATASIZE PUSH1 0x4 PUSH2 0x18B8 JUMP JUMPDEST PUSH2 0x5E9 JUMP JUMPDEST PUSH2 0x2AF PUSH2 0x2D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x17A6 JUMP JUMPDEST PUSH2 0x636 JUMP JUMPDEST PUSH2 0x2AF PUSH2 0x2E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1911 JUMP JUMPDEST PUSH2 0x64C JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0x208 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x303 CALLDATASIZE PUSH1 0x4 PUSH2 0x192A JUMP JUMPDEST PUSH2 0x659 JUMP JUMPDEST PUSH2 0x25C PUSH2 0x316 CALLDATASIZE PUSH1 0x4 PUSH2 0x19CB JUMP JUMPDEST PUSH2 0x7D1 JUMP JUMPDEST PUSH2 0x25C PUSH2 0x329 CALLDATASIZE PUSH1 0x4 PUSH2 0x19CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2AF PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x2AF PUSH2 0x35A CALLDATASIZE PUSH1 0x4 PUSH2 0x17A6 JUMP JUMPDEST PUSH2 0x80B JUMP JUMPDEST PUSH2 0x25C PUSH2 0x36D CALLDATASIZE PUSH1 0x4 PUSH2 0x19CB JUMP JUMPDEST PUSH2 0x820 JUMP JUMPDEST PUSH2 0x2AF PUSH2 0x83E JUMP JUMPDEST PUSH2 0x382 PUSH2 0x84E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x214 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19E8 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x214 JUMP JUMPDEST PUSH2 0x225 PUSH2 0x894 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x3D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x17A6 JUMP JUMPDEST PUSH2 0x8A3 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x3E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A80 JUMP JUMPDEST PUSH2 0x8B1 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x3FA CALLDATASIZE PUSH1 0x4 PUSH2 0x18B8 JUMP JUMPDEST PUSH2 0x902 JUMP JUMPDEST PUSH2 0x2AF PUSH2 0x40D CALLDATASIZE PUSH1 0x4 PUSH2 0x1AEC JUMP JUMPDEST PUSH2 0x949 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x420 CALLDATASIZE PUSH1 0x4 PUSH2 0x17D2 JUMP JUMPDEST PUSH2 0xA83 JUMP JUMPDEST PUSH2 0x25C PUSH2 0x433 CALLDATASIZE PUSH1 0x4 PUSH2 0x17A6 JUMP JUMPDEST PUSH2 0xAA8 JUMP JUMPDEST PUSH2 0x25C PUSH2 0x446 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B63 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2AF PUSH2 0x47F CALLDATASIZE PUSH1 0x4 PUSH2 0x19CB JUMP JUMPDEST PUSH2 0xAE5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xB0202A11 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x4B5 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x4CA SWAP1 PUSH2 0x1B9C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4F6 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x543 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x518 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x543 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x526 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x55B DUP2 DUP6 DUP6 PUSH2 0xB20 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x581 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x5E9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x596 DUP6 DUP3 DUP6 PUSH2 0xB32 JUMP JUMPDEST PUSH2 0x5A1 DUP6 DUP6 DUP6 PUSH2 0xBB1 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x581 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x902 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5D2 PUSH2 0xC10 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5DF PUSH2 0xD3B JUMP JUMPDEST PUSH2 0x5E7 PUSH2 0xD6E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F5 DUP5 DUP5 PUSH2 0x8A3 JUMP JUMPDEST PUSH2 0x629 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118D81D7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x55B CALLER CALLER DUP7 DUP7 DUP7 PUSH2 0xDC0 JUMP JUMPDEST PUSH2 0x63E PUSH2 0xD3B JUMP JUMPDEST PUSH2 0x648 DUP3 DUP3 PUSH2 0xF11 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x656 CALLER DUP3 PUSH2 0xF47 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x665 DUP7 PUSH2 0x7D1 JUMP JUMPDEST SWAP1 POP DUP1 DUP6 GT ISZERO PUSH2 0x68B JUMPI PUSH1 0x40 MLOAD PUSH4 0xFD9A7609 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x620 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x697 DUP8 DUP8 PUSH2 0xAA8 JUMP JUMPDEST SWAP1 POP PUSH2 0x6A3 DUP9 DUP8 PUSH2 0xF11 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23E30C8B PUSH1 0xE0 SHL DUP2 MSTORE PUSH32 0x439148F0BBC682CA079E46D6E2C2F0C1E3B820F1A291B069D8882ABF8CF18DD9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP1 PUSH4 0x23E30C8B SWAP1 PUSH2 0x6FB SWAP1 CALLER SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP9 SWAP1 DUP14 SWAP1 DUP14 SWAP1 PUSH1 0x4 ADD PUSH2 0x1BD6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x71A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x73E SWAP2 SWAP1 PUSH2 0x1C2F JUMP JUMPDEST EQ PUSH2 0x766 JUMPI PUSH1 0x40 MLOAD PUSH3 0x678C5B PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x620 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77C DUP10 ADDRESS PUSH2 0x777 DUP6 DUP12 PUSH2 0x1C5E JUMP JUMPDEST PUSH2 0xB32 JUMP JUMPDEST DUP2 ISZERO DUP1 PUSH2 0x790 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO JUMPDEST ISZERO PUSH2 0x7AD JUMPI PUSH2 0x7A8 DUP10 PUSH2 0x7A3 DUP5 DUP11 PUSH2 0x1C5E JUMP JUMPDEST PUSH2 0xF47 JUMP JUMPDEST PUSH2 0x7C2 JUMP JUMPDEST PUSH2 0x7B7 DUP10 DUP9 PUSH2 0xF47 JUMP JUMPDEST PUSH2 0x7C2 DUP10 DUP3 DUP5 PUSH2 0xBB1 JUMP JUMPDEST POP PUSH1 0x1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ADDRESS EQ PUSH2 0x7EA JUMPI PUSH1 0x0 PUSH2 0x4B5 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x4B5 SWAP1 PUSH1 0x0 NOT PUSH2 0x1C71 JUMP JUMPDEST PUSH2 0x801 PUSH2 0xD3B JUMP JUMPDEST PUSH2 0x5E7 PUSH1 0x0 PUSH2 0xF7D JUMP JUMPDEST PUSH2 0x816 DUP3 CALLER DUP4 PUSH2 0xB32 JUMP JUMPDEST PUSH2 0x648 DUP3 DUP3 PUSH2 0xF47 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x4B5 JUMP JUMPDEST PUSH2 0x846 PUSH2 0xD3B JUMP JUMPDEST PUSH2 0x5E7 PUSH2 0xFD7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0x862 PUSH2 0x1014 JUMP JUMPDEST PUSH2 0x86A PUSH2 0x1041 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0xF PUSH1 0xF8 SHL SWAP12 SWAP4 SWAP11 POP SWAP2 SWAP9 POP CHAINID SWAP8 POP ADDRESS SWAP7 POP SWAP5 POP SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x4CA SWAP1 PUSH2 0x1B9C JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x55B DUP2 DUP6 DUP6 PUSH2 0xBB1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8BE DUP6 DUP6 DUP6 PUSH2 0x588 JUMP JUMPDEST PUSH2 0x8F5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5AB42AF3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x4 DUP4 ADD MSTORE DUP6 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x620 JUMP JUMPDEST PUSH2 0x5A1 CALLER DUP7 DUP7 DUP7 DUP7 PUSH2 0xDC0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x90E DUP5 DUP5 PUSH2 0x54D JUMP JUMPDEST PUSH2 0x93D JUMPI PUSH1 0x40 MLOAD PUSH4 0x14395571 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x620 JUMP JUMPDEST PUSH2 0x55B CALLER DUP6 DUP6 DUP6 PUSH2 0x106E JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x96D JUMPI PUSH1 0x40 MLOAD PUSH4 0x313C8981 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x620 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x9BA DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP1 DUP7 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0xE0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0xA15 DUP3 PUSH2 0x11AC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xA25 DUP3 DUP8 DUP8 DUP8 PUSH2 0x11D9 JUMP JUMPDEST SWAP1 POP DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xA6C JUMPI PUSH1 0x40 MLOAD PUSH4 0x25C00723 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP12 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x620 JUMP JUMPDEST PUSH2 0xA77 DUP11 DUP11 DUP11 PUSH2 0xB20 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAA0 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8B1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ADDRESS EQ PUSH2 0xADE JUMPI PUSH1 0x40 MLOAD PUSH4 0x5AD3EDC9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x620 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x581 JUMP JUMPDEST PUSH2 0xAED PUSH2 0xD3B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB17 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x620 JUMP JUMPDEST PUSH2 0x656 DUP2 PUSH2 0xF7D JUMP JUMPDEST PUSH2 0xB2D DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1207 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 LT ISZERO PUSH2 0xBAB JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xB9C JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x620 JUMP JUMPDEST PUSH2 0xBAB DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x1207 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xBDB JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x620 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC05 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x620 JUMP JUMPDEST PUSH2 0xB2D DUP4 DUP4 DUP4 PUSH2 0x12DC JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 ISZERO PUSH2 0xC69 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0xC93 JUMPI POP PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x5D2 PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x0 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x5E7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x620 JUMP JUMPDEST PUSH2 0xD76 PUSH2 0x12E7 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH1 0x0 SUB PUSH2 0xDF6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x22A5B367 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x620 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2229F297 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x88A7CA5C SWAP1 PUSH2 0xE28 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1C84 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xE63 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xE60 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1CC1 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xECC JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xE91 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xE96 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xEC4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x22A5B367 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x620 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0x2229F297 PUSH1 0xE2 SHL EQ PUSH2 0xF08 JUMPI PUSH1 0x40 MLOAD PUSH4 0x22A5B367 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x620 JUMP JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF3B JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x620 JUMP JUMPDEST PUSH2 0x648 PUSH1 0x0 DUP4 DUP4 PUSH2 0x12DC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF71 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x620 JUMP JUMPDEST PUSH2 0x648 DUP3 PUSH1 0x0 DUP4 PUSH2 0x12DC JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xFDF PUSH2 0x130A JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xDA3 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x5D2 PUSH32 0x0 PUSH1 0x6 PUSH2 0x132E JUMP JUMPDEST PUSH1 0x60 PUSH2 0x5D2 PUSH32 0x0 PUSH1 0x7 PUSH2 0x132E JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH1 0x0 SUB PUSH2 0x10A4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xDEB6D3ED PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x620 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7B04A2D PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x7B04A2D0 SWAP1 PUSH2 0x10D4 SWAP1 DUP8 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x1CDE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x110F JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x110C SWAP2 DUP2 ADD SWAP1 PUSH2 0x1CC1 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1170 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x113D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1142 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xEC4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xDEB6D3ED PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x620 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0x7B04A2D PUSH1 0xE4 SHL EQ PUSH2 0xF0A JUMPI PUSH1 0x40 MLOAD PUSH4 0xDEB6D3ED PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x620 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B5 PUSH2 0x11B9 PUSH2 0xC10 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x11EB DUP9 DUP9 DUP9 DUP9 PUSH2 0x13D9 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x11FB DUP3 DUP3 PUSH2 0x14A8 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1231 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x620 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x125B JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x620 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0xBAB JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x12CE SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0xB2D DUP4 DUP4 DUP4 PUSH2 0x1561 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0x5E7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x5E7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH1 0xFF DUP4 EQ PUSH2 0x1348 JUMPI PUSH2 0x1341 DUP4 PUSH2 0x1574 JUMP JUMPDEST SWAP1 POP PUSH2 0x4B5 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x1354 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1380 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x13CD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x13A2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x13CD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x13B0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH2 0x4B5 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0x1414 JUMPI POP PUSH1 0x0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0x149E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1468 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1494 JUMPI POP PUSH1 0x0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0x149E JUMP JUMPDEST SWAP3 POP PUSH1 0x0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x14BC JUMPI PUSH2 0x14BC PUSH2 0x1D0E JUMP JUMPDEST SUB PUSH2 0x14C5 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x14D9 JUMPI PUSH2 0x14D9 PUSH2 0x1D0E JUMP JUMPDEST SUB PUSH2 0x14F7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x150B JUMPI PUSH2 0x150B PUSH2 0x1D0E JUMP JUMPDEST SUB PUSH2 0x152C JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x620 JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1540 JUMPI PUSH2 0x1540 PUSH2 0x1D0E JUMP JUMPDEST SUB PUSH2 0x648 JUMPI PUSH1 0x40 MLOAD PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x620 JUMP JUMPDEST PUSH2 0x1569 PUSH2 0x130A JUMP JUMPDEST PUSH2 0xB2D DUP4 DUP4 DUP4 PUSH2 0x15B3 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1581 DUP4 PUSH2 0x16DD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP POP SWAP2 DUP3 MSTORE POP PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x15DE JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x15D3 SWAP2 SWAP1 PUSH2 0x1C5E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1650 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1631 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x620 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x166C JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x168B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x16D0 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x4B5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CD44AC3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x656 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x172D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x581 DUP2 PUSH2 0x1705 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x175E JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1742 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x581 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1738 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x656 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x17C4 DUP2 PUSH2 0x1791 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x17E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x17F2 DUP2 PUSH2 0x1791 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1802 DUP2 PUSH2 0x1791 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x183A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1854 JUMPI PUSH2 0x1854 PUSH2 0x1813 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1883 JUMPI PUSH2 0x1883 PUSH2 0x1813 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD PUSH1 0x20 ADD DUP6 LT ISZERO PUSH2 0x189B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x18CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x18D8 DUP2 PUSH2 0x1791 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1907 DUP7 DUP3 DUP8 ADD PUSH2 0x1829 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1923 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1942 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x194D DUP2 PUSH2 0x1791 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x195D DUP2 PUSH2 0x1791 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1980 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 ADD PUSH1 0x1F DUP2 ADD DUP9 SGT PUSH2 0x1991 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 PUSH1 0x20 DUP3 DUP5 ADD ADD GT ISZERO PUSH2 0x19BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP3 SWAP6 POP POP POP PUSH1 0x20 ADD SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x581 DUP2 PUSH2 0x1791 JUMP JUMPDEST PUSH1 0xFF PUSH1 0xF8 SHL DUP9 AND DUP2 MSTORE PUSH1 0xE0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1A07 PUSH1 0xE0 DUP4 ADD DUP10 PUSH2 0x1738 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x1A19 DUP2 DUP10 PUSH2 0x1738 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD DUP7 SWAP1 MSTORE DUP4 DUP2 SUB PUSH1 0xC0 DUP6 ADD MSTORE DUP5 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP8 ADD SWAP4 POP SWAP1 SWAP2 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1A6F JUMPI DUP4 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1A51 JUMP JUMPDEST POP SWAP1 SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1A96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x1AA1 DUP2 PUSH2 0x1791 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x1AB1 DUP2 PUSH2 0x1791 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1AD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AE0 DUP8 DUP3 DUP9 ADD PUSH2 0x1829 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1B07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x1B12 DUP2 PUSH2 0x1791 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH2 0x1B22 DUP2 PUSH2 0x1791 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1B46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 SWAP1 SWAP4 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1B81 DUP2 PUSH2 0x1791 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1B91 DUP2 PUSH2 0x1791 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1BB0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1BD0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP3 MSTORE DUP7 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE DUP2 ADD DUP3 SWAP1 MSTORE DUP2 DUP4 PUSH1 0xC0 DUP4 ADD CALLDATACOPY PUSH1 0x0 DUP2 DUP4 ADD PUSH1 0xC0 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND ADD ADD SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x4B5 JUMPI PUSH2 0x4B5 PUSH2 0x1C48 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x4B5 JUMPI PUSH2 0x4B5 PUSH2 0x1C48 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1CB7 SWAP1 DUP4 ADD DUP5 PUSH2 0x1738 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x581 DUP2 PUSH2 0x1705 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1D05 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1738 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A 0x2D BLOCKHASH BLOBBASEFEE 0xCC 0xE DUP2 SWAP16 CODECOPY SELFBALANCE SIGNEXTEND PUSH5 0x3E17960834 GASLIMIT 0x25 PUSH4 0xEA82333A 0xBB STOP 0xB9 MULMOD 0xEE SWAP5 0x2B DUP14 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"711:739:35:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1791:213:12;;;;;;:::i;:::-;;:::i;:::-;;;565:14:36;;558:22;540:41;;528:2;513:18;1791:213:12;;;;;;;;1760:89:10;;;:::i;:::-;;;;;;;:::i;3902:186::-;;;;;;:::i;:::-;;:::i;2566:128:12:-;;;;;;:::i;:::-;;:::i;2803:97:10:-;2881:12;;2803:97;;;1876:25:36;;;1864:2;1849:18;2803:97:10;1730:177:36;4680:244:10;;;;;;:::i;:::-;;:::i;2688:82::-;;;2761:2;2567:36:36;;2555:2;2540:18;2688:82:10;2425:184:36;5024:136:12;;;;;;:::i;:::-;;:::i;2614:112:16:-;;;:::i;1038:63:35:-;;;:::i;:::-;;2834:326:12;;;;;;:::i;:::-;;:::i;1107:93:35:-;;;;;;:::i;:::-;;:::i;618:87:13:-;;;;;;:::i;:::-;;:::i;1726:84:23:-;1796:7;;;;1726:84;;4807:962:14;;;;;;:::i;:::-;;:::i;1957:161::-;;;;;;:::i;:::-;;:::i;2933:116:10:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3024:18:10;2998:7;3024:18;;;;;;;;;;;;2933:116;2293:101:0;;;:::i;1021:158:13:-;;;;;;:::i;:::-;;:::i;2379:143:16:-;;;;;;:::i;:::-;;:::i;973:59:35:-;;;:::i;5228:557:28:-;;;:::i;:::-;;;;;;;;;;;;;:::i;1638:85:0:-;1710:6;;;;;-1:-1:-1;;;;;1710:6:0;1638:85;;-1:-1:-1;;;;;7145:32:36;;;7127:51;;7115:2;7100:18;1638:85:0;6981:203:36;1962:93:10;;;:::i;3244:178::-;;;;;;:::i;:::-;;:::i;4042:394:12:-;;;;;;:::i;:::-;;:::i;5299:329::-;;;;;;:::i;:::-;;:::i;1668:672:16:-;;;;;;:::i;:::-;;:::i;3742:156:12:-;;;;;;:::i;:::-;;:::i;2483:232:14:-;;;;;;:::i;:::-;;:::i;3455:140:10:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3561:18:10;;;3535:7;3561:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3455:140;2543:215:0;;;;;;:::i;:::-;;:::i;1791:213:12:-;1893:4;-1:-1:-1;;;;;;1916:41:12;;-1:-1:-1;;;1916:41:12;;:81;;-1:-1:-1;;;;;;;;;;829:40:30;;;1961:36:12;1909:88;1791:213;-1:-1:-1;;1791:213:12:o;1760:89:10:-;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3902:186::-;3975:4;735:10:20;4029:31:10;735:10:20;4045:7:10;4054:5;4029:8;:31::i;:::-;-1:-1:-1;4077:4:10;;3902:186;-1:-1:-1;;;3902:186:10:o;2566:128:12:-;2634:4;2657:30;2673:2;2677:5;2657:30;;;;;;;;;;;;:15;:30::i;:::-;2650:37;2566:128;-1:-1:-1;;;2566:128:12:o;4680:244:10:-;4767:4;735:10:20;4823:37:10;4839:4;735:10:20;4854:5:10;4823:15;:37::i;:::-;4870:26;4880:4;4886:2;4890:5;4870:9;:26::i;:::-;-1:-1:-1;4913:4:10;;4680:244;-1:-1:-1;;;;4680:244:10:o;5024:136:12:-;5096:4;5119:34;5134:7;5143:5;5119:34;;;;;;;;;;;;:14;:34::i;2614:112:16:-;2673:7;2699:20;:18;:20::i;:::-;2692:27;;2614:112;:::o;1038:63:35:-;1531:13:0;:11;:13::i;:::-;1084:10:35::1;:8;:10::i;:::-;1038:63::o:0;2834:326:12:-;2929:4;2950:19;2959:2;2963:5;2950:8;:19::i;:::-;2945:90;;2992:32;;-1:-1:-1;;;2992:32:12;;-1:-1:-1;;;;;9923:32:36;;2992::12;;;9905:51:36;9972:18;;;9965:34;;;9878:18;;2992:32:12;;;;;;;;2945:90;3044:88;735:10:20;;3116:2:12;3120:5;3127:4;3044:43;:88::i;1107:93:35:-;1531:13:0;:11;:13::i;:::-;1176:17:35::1;1182:2;1186:6;1176:5;:17::i;:::-;1107:93:::0;;:::o;618:87:13:-;672:26;735:10:20;692:5:13;672;:26::i;:::-;618:87;:::o;4807:962:14:-;4971:4;4987:15;5005:19;5018:5;5005:12;:19::i;:::-;4987:37;;5046:7;5038:5;:15;5034:84;;;5076:31;;-1:-1:-1;;;5076:31:14;;;;;1876:25:36;;;1849:18;;5076:31:14;1730:177:36;5034:84:14;5127:11;5141:22;5150:5;5157;5141:8;:22::i;:::-;5127:36;;5173:31;5187:8;5198:5;5173;:31::i;:::-;5218:59;;-1:-1:-1;;;5218:59:14;;1039:45;;-1:-1:-1;;;;;5218:20:14;;;;;:59;;735:10:20;;5253:5:14;;5260;;5267:3;;5272:4;;;;5218:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:75;5214:154;;5316:41;;-1:-1:-1;;;5316:41:14;;-1:-1:-1;;;;;7145:32:36;;5316:41:14;;;7127:51:36;7100:18;;5316:41:14;6981:203:36;5214:154:14;5377:24;5433:62;5457:8;5476:4;5483:11;5491:3;5483:5;:11;:::i;:::-;5433:15;:62::i;:::-;5509:8;;;:42;;-1:-1:-1;;;;;;5521:30:14;;;5509:42;5505:237;;;5567:37;5581:8;5592:11;5600:3;5592:5;:11;:::i;:::-;5567:5;:37::i;:::-;5505:237;;;5635:31;5649:8;5660:5;5635;:31::i;:::-;5680:51;5698:8;5709:16;5727:3;5680:9;:51::i;:::-;-1:-1:-1;5758:4:14;;4807:962;-1:-1:-1;;;;;;;;4807:962:14:o;1957:161::-;2023:7;-1:-1:-1;;;;;2049:22:14;;2066:4;2049:22;:62;;2110:1;2049:62;;;2881:12:10;;2074:33:14;;-1:-1:-1;;2074:33:14;:::i;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;1021:158:13:-:0;1096:45;1112:7;735:10:20;1135:5:13;1096:15;:45::i;:::-;1151:21;1157:7;1166:5;1151;:21::i;2379:143:16:-;-1:-1:-1;;;;;624:14:21;;2470:7:16;624:14:21;;;:7;:14;;;;;;2496:19:16;538:107:21;973:59:35;1531:13:0;:11;:13::i;:::-;1017:8:35::1;:6;:8::i;5228:557:28:-:0;5326:13;5353:18;5385:21;5420:15;5449:25;5488:12;5514:27;5617:13;:11;:13::i;:::-;5644:16;:14;:16::i;:::-;5752;;;5736:1;5752:16;;;;;;;;;-1:-1:-1;;;5566:212:28;;;-1:-1:-1;5566:212:28;;-1:-1:-1;5674:13:28;;-1:-1:-1;5709:4:28;;-1:-1:-1;5736:1:28;-1:-1:-1;5752:16:28;-1:-1:-1;5566:212:28;-1:-1:-1;5228:557:28:o;1962:93:10:-;2009:13;2041:7;2034:14;;;;;:::i;3244:178::-;3313:4;735:10:20;3367:27:10;735:10:20;3384:2:10;3388:5;3367:9;:27::i;4042:394:12:-;4193:4;4214:29;4227:4;4233:2;4237:5;4214:12;:29::i;:::-;4209:110;;4266:42;;-1:-1:-1;;;4266:42:12;;-1:-1:-1;;;;;11549:32:36;;;4266:42:12;;;11531:51:36;11618:32;;11598:18;;;11591:60;11667:18;;;11660:34;;;11504:18;;4266:42:12;11329:371:36;4209:110:12;4328:80;735:10:20;4386:4:12;4392:2;4396:5;4403:4;4328:43;:80::i;5299:329::-;5398:4;5419:23;5427:7;5436:5;5419:7;:23::i;:::-;5414:98;;5465:36;;-1:-1:-1;;;5465:36:12;;-1:-1:-1;;;;;9923:32:36;;5465:36:12;;;9905:51:36;9972:18;;;9965:34;;;9878:18;;5465:36:12;9731:274:36;5414:98:12;5521:79;735:10:20;5579:7:12;5588:5;5595:4;5521:43;:79::i;1668:672:16:-;1889:8;1871:15;:26;1867:97;;;1920:33;;-1:-1:-1;;;1920:33:16;;;;;1876:25:36;;;1849:18;;1920:33:16;1730:177:36;1867:97:16;1974:18;1024:95;2033:5;2040:7;2049:5;2056:16;2066:5;-1:-1:-1;;;;;1121:14:21;819:7;1121:14;;;:7;:14;;;;;:16;;;;;;;;;759:395;2056:16:16;2005:78;;;;;;11992:25:36;;;;-1:-1:-1;;;;;12053:32:36;;;12033:18;;;12026:60;12122:32;;;;12102:18;;;12095:60;12171:18;;;12164:34;12214:19;;;12207:35;12258:19;;;12251:35;;;11964:19;;2005:78:16;;;;;;;;;;;;1995:89;;;;;;1974:110;;2095:12;2110:28;2127:10;2110:16;:28::i;:::-;2095:43;;2149:14;2166:28;2180:4;2186:1;2189;2192;2166:13;:28::i;:::-;2149:45;;2218:5;-1:-1:-1;;;;;2208:15:16;:6;-1:-1:-1;;;;;2208:15:16;;2204:88;;2246:35;;-1:-1:-1;;;2246:35:16;;-1:-1:-1;;;;;12489:32:36;;;2246:35:16;;;12471:51:36;12558:32;;12538:18;;;12531:60;12444:18;;2246:35:16;12297:300:36;2204:88:16;2302:31;2311:5;2318:7;2327:5;2302:8;:31::i;:::-;1857:483;;;1668:672;;;;;;;:::o;3742:156:12:-;3828:4;3851:40;3871:4;3877:2;3881:5;3851:40;;;;;;;;;;;;:19;:40::i;:::-;3844:47;3742:156;-1:-1:-1;;;;3742:156:12:o;2483:232:14:-;2560:7;-1:-1:-1;;;;;2583:22:14;;2600:4;2583:22;2579:90;;2628:30;;-1:-1:-1;;;2628:30:14;;-1:-1:-1;;;;;7145:32:36;;2628:30:14;;;7127:51:36;7100:18;;2628:30:14;6981:203:36;2579:90:14;3183:7;2685:23;3103:227;2543:215:0;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;7127:51:36::0;7100:18;;2672:31:0::1;6981:203:36::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;8630:128:10:-:0;8714:37;8723:5;8730:7;8739:5;8746:4;8714:8;:37::i;:::-;8630:128;;;:::o;10319:476::-;-1:-1:-1;;;;;3561:18:10;;;10418:24;3561:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10484:36:10;;10480:309;;;10559:5;10540:16;:24;10536:130;;;10591:60;;-1:-1:-1;;;10591:60:10;;-1:-1:-1;;;;;12822:32:36;;10591:60:10;;;12804:51:36;12871:18;;;12864:34;;;12914:18;;;12907:34;;;12777:18;;10591:60:10;12602:345:36;10536:130:10;10707:57;10716:5;10723:7;10751:5;10732:16;:24;10758:5;10707:8;:57::i;:::-;10408:387;10319:476;;;:::o;5297:300::-;-1:-1:-1;;;;;5380:18:10;;5376:86;;5421:30;;-1:-1:-1;;;5421:30:10;;5448:1;5421:30;;;7127:51:36;7100:18;;5421:30:10;6981:203:36;5376:86:10;-1:-1:-1;;;;;5475:16:10;;5471:86;;5514:32;;-1:-1:-1;;;5514:32:10;;5543:1;5514:32;;;7127:51:36;7100:18;;5514:32:10;6981:203:36;5471:86:10;5566:24;5574:4;5580:2;5584:5;5566:7;:24::i;3945:262:28:-;3998:7;4029:4;-1:-1:-1;;;;;4038:11:28;4021:28;;:63;;;;;4070:14;4053:13;:31;4021:63;4017:184;;;-1:-1:-1;4107:22:28;;3945:262::o;4017:184::-;4167:23;4304:80;;;2079:95;4304:80;;;14346:25:36;4326:11:28;14387:18:36;;;14380:34;;;;4339:14:28;14430:18:36;;;14423:34;4355:13:28;14473:18:36;;;14466:34;4378:4:28;14516:19:36;;;14509:61;4268:7:28;;14318:19:36;;4304:80:28;;;;;;;;;;;;4294:91;;;;;;4287:98;;4213:179;;1796:162:0;1710:6;;-1:-1:-1;;;;;1710:6:0;;;;;735:10:20;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:20;1901:40:0;;;7127:51:36;7100:18;;1901:40:0;6981:203:36;2586:117:23;1597:16;:14;:16::i;:::-;2644:7:::1;:15:::0;;-1:-1:-1;;2644:15:23::1;::::0;;2674:22:::1;735:10:20::0;2683:12:23::1;2674:22;::::0;-1:-1:-1;;;;;7145:32:36;;;7127:51;;7115:2;7100:18;2674:22:23::1;;;;;;;2586:117::o:0;1286:815:19:-;1473:2;-1:-1:-1;;;;;1473:14:19;;1491:1;1473:19;1469:83;;1515:26;;-1:-1:-1;;;1515:26:19;;-1:-1:-1;;;;;7145:32:36;;1515:26:19;;;7127:51:36;7100:18;;1515:26:19;6981:203:36;1469:83:19;1566:68;;-1:-1:-1;;;1566:68:19;;-1:-1:-1;;;;;1566:39:19;;;;;:68;;1606:8;;1616:4;;1622:5;;1629:4;;1566:68;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1566:68:19;;;;;;;;-1:-1:-1;;1566:68:19;;;;;;;;;;;;:::i;:::-;;;1562:533;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1856:6;:13;1873:1;1856:18;1852:233;;1901:26;;-1:-1:-1;;;1901:26:19;;-1:-1:-1;;;;;7145:32:36;;1901:26:19;;;7127:51:36;7100:18;;1901:26:19;6981:203:36;1852:233:19;2045:6;2039:13;2032:4;2024:6;2020:17;2013:40;1562:533;-1:-1:-1;;;;;;1677:54:19;;-1:-1:-1;;;1677:54:19;1673:126;;1758:26;;-1:-1:-1;;;1758:26:19;;-1:-1:-1;;;;;7145:32:36;;1758:26:19;;;7127:51:36;7100:18;;1758:26:19;6981:203:36;1673:126:19;1635:174;1562:533;1286:815;;;;;:::o;7362:208:10:-;-1:-1:-1;;;;;7432:21:10;;7428:91;;7476:32;;-1:-1:-1;;;7476:32:10;;7505:1;7476:32;;;7127:51:36;7100:18;;7476:32:10;6981:203:36;7428:91:10;7528:35;7544:1;7548:7;7557:5;7528:7;:35::i;7888:206::-;-1:-1:-1;;;;;7958:21:10;;7954:89;;8002:30;;-1:-1:-1;;;8002:30:10;;8029:1;8002:30;;;7127:51:36;7100:18;;8002:30:10;6981:203:36;7954:89:10;8052:35;8060:7;8077:1;8081:5;8052:7;:35::i;2912:187:0:-;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;3004:6;3020:17;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;2339:115:23:-;1350:19;:17;:19::i;:::-;2398:7:::1;:14:::0;;-1:-1:-1;;2398:14:23::1;2408:4;2398:14;::::0;;2427:20:::1;2434:12;735:10:20::0;;656:96;6105:126:28;6151:13;6183:41;:5;6210:13;6183:26;:41::i;6557:135::-;6606:13;6638:47;:8;6668:16;6638:29;:47::i;2482:812:19:-;2652:7;-1:-1:-1;;;;;2652:19:19;;2675:1;2652:24;2648:92;;2699:30;;-1:-1:-1;;;2699:30:19;;-1:-1:-1;;;;;7145:32:36;;2699:30:19;;;7127:51:36;7100:18;;2699:30:19;6981:203:36;2648:92:19;2754:66;;-1:-1:-1;;;2754:66:19;;-1:-1:-1;;;;;2754:43:19;;;;;:66;;2798:8;;2808:5;;2815:4;;2754:66;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2754:66:19;;;;;;;;-1:-1:-1;;2754:66:19;;;;;;;;;;;;:::i;:::-;;;2750:538;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3045:6;:13;3062:1;3045:18;3041:237;;3090:30;;-1:-1:-1;;;3090:30:19;;-1:-1:-1;;;;;7145:32:36;;3090:30:19;;;7127:51:36;7100:18;;3090:30:19;6981:203:36;2750:538:19;-1:-1:-1;;;;;;2863:53:19;;-1:-1:-1;;;2863:53:19;2859:129;;2943:30;;-1:-1:-1;;;2943:30:19;;-1:-1:-1;;;;;7145:32:36;;2943:30:19;;;7127:51:36;7100:18;;2943:30:19;6981:203:36;5017:176:28;5094:7;5120:66;5153:20;:18;:20::i;:::-;5175:10;4049:4:29;4043:11;-1:-1:-1;;;4067:23:29;;4119:4;4110:14;;4103:39;;;;4171:4;4162:14;;4155:34;4227:4;4212:20;;;3874:374;6887:260:27;6972:7;6992:17;7011:18;7031:16;7051:25;7062:4;7068:1;7071;7074;7051:10;:25::i;:::-;6991:85;;;;;;7086:28;7098:5;7105:8;7086:11;:28::i;:::-;-1:-1:-1;7131:9:27;;6887:260;-1:-1:-1;;;;;;6887:260:27:o;9605:432:10:-;-1:-1:-1;;;;;9717:19:10;;9713:89;;9759:32;;-1:-1:-1;;;9759:32:10;;9788:1;9759:32;;;7127:51:36;7100:18;;9759:32:10;6981:203:36;9713:89:10;-1:-1:-1;;;;;9815:21:10;;9811:90;;9859:31;;-1:-1:-1;;;9859:31:10;;9887:1;9859:31;;;7127:51:36;7100:18;;9859:31:10;6981:203:36;9811:90:10;-1:-1:-1;;;;;9910:18:10;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;9955:76;;;;10005:7;-1:-1:-1;;;;;9989:31:10;9998:5;-1:-1:-1;;;;;9989:31:10;;10014:5;9989:31;;;;1876:25:36;;1864:2;1849:18;;1730:177;9989:31:10;;;;;;;;9605:432;;;;:::o;1273:175:35:-;1411:30;1425:4;1431:2;1435:5;1411:13;:30::i;2078:126:23:-;1796:7;;;;2136:62;;2172:15;;-1:-1:-1;;;2172:15:23;;;;;;;;;;;1878:128;1796:7;;;;1939:61;;;1974:15;;-1:-1:-1;;;1974:15:23;;;;;;;;;;;3368:267:24;3462:13;1390:66;3491:46;;3487:142;;3560:15;3569:5;3560:8;:15::i;:::-;3553:22;;;;3487:142;3613:5;3606:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5203:1551:27;5329:17;;;6283:66;6270:79;;6266:164;;;-1:-1:-1;6381:1:27;;-1:-1:-1;6385:30:27;;-1:-1:-1;6417:1:27;6365:54;;6266:164;6541:24;;;6524:14;6541:24;;;;;;;;;14808:25:36;;;14881:4;14869:17;;14849:18;;;14842:45;;;;14903:18;;;14896:34;;;14946:18;;;14939:34;;;6541:24:27;;14780:19:36;;6541:24:27;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6541:24:27;;-1:-1:-1;;6541:24:27;;;-1:-1:-1;;;;;;;6579:20:27;;6575:113;;-1:-1:-1;6631:1:27;;-1:-1:-1;6635:29:27;;-1:-1:-1;6631:1:27;;-1:-1:-1;6615:62:27;;6575:113;6706:6;-1:-1:-1;6714:20:27;;-1:-1:-1;6714:20:27;;-1:-1:-1;5203:1551:27;;;;;;;;;:::o;7280:532::-;7375:20;7366:5;:29;;;;;;;;:::i;:::-;;7362:444;;7280:532;;:::o;7362:444::-;7471:29;7462:5;:38;;;;;;;;:::i;:::-;;7458:348;;7523:23;;-1:-1:-1;;;7523:23:27;;;;;;;;;;;7458:348;7576:35;7567:5;:44;;;;;;;;:::i;:::-;;7563:243;;7634:46;;-1:-1:-1;;;7634:46:27;;;;;1876:25:36;;;1849:18;;7634:46:27;1730:177:36;7563:243:27;7710:30;7701:5;:39;;;;;;;;:::i;:::-;;7697:109;;7763:32;;-1:-1:-1;;;7763:32:27;;;;;1876:25:36;;;1849:18;;7763:32:27;1730:177:36;1113:145:15;1350:19:23;:17;:19::i;:::-;1221:30:15::1;1235:4;1241:2;1245:5;1221:13;:30::i;2078:378:24:-:0;2137:13;2162:11;2176:16;2187:4;2176:10;:16::i;:::-;2300:14;;;2311:2;2300:14;;;;;;;;;2162:30;;-1:-1:-1;2280:17:24;;2300:14;;;;;;;;;-1:-1:-1;;;2363:16:24;;;-1:-1:-1;2408:4:24;2399:14;;2392:28;;;;-1:-1:-1;2363:16:24;2078:378::o;5912:1107:10:-;-1:-1:-1;;;;;6001:18:10;;5997:540;;6153:5;6137:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;5997:540:10;;-1:-1:-1;5997:540:10;;-1:-1:-1;;;;;6211:15:10;;6189:19;6211:15;;;;;;;;;;;6244:19;;;6240:115;;;6290:50;;-1:-1:-1;;;6290:50:10;;-1:-1:-1;;;;;12822:32:36;;6290:50:10;;;12804:51:36;12871:18;;;12864:34;;;12914:18;;;12907:34;;;12777:18;;6290:50:10;12602:345:36;6240:115:10;-1:-1:-1;;;;;6475:15:10;;:9;:15;;;;;;;;;;6493:19;;;;6475:37;;5997:540;-1:-1:-1;;;;;6551:16:10;;6547:425;;6714:12;:21;;;;;;;6547:425;;;-1:-1:-1;;;;;6925:13:10;;:9;:13;;;;;;;;;;:22;;;;;;6547:425;7002:2;-1:-1:-1;;;;;6987:25:10;6996:4;-1:-1:-1;;;;;6987:25:10;;7006:5;6987:25;;;;1876::36;;1864:2;1849:18;;1730:177;6987:25:10;;;;;;;;5912:1107;;;:::o;2528:245:24:-;2589:7;2661:4;2625:40;;2688:2;2679:11;;2675:69;;;2713:20;;-1:-1:-1;;;2713:20:24;;;;;;;;;;;14:131:36;-1:-1:-1;;;;;;88:32:36;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:400::-;634:3;672:5;666:12;699:6;694:3;687:19;724:1;734:139;748:6;745:1;742:13;734:139;;;856:4;841:13;;;837:24;;831:31;811:11;;;807:22;;800:63;763:12;734:139;;;738:3;918:1;911:4;902:6;897:3;893:16;889:27;882:38;981:4;974:2;970:7;965:2;957:6;953:15;949:29;944:3;940:39;936:50;929:57;;;592:400;;;;:::o;997:220::-;1146:2;1135:9;1128:21;1109:4;1166:45;1207:2;1196:9;1192:18;1184:6;1166:45;:::i;1222:131::-;-1:-1:-1;;;;;1297:31:36;;1287:42;;1277:70;;1343:1;1340;1333:12;1358:367;1426:6;1434;1487:2;1475:9;1466:7;1462:23;1458:32;1455:52;;;1503:1;1500;1493:12;1455:52;1542:9;1529:23;1561:31;1586:5;1561:31;:::i;:::-;1611:5;1689:2;1674:18;;;;1661:32;;-1:-1:-1;;;1358:367:36:o;1912:508::-;1989:6;1997;2005;2058:2;2046:9;2037:7;2033:23;2029:32;2026:52;;;2074:1;2071;2064:12;2026:52;2113:9;2100:23;2132:31;2157:5;2132:31;:::i;:::-;2182:5;-1:-1:-1;2239:2:36;2224:18;;2211:32;2252:33;2211:32;2252:33;:::i;:::-;1912:508;;2304:7;;-1:-1:-1;;;2384:2:36;2369:18;;;;2356:32;;1912:508::o;2796:127::-;2857:10;2852:3;2848:20;2845:1;2838:31;2888:4;2885:1;2878:15;2912:4;2909:1;2902:15;2928:725;2970:5;3023:3;3016:4;3008:6;3004:17;3000:27;2990:55;;3041:1;3038;3031:12;2990:55;3081:6;3068:20;3111:18;3103:6;3100:30;3097:56;;;3133:18;;:::i;:::-;3182:2;3176:9;3274:2;3236:17;;-1:-1:-1;;3232:31:36;;;3265:2;3228:40;3224:54;3212:67;;3309:18;3294:34;;3330:22;;;3291:62;3288:88;;;3356:18;;:::i;:::-;3392:2;3385:22;3416;;;3457:19;;;3478:4;3453:30;3450:39;-1:-1:-1;3447:59:36;;;3502:1;3499;3492:12;3447:59;3566:6;3559:4;3551:6;3547:17;3540:4;3532:6;3528:17;3515:58;3621:1;3593:19;;;3614:4;3589:30;3582:41;;;;3597:6;2928:725;-1:-1:-1;;;2928:725:36:o;3658:575::-;3744:6;3752;3760;3813:2;3801:9;3792:7;3788:23;3784:32;3781:52;;;3829:1;3826;3819:12;3781:52;3868:9;3855:23;3887:31;3912:5;3887:31;:::i;:::-;3937:5;-1:-1:-1;4015:2:36;4000:18;;3987:32;;-1:-1:-1;4096:2:36;4081:18;;4068:32;4123:18;4112:30;;4109:50;;;4155:1;4152;4145:12;4109:50;4178:49;4219:7;4210:6;4199:9;4195:22;4178:49;:::i;:::-;4168:59;;;3658:575;;;;;:::o;4238:226::-;4297:6;4350:2;4338:9;4329:7;4325:23;4321:32;4318:52;;;4366:1;4363;4356:12;4318:52;-1:-1:-1;4411:23:36;;4238:226;-1:-1:-1;4238:226:36:o;4469:1012::-;4595:6;4603;4611;4619;4627;4680:3;4668:9;4659:7;4655:23;4651:33;4648:53;;;4697:1;4694;4687:12;4648:53;4736:9;4723:23;4755:31;4780:5;4755:31;:::i;:::-;4805:5;-1:-1:-1;4862:2:36;4847:18;;4834:32;4875:33;4834:32;4875:33;:::i;:::-;4927:7;-1:-1:-1;5007:2:36;4992:18;;4979:32;;-1:-1:-1;5088:2:36;5073:18;;5060:32;5115:18;5104:30;;5101:50;;;5147:1;5144;5137:12;5101:50;5170:22;;5223:4;5215:13;;5211:27;-1:-1:-1;5201:55:36;;5252:1;5249;5242:12;5201:55;5292:2;5279:16;5318:18;5310:6;5307:30;5304:50;;;5350:1;5347;5340:12;5304:50;5395:7;5390:2;5381:6;5377:2;5373:15;5369:24;5366:37;5363:57;;;5416:1;5413;5406:12;5363:57;4469:1012;;;;-1:-1:-1;4469:1012:36;;-1:-1:-1;;;5447:2:36;5439:11;;5469:6;4469:1012::o;5486:247::-;5545:6;5598:2;5586:9;5577:7;5573:23;5569:32;5566:52;;;5614:1;5611;5604:12;5566:52;5653:9;5640:23;5672:31;5697:5;5672:31;:::i;5738:1238::-;6144:3;6139;6135:13;6127:6;6123:26;6112:9;6105:45;6186:3;6181:2;6170:9;6166:18;6159:31;6086:4;6213:46;6254:3;6243:9;6239:19;6231:6;6213:46;:::i;:::-;6307:9;6299:6;6295:22;6290:2;6279:9;6275:18;6268:50;6341:33;6367:6;6359;6341:33;:::i;:::-;6405:2;6390:18;;6383:34;;;-1:-1:-1;;;;;6454:32:36;;6448:3;6433:19;;6426:61;6474:3;6503:19;;6496:35;;;6568:22;;;6562:3;6547:19;;6540:51;6640:13;;6662:22;;;6712:2;6738:15;;;;-1:-1:-1;6700:15:36;;;;-1:-1:-1;6781:169:36;6795:6;6792:1;6789:13;6781:169;;;6856:13;;6844:26;;6899:2;6925:15;;;;6890:12;;;;6817:1;6810:9;6781:169;;;-1:-1:-1;6967:3:36;;5738:1238;-1:-1:-1;;;;;;;;;;;5738:1238:36:o;7189:717::-;7284:6;7292;7300;7308;7361:3;7349:9;7340:7;7336:23;7332:33;7329:53;;;7378:1;7375;7368:12;7329:53;7417:9;7404:23;7436:31;7461:5;7436:31;:::i;:::-;7486:5;-1:-1:-1;7543:2:36;7528:18;;7515:32;7556:33;7515:32;7556:33;:::i;:::-;7608:7;-1:-1:-1;7688:2:36;7673:18;;7660:32;;-1:-1:-1;7769:2:36;7754:18;;7741:32;7796:18;7785:30;;7782:50;;;7828:1;7825;7818:12;7782:50;7851:49;7892:7;7883:6;7872:9;7868:22;7851:49;:::i;:::-;7841:59;;;7189:717;;;;;;;:::o;7911:1037::-;8022:6;8030;8038;8046;8054;8062;8070;8123:3;8111:9;8102:7;8098:23;8094:33;8091:53;;;8140:1;8137;8130:12;8091:53;8179:9;8166:23;8198:31;8223:5;8198:31;:::i;:::-;8248:5;-1:-1:-1;8305:2:36;8290:18;;8277:32;8318:33;8277:32;8318:33;:::i;:::-;8370:7;-1:-1:-1;8450:2:36;8435:18;;8422:32;;-1:-1:-1;8553:2:36;8538:18;;8525:32;;-1:-1:-1;8635:3:36;8620:19;;8607:33;8684:4;8671:18;;8659:31;;8649:59;;8704:1;8701;8694:12;8649:59;7911:1037;;;;-1:-1:-1;7911:1037:36;;;;8727:7;8807:3;8792:19;;8779:33;;-1:-1:-1;8911:3:36;8896:19;;;8883:33;;7911:1037;-1:-1:-1;;7911:1037:36:o;8953:388::-;9021:6;9029;9082:2;9070:9;9061:7;9057:23;9053:32;9050:52;;;9098:1;9095;9088:12;9050:52;9137:9;9124:23;9156:31;9181:5;9156:31;:::i;:::-;9206:5;-1:-1:-1;9263:2:36;9248:18;;9235:32;9276:33;9235:32;9276:33;:::i;:::-;9328:7;9318:17;;;8953:388;;;;;:::o;9346:380::-;9425:1;9421:12;;;;9468;;;9489:61;;9543:4;9535:6;9531:17;9521:27;;9489:61;9596:2;9588:6;9585:14;9565:18;9562:38;9559:161;;9642:10;9637:3;9633:20;9630:1;9623:31;9677:4;9674:1;9667:15;9705:4;9702:1;9695:15;9559:161;;9346:380;;;:::o;10010:730::-;-1:-1:-1;;;;;10279:32:36;;;10261:51;;10348:32;;10343:2;10328:18;;10321:60;10412:2;10397:18;;10390:34;;;10455:2;10440:18;;10433:34;;;10299:3;10498;10483:19;;10476:32;;;10524:19;;10517:35;;;10545:6;10595;10589:3;10574:19;;10561:49;10660:1;10630:22;;;10654:3;10626:32;;;10619:43;;;;10723:2;10702:15;;;-1:-1:-1;;10698:29:36;10683:45;10679:55;;10010:730;-1:-1:-1;;;;;10010:730:36:o;10745:184::-;10815:6;10868:2;10856:9;10847:7;10843:23;10839:32;10836:52;;;10884:1;10881;10874:12;10836:52;-1:-1:-1;10907:16:36;;10745:184;-1:-1:-1;10745:184:36:o;10934:127::-;10995:10;10990:3;10986:20;10983:1;10976:31;11026:4;11023:1;11016:15;11050:4;11047:1;11040:15;11066:125;11131:9;;;11152:10;;;11149:36;;;11165:18;;:::i;11196:128::-;11263:9;;;11284:11;;;11281:37;;;11298:18;;:::i;12952:485::-;-1:-1:-1;;;;;13183:32:36;;;13165:51;;13252:32;;13247:2;13232:18;;13225:60;13316:2;13301:18;;13294:34;;;13364:3;13359:2;13344:18;;13337:31;;;-1:-1:-1;;13385:46:36;;13411:19;;13403:6;13385:46;:::i;:::-;13377:54;12952:485;-1:-1:-1;;;;;;12952:485:36:o;13442:249::-;13511:6;13564:2;13552:9;13543:7;13539:23;13535:32;13532:52;;;13580:1;13577;13570:12;13532:52;13612:9;13606:16;13631:30;13655:5;13631:30;:::i;13696:386::-;13928:1;13924;13919:3;13915:11;13911:19;13903:6;13899:32;13888:9;13881:51;13968:6;13963:2;13952:9;13948:18;13941:34;14011:2;14006;13995:9;13991:18;13984:30;13862:4;14031:45;14072:2;14061:9;14057:18;14049:6;14031:45;:::i;:::-;14023:53;13696:386;-1:-1:-1;;;;;13696:386:36:o;14984:127::-;15045:10;15040:3;15036:20;15033:1;15026:31;15076:4;15073:1;15066:15;15100:4;15097:1;15090:15"},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","approveAndCall(address,uint256)":"3177029f","approveAndCall(address,uint256,bytes)":"cae9ca51","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","decimals()":"313ce567","eip712Domain()":"84b0196e","flashFee(address,uint256)":"d9d98ce4","flashLoan(address,address,uint256,bytes)":"5cffe9de","maxFlashLoan(address)":"613255ab","mint(address,uint256)":"40c10f19","name()":"06fdde03","nonces(address)":"7ecebe00","owner()":"8da5cb5b","pause()":"8456cb59","paused()":"5c975abb","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","renounceOwnership()":"715018a6","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferAndCall(address,uint256)":"1296ee62","transferAndCall(address,uint256,bytes)":"4000aea0","transferFrom(address,address,uint256)":"23b872dd","transferFromAndCall(address,address,uint256)":"d8fbe994","transferFromAndCall(address,address,uint256,bytes)":"c1d34b89","transferOwnership(address)":"f2fde38b","unpause()":"3f4ba83a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"ERC1363ApproveFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1363InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC1363InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"ERC1363TransferFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"ERC1363TransferFromFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxLoan\",\"type\":\"uint256\"}],\"name\":\"ERC3156ExceededMaxLoan\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC3156InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"ERC3156UnsupportedToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"flashFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC3156FlashBorrower\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flashLoan\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"maxFlashLoan\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC1363ApproveFailed(address,uint256)\":[{\"details\":\"Indicates a failure within the {approve} part of a approveAndCall operation.\",\"params\":{\"spender\":\"Address which will spend the funds.\",\"value\":\"Amount of tokens to be spent.\"}}],\"ERC1363InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1363InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the token `spender`. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1363TransferFailed(address,uint256)\":[{\"details\":\"Indicates a failure within the {transfer} part of a transferAndCall operation.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\",\"value\":\"Amount of tokens to be transferred.\"}}],\"ERC1363TransferFromFailed(address,address,uint256)\":[{\"details\":\"Indicates a failure within the {transferFrom} part of a transferFromAndCall operation.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\",\"sender\":\"Address from which to send tokens.\",\"value\":\"Amount of tokens to be transferred.\"}}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"ERC3156ExceededMaxLoan(uint256)\":[{\"details\":\"The requested loan exceeds the max loan value for `token`.\"}],\"ERC3156InvalidReceiver(address)\":[{\"details\":\"The receiver of a flashloan is not a valid {IERC3156FlashBorrower-onFlashLoan} implementer.\"}],\"ERC3156UnsupportedToken(address)\":[{\"details\":\"The loan token is not valid.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`. Returns a flag that indicates if the call succeeded. Requirements: - The target has code (i.e. is a contract). - The target `spender` must implement the {IERC1363Spender} interface. - The target must return the {IERC1363Spender-onApprovalReceived} selector to accept the approval. - The internal {approve} must succeed (returned `true`).\"},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Variant of {approveAndCall} that accepts an additional `data` parameter with no specified format.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"},\"flashFee(address,uint256)\":{\"details\":\"Returns the fee applied when doing flash loans. This function calls the {_flashFee} function which returns the fee applied when doing flash loans.\",\"params\":{\"token\":\"The token to be flash loaned.\",\"value\":\"The amount of tokens to be loaned.\"},\"returns\":{\"_0\":\"The fees applied to the corresponding flash loan.\"}},\"flashLoan(address,address,uint256,bytes)\":{\"details\":\"Performs a flash loan. New tokens are minted and sent to the `receiver`, who is required to implement the {IERC3156FlashBorrower} interface. By the end of the flash loan, the receiver is expected to own value + fee tokens and have them approved back to the token contract itself so they can be burned.\",\"params\":{\"data\":\"An arbitrary datafield that is passed to the receiver.\",\"receiver\":\"The receiver of the flash loan. Should implement the {IERC3156FlashBorrower-onFlashLoan} interface.\",\"token\":\"The token to be flash loaned. Only `address(this)` is supported.\",\"value\":\"The amount of tokens to be loaned.\"},\"returns\":{\"_0\":\"`true` if the flash loan was successful.\"}},\"maxFlashLoan(address)\":{\"details\":\"Returns the maximum amount of tokens available for loan.\",\"params\":{\"token\":\"The address of the token that is requested.\"},\"returns\":{\"_0\":\"The amount of token that can be loaned. NOTE: This function does not consider any form of supply cap, so in case it's used in a token with a cap like {ERC20Capped}, make sure to override this function to integrate the cap instead of `type(uint256).max`.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`. Returns a flag that indicates if the call succeeded. Requirements: - The target has code (i.e. is a contract). - The target `to` must implement the {IERC1363Receiver} interface. - The target must return the {IERC1363Receiver-onTransferReceived} selector to accept the transfer. - The internal {transfer} must succeed (returned `true`).\"},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Variant of {transferAndCall} that accepts an additional `data` parameter with no specified format.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`. Returns a flag that indicates if the call succeeded. Requirements: - The target has code (i.e. is a contract). - The target `to` must implement the {IERC1363Receiver} interface. - The target must return the {IERC1363Receiver-onTransferReceived} selector to accept the transfer. - The internal {transferFrom} must succeed (returned `true`).\"},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Variant of {transferFromAndCall} that accepts an additional `data` parameter with no specified format.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contracts/EduMetaCoinErc20.sol\":\"EduMeta\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC1363Receiver.sol\":{\"keccak256\":\"0x5cea723201b514b19a8bbe3bd19d585d378afbe7569657651c21e8eaa09b39d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17e72b4af2ebfb3990724ac8a5ceabc85f347210c386e19aed29d767e6ce2aff\",\"dweb:/ipfs/QmZXFN8ZppaXmJfWzzMnA4zWBvq7fJnEd6Snf8tvWv2VSQ\"]},\"@openzeppelin/contracts/interfaces/IERC1363Spender.sol\":{\"keccak256\":\"0x6df85f4df77c041a1957bdd5ae1c6e3247922e57e0b63687cce493d66663c6a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d08c0b9bf43ebd3cb1402dcebaeebe5a827939b3c591f3e131cf1900c7bcd44e\",\"dweb:/ipfs/QmWkKyQEvmidbk7KJPD96bX5u2iyaAPGyK198N7SqrTn4k\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol\":{\"keccak256\":\"0x4e4b982b56b50290dd1dcaa2fef1178b1574dfc7c0f0a8ef9cb68a207d72582e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb7adc69bcb4d8ef0b001869b24e831edd411b6c5405e03c5e95ca109a7b7bcd\",\"dweb:/ipfs/QmWeXYWVPUuwVWPjLXn44PrEnv7bJg3JiVkFm7riDkgTVk\"]},\"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol\":{\"keccak256\":\"0x218d708e7d8df417db24a497727eefb7772e61c7cde3886fc42bbcb6aafa6947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ef4e8814b2767d9bdbc5baf1a8ab9b3750f46728f9e131fd433d13b956757dd\",\"dweb:/ipfs/QmY2iwJG4d757uwbcuJU5FsPRi17BkR9cJJAbrzUqRuqhH\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xfb223a85dd0b2175cfbbaa325a744e2cd74ecd17c3df2b77b0722f991d2725ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84bf1dea0589ec49c8d15d559cc6d86ee493048a89b2d4adb60fbe705a3d89ae\",\"dweb:/ipfs/Qmd56n556d529wk2pRMhYhm5nhMDhviwereodDikjs68w1\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC1363.sol\":{\"keccak256\":\"0x3d95de6ef6041c4439d4fea7fbccf6fb7f390ddb6b38be50d80c0f5284703d47\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9e84c5fa05673be3a1f1e7f487dc65f002f88f318474777616e2413fd023fce9\",\"dweb:/ipfs/QmWgKT6ghY6NK5onar3pgD7ZMAt3KAHwhYXASe49Q1uJ8p\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20FlashMint.sol\":{\"keccak256\":\"0x4d43ed4b9ff9e4c671274976d59a58dbcc7b69bd7ac11b1710f5b7607cf15b74\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b47b42998f675cb6a51f2e74ef5906a6fa63ec6718f3fd56ee035d6f77143f9\",\"dweb:/ipfs/QmREnAXqPJBvAwfWfDzaFhNfSRWF4Jdy9ZrpHLw1KdQweY\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0x756aee61d83960d324973de3a64920a02b480efe662b611fb05ea506d844aa55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dfb71ab2f5fcc530226a25bba4d808f4d22a7f383cae4a3be3629ec057b276c\",\"dweb:/ipfs/QmRzyetUjbr9Gx1pcXYSsE5rz4XypfEbZgmBvZKUNUJQLR\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xecd08ad8132d88a5fcfd50f76a18583004fcdab4c33fb86343903ae420ca5a2b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://02422dce2e5305624e5cec644add1baa44bfa98ea131bf6030069089a2f56ca4\",\"dweb:/ipfs/QmcsSUkX7AYXNZE18LYE6JEmv8zZcCZvKfbUm9cSzNQyNo\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x2fa0657dd7b8bc75475a47f64bc04a9adb42236b15d65e6781594ea69a46c3e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7496f42681aed94bf0142a077324e50b86046610c1724e7c12e96cf1c365914a\",\"dweb:/ipfs/QmZvhNdSAAbN4PKPdheAqwpXukUiXp3Q3TdQccDMg2NDTV\"]},\"@openzeppelin/contracts/token/ERC20/utils/ERC1363Utils.sol\":{\"keccak256\":\"0xe644d2ed2640745d91b1a6f826beb5b20d8312ed02bfca4ffec8af0adf6a3ee4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb146e9cf5e140cae6a82074bc44def564fbb8f687946e295ca81a3e7e113ee5\",\"dweb:/ipfs/QmXSD2SMDSuaB76oK3fbbsLSmEPepPtY8omwrVSwa7Gdp2\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x17fc4574e07105b0180ef61f1b3cacd1820a3d37f29a4af1018d0a253c6399b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be46b3e1362dbcadbbb45ec92cdea849dceccea3e2795237f00c123aeae44746\",\"dweb:/ipfs/QmSpyB8mud6xKiZaQnVtEPrxtTHGtyBgjs1PCYk4f2gesd\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"Contracts/EduMetaCoinErc20.sol\":{\"keccak256\":\"0x81657115afd35098bd2611b8844eef893e2eda2787641441b94098ad0d89f1b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3afebe762cd6b8ae4a564d11ce267a485b281d5a95a1acfc9ee81fa5f09ceffd\",\"dweb:/ipfs/QmZk5nFcngAJF9hXsussfL1mqW8YqAP6MPqJP6TgVWLJLZ\"]}},\"version\":1}"}}}}}